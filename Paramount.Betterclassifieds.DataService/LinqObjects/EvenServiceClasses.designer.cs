#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Paramount.DataService.LinqObjects
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ParamountCore")]
	public partial class EvenServiceClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEvent(Event instance);
    partial void UpdateEvent(Event instance);
    partial void DeleteEvent(Event instance);
    partial void InsertEvent_Category(Event_Category instance);
    partial void UpdateEvent_Category(Event_Category instance);
    partial void DeleteEvent_Category(Event_Category instance);
    partial void InsertEvent_Location(Event_Location instance);
    partial void UpdateEvent_Location(Event_Location instance);
    partial void DeleteEvent_Location(Event_Location instance);
    partial void InsertEvent_Ticket(Event_Ticket instance);
    partial void UpdateEvent_Ticket(Event_Ticket instance);
    partial void DeleteEvent_Ticket(Event_Ticket instance);
    #endregion
		
		public EvenServiceClassesDataContext() : 
				base(global::Paramount.DataService.Properties.Settings.Default.ParamountCoreConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EvenServiceClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EvenServiceClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EvenServiceClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EvenServiceClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Event> Events
		{
			get
			{
				return this.GetTable<Event>();
			}
		}
		
		public System.Data.Linq.Table<Event_Category> Event_Categories
		{
			get
			{
				return this.GetTable<Event_Category>();
			}
		}
		
		public System.Data.Linq.Table<Event_Location> Event_Locations
		{
			get
			{
				return this.GetTable<Event_Location>();
			}
		}
		
		public System.Data.Linq.Table<Event_Ticket> Event_Tickets
		{
			get
			{
				return this.GetTable<Event_Ticket>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event")]
	public partial class Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EventId;
		
		private string _EventTitle;
		
		private string _EventDescription;
		
		private int _CategoryId;
		
		private System.Nullable<System.Guid> _DefaultImageId;
		
		private System.DateTime _StartDateTime;
		
		private System.DateTime _EndDateTime;
		
		private bool _IsRepeat;
		
		private bool _DisplayStartDate;
		
		private bool _DisplayEndDate;
		
		private string _TimeZone;
		
		private string _HostedBy;
		
		private string _HostDescription;
		
		private bool _DisplayGoogleMap;
		
		private System.DateTime _DateTimeCreated;
		
		private string _RegionCode;
		
		private string _LocationName;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _Postcode;
		
		private System.Nullable<long> _Latitude;
		
		private System.Nullable<long> _Longitude;
		
		private EntitySet<Event_Ticket> _Event_Tickets;
		
		private EntityRef<Event_Category> _Event_Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(int value);
    partial void OnEventIdChanged();
    partial void OnEventTitleChanging(string value);
    partial void OnEventTitleChanged();
    partial void OnEventDescriptionChanging(string value);
    partial void OnEventDescriptionChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnDefaultImageIdChanging(System.Nullable<System.Guid> value);
    partial void OnDefaultImageIdChanged();
    partial void OnStartDateTimeChanging(System.DateTime value);
    partial void OnStartDateTimeChanged();
    partial void OnEndDateTimeChanging(System.DateTime value);
    partial void OnEndDateTimeChanged();
    partial void OnIsRepeatChanging(bool value);
    partial void OnIsRepeatChanged();
    partial void OnDisplayStartDateChanging(bool value);
    partial void OnDisplayStartDateChanged();
    partial void OnDisplayEndDateChanging(bool value);
    partial void OnDisplayEndDateChanged();
    partial void OnTimeZoneChanging(string value);
    partial void OnTimeZoneChanged();
    partial void OnHostedByChanging(string value);
    partial void OnHostedByChanged();
    partial void OnHostDescriptionChanging(string value);
    partial void OnHostDescriptionChanged();
    partial void OnDisplayGoogleMapChanging(bool value);
    partial void OnDisplayGoogleMapChanged();
    partial void OnDateTimeCreatedChanging(System.DateTime value);
    partial void OnDateTimeCreatedChanged();
    partial void OnRegionCodeChanging(string value);
    partial void OnRegionCodeChanged();
    partial void OnLocationNameChanging(string value);
    partial void OnLocationNameChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnLatitudeChanging(System.Nullable<long> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<long> value);
    partial void OnLongitudeChanged();
    #endregion
		
		public Event()
		{
			this._Event_Tickets = new EntitySet<Event_Ticket>(new Action<Event_Ticket>(this.attach_Event_Tickets), new Action<Event_Ticket>(this.detach_Event_Tickets));
			this._Event_Category = default(EntityRef<Event_Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTitle", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EventTitle
		{
			get
			{
				return this._EventTitle;
			}
			set
			{
				if ((this._EventTitle != value))
				{
					this.OnEventTitleChanging(value);
					this.SendPropertyChanging();
					this._EventTitle = value;
					this.SendPropertyChanged("EventTitle");
					this.OnEventTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDescription", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string EventDescription
		{
			get
			{
				return this._EventDescription;
			}
			set
			{
				if ((this._EventDescription != value))
				{
					this.OnEventDescriptionChanging(value);
					this.SendPropertyChanging();
					this._EventDescription = value;
					this.SendPropertyChanged("EventDescription");
					this.OnEventDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._Event_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultImageId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DefaultImageId
		{
			get
			{
				return this._DefaultImageId;
			}
			set
			{
				if ((this._DefaultImageId != value))
				{
					this.OnDefaultImageIdChanging(value);
					this.SendPropertyChanging();
					this._DefaultImageId = value;
					this.SendPropertyChanged("DefaultImageId");
					this.OnDefaultImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartDateTime
		{
			get
			{
				return this._StartDateTime;
			}
			set
			{
				if ((this._StartDateTime != value))
				{
					this.OnStartDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartDateTime = value;
					this.SendPropertyChanged("StartDateTime");
					this.OnStartDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndDateTime
		{
			get
			{
				return this._EndDateTime;
			}
			set
			{
				if ((this._EndDateTime != value))
				{
					this.OnEndDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EndDateTime = value;
					this.SendPropertyChanged("EndDateTime");
					this.OnEndDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRepeat", DbType="Bit NOT NULL")]
		public bool IsRepeat
		{
			get
			{
				return this._IsRepeat;
			}
			set
			{
				if ((this._IsRepeat != value))
				{
					this.OnIsRepeatChanging(value);
					this.SendPropertyChanging();
					this._IsRepeat = value;
					this.SendPropertyChanged("IsRepeat");
					this.OnIsRepeatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayStartDate", DbType="Bit NOT NULL")]
		public bool DisplayStartDate
		{
			get
			{
				return this._DisplayStartDate;
			}
			set
			{
				if ((this._DisplayStartDate != value))
				{
					this.OnDisplayStartDateChanging(value);
					this.SendPropertyChanging();
					this._DisplayStartDate = value;
					this.SendPropertyChanged("DisplayStartDate");
					this.OnDisplayStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayEndDate", DbType="Bit NOT NULL")]
		public bool DisplayEndDate
		{
			get
			{
				return this._DisplayEndDate;
			}
			set
			{
				if ((this._DisplayEndDate != value))
				{
					this.OnDisplayEndDateChanging(value);
					this.SendPropertyChanging();
					this._DisplayEndDate = value;
					this.SendPropertyChanged("DisplayEndDate");
					this.OnDisplayEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeZone", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string TimeZone
		{
			get
			{
				return this._TimeZone;
			}
			set
			{
				if ((this._TimeZone != value))
				{
					this.OnTimeZoneChanging(value);
					this.SendPropertyChanging();
					this._TimeZone = value;
					this.SendPropertyChanged("TimeZone");
					this.OnTimeZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostedBy", DbType="NVarChar(128)")]
		public string HostedBy
		{
			get
			{
				return this._HostedBy;
			}
			set
			{
				if ((this._HostedBy != value))
				{
					this.OnHostedByChanging(value);
					this.SendPropertyChanging();
					this._HostedBy = value;
					this.SendPropertyChanged("HostedBy");
					this.OnHostedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostDescription", DbType="NVarChar(MAX)")]
		public string HostDescription
		{
			get
			{
				return this._HostDescription;
			}
			set
			{
				if ((this._HostDescription != value))
				{
					this.OnHostDescriptionChanging(value);
					this.SendPropertyChanging();
					this._HostDescription = value;
					this.SendPropertyChanged("HostDescription");
					this.OnHostDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayGoogleMap", DbType="Bit NOT NULL")]
		public bool DisplayGoogleMap
		{
			get
			{
				return this._DisplayGoogleMap;
			}
			set
			{
				if ((this._DisplayGoogleMap != value))
				{
					this.OnDisplayGoogleMapChanging(value);
					this.SendPropertyChanging();
					this._DisplayGoogleMap = value;
					this.SendPropertyChanged("DisplayGoogleMap");
					this.OnDisplayGoogleMapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateTimeCreated
		{
			get
			{
				return this._DateTimeCreated;
			}
			set
			{
				if ((this._DateTimeCreated != value))
				{
					this.OnDateTimeCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateTimeCreated = value;
					this.SendPropertyChanged("DateTimeCreated");
					this.OnDateTimeCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionCode", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string RegionCode
		{
			get
			{
				return this._RegionCode;
			}
			set
			{
				if ((this._RegionCode != value))
				{
					this.OnRegionCodeChanging(value);
					this.SendPropertyChanging();
					this._RegionCode = value;
					this.SendPropertyChanged("RegionCode");
					this.OnRegionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this.OnLocationNameChanging(value);
					this.SendPropertyChanging();
					this._LocationName = value;
					this.SendPropertyChanged("LocationName");
					this.OnLocationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(128)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(128)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(128)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="VarChar(5)")]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="BigInt")]
		public System.Nullable<long> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="BigInt")]
		public System.Nullable<long> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_Event_Ticket", Storage="_Event_Tickets", ThisKey="EventId", OtherKey="EventId")]
		public EntitySet<Event_Ticket> Event_Tickets
		{
			get
			{
				return this._Event_Tickets;
			}
			set
			{
				this._Event_Tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_Category_Event", Storage="_Event_Category", ThisKey="CategoryId", OtherKey="CategoryId", IsForeignKey=true)]
		public Event_Category Event_Category
		{
			get
			{
				return this._Event_Category.Entity;
			}
			set
			{
				Event_Category previousValue = this._Event_Category.Entity;
				if (((previousValue != value) 
							|| (this._Event_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event_Category.Entity = null;
						previousValue.Events.Remove(this);
					}
					this._Event_Category.Entity = value;
					if ((value != null))
					{
						value.Events.Add(this);
						this._CategoryId = value.CategoryId;
					}
					else
					{
						this._CategoryId = default(int);
					}
					this.SendPropertyChanged("Event_Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Event_Tickets(Event_Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Event = this;
		}
		
		private void detach_Event_Tickets(Event_Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Event = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event_Category")]
	public partial class Event_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryId;
		
		private System.Nullable<int> _ParentId;
		
		private string _Title;
		
		private string _Description;
		
		private EntitySet<Event> _Events;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Event_Category()
		{
			this._Events = new EntitySet<Event>(new Action<Event>(this.attach_Events), new Action<Event>(this.detach_Events));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(150)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_Category_Event", Storage="_Events", ThisKey="CategoryId", OtherKey="CategoryId")]
		public EntitySet<Event> Events
		{
			get
			{
				return this._Events;
			}
			set
			{
				this._Events.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.Event_Category = this;
		}
		
		private void detach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.Event_Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event_Location")]
	public partial class Event_Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LocationId;
		
		private string _Name;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _Postcode;
		
		private string _RegionCode;
		
		private System.Nullable<long> _Latitude;
		
		private System.Nullable<long> _Longitude;
		
		private bool _Registered;
		
		private System.DateTime _DateTimeCreated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocationIdChanging(int value);
    partial void OnLocationIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnRegionCodeChanging(string value);
    partial void OnRegionCodeChanged();
    partial void OnLatitudeChanging(System.Nullable<long> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<long> value);
    partial void OnLongitudeChanged();
    partial void OnRegisteredChanging(bool value);
    partial void OnRegisteredChanged();
    partial void OnDateTimeCreatedChanging(System.DateTime value);
    partial void OnDateTimeCreatedChanged();
    #endregion
		
		public Event_Location()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(128)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(128)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(128)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="VarChar(5)")]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionCode", DbType="NVarChar(6)")]
		public string RegionCode
		{
			get
			{
				return this._RegionCode;
			}
			set
			{
				if ((this._RegionCode != value))
				{
					this.OnRegionCodeChanging(value);
					this.SendPropertyChanging();
					this._RegionCode = value;
					this.SendPropertyChanged("RegionCode");
					this.OnRegionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="BigInt")]
		public System.Nullable<long> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="BigInt")]
		public System.Nullable<long> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Registered", DbType="Bit NOT NULL")]
		public bool Registered
		{
			get
			{
				return this._Registered;
			}
			set
			{
				if ((this._Registered != value))
				{
					this.OnRegisteredChanging(value);
					this.SendPropertyChanging();
					this._Registered = value;
					this.SendPropertyChanged("Registered");
					this.OnRegisteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateTimeCreated
		{
			get
			{
				return this._DateTimeCreated;
			}
			set
			{
				if ((this._DateTimeCreated != value))
				{
					this.OnDateTimeCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateTimeCreated = value;
					this.SendPropertyChanged("DateTimeCreated");
					this.OnDateTimeCreatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event_Ticket")]
	public partial class Event_Ticket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EventTicketId;
		
		private int _EventId;
		
		private string _TicketTitle;
		
		private string _TicketDescription;
		
		private string _SaleType;
		
		private decimal _Price;
		
		private int _Quantity;
		
		private System.Nullable<int> _MinimumTicketPerTransaction;
		
		private System.Nullable<int> _MaximumTicketPerTransaction;
		
		private System.Nullable<System.DateTime> _SaleStartDate;
		
		private System.Nullable<System.DateTime> _SaleEndDate;
		
		private EntityRef<Event> _Event;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventTicketIdChanging(int value);
    partial void OnEventTicketIdChanged();
    partial void OnEventIdChanging(int value);
    partial void OnEventIdChanged();
    partial void OnTicketTitleChanging(string value);
    partial void OnTicketTitleChanged();
    partial void OnTicketDescriptionChanging(string value);
    partial void OnTicketDescriptionChanged();
    partial void OnSaleTypeChanging(string value);
    partial void OnSaleTypeChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnMinimumTicketPerTransactionChanging(System.Nullable<int> value);
    partial void OnMinimumTicketPerTransactionChanged();
    partial void OnMaximumTicketPerTransactionChanging(System.Nullable<int> value);
    partial void OnMaximumTicketPerTransactionChanged();
    partial void OnSaleStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSaleStartDateChanged();
    partial void OnSaleEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSaleEndDateChanged();
    #endregion
		
		public Event_Ticket()
		{
			this._Event = default(EntityRef<Event>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTicketId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EventTicketId
		{
			get
			{
				return this._EventTicketId;
			}
			set
			{
				if ((this._EventTicketId != value))
				{
					this.OnEventTicketIdChanging(value);
					this.SendPropertyChanging();
					this._EventTicketId = value;
					this.SendPropertyChanged("EventTicketId");
					this.OnEventTicketIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Int NOT NULL")]
		public int EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					if (this._Event.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TicketTitle
		{
			get
			{
				return this._TicketTitle;
			}
			set
			{
				if ((this._TicketTitle != value))
				{
					this.OnTicketTitleChanging(value);
					this.SendPropertyChanging();
					this._TicketTitle = value;
					this.SendPropertyChanged("TicketTitle");
					this.OnTicketTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketDescription", DbType="NVarChar(128)")]
		public string TicketDescription
		{
			get
			{
				return this._TicketDescription;
			}
			set
			{
				if ((this._TicketDescription != value))
				{
					this.OnTicketDescriptionChanging(value);
					this.SendPropertyChanging();
					this._TicketDescription = value;
					this.SendPropertyChanged("TicketDescription");
					this.OnTicketDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleType", DbType="Char(4) NOT NULL", CanBeNull=false)]
		public string SaleType
		{
			get
			{
				return this._SaleType;
			}
			set
			{
				if ((this._SaleType != value))
				{
					this.OnSaleTypeChanging(value);
					this.SendPropertyChanging();
					this._SaleType = value;
					this.SendPropertyChanged("SaleType");
					this.OnSaleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimumTicketPerTransaction", DbType="Int")]
		public System.Nullable<int> MinimumTicketPerTransaction
		{
			get
			{
				return this._MinimumTicketPerTransaction;
			}
			set
			{
				if ((this._MinimumTicketPerTransaction != value))
				{
					this.OnMinimumTicketPerTransactionChanging(value);
					this.SendPropertyChanging();
					this._MinimumTicketPerTransaction = value;
					this.SendPropertyChanged("MinimumTicketPerTransaction");
					this.OnMinimumTicketPerTransactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaximumTicketPerTransaction", DbType="Int")]
		public System.Nullable<int> MaximumTicketPerTransaction
		{
			get
			{
				return this._MaximumTicketPerTransaction;
			}
			set
			{
				if ((this._MaximumTicketPerTransaction != value))
				{
					this.OnMaximumTicketPerTransactionChanging(value);
					this.SendPropertyChanging();
					this._MaximumTicketPerTransaction = value;
					this.SendPropertyChanged("MaximumTicketPerTransaction");
					this.OnMaximumTicketPerTransactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SaleStartDate
		{
			get
			{
				return this._SaleStartDate;
			}
			set
			{
				if ((this._SaleStartDate != value))
				{
					this.OnSaleStartDateChanging(value);
					this.SendPropertyChanging();
					this._SaleStartDate = value;
					this.SendPropertyChanged("SaleStartDate");
					this.OnSaleStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SaleEndDate
		{
			get
			{
				return this._SaleEndDate;
			}
			set
			{
				if ((this._SaleEndDate != value))
				{
					this.OnSaleEndDateChanging(value);
					this.SendPropertyChanging();
					this._SaleEndDate = value;
					this.SendPropertyChanged("SaleEndDate");
					this.OnSaleEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_Event_Ticket", Storage="_Event", ThisKey="EventId", OtherKey="EventId", IsForeignKey=true)]
		public Event Event
		{
			get
			{
				return this._Event.Entity;
			}
			set
			{
				Event previousValue = this._Event.Entity;
				if (((previousValue != value) 
							|| (this._Event.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event.Entity = null;
						previousValue.Event_Tickets.Remove(this);
					}
					this._Event.Entity = value;
					if ((value != null))
					{
						value.Event_Tickets.Add(this);
						this._EventId = value.EventId;
					}
					else
					{
						this._EventId = default(int);
					}
					this.SendPropertyChanged("Event");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
