@using Paramount
@model Paramount.Betterclassifieds.Presentation.ViewModels.ChangePasswordView

@{
    ViewBag.Title = "Change Password";
    Layout = Url.ClientUrl("~/Views/Shared/_ApplicationLayout.cshtml");
}

<h2>Change Password</h2>

@if (Model.UpdatedSuccessfully)
{
    <div class="alert alert-success alert-dismissable">
        <button type="button" class="close" data-dismiss="alert">
            <span aria-hidden="true">×</span><span class="sr-only">Close</span>
        </button>
        Password changed successfully.
    </div>
}

@if (Model.PasswordIsNotValid)
{
    <div class="alert alert-danger alert-dismissable">
        <button type="button" class="close" data-dismiss="true">
            <span aria-hidden="true">×</span><span class="sr-only">Close</span>
        </button>
        Your current password is not correct.
    </div>
}

<form role="form" method="POST" action="@Url.Action("ChangePassword", "Account")">
    @Html.AntiForgeryToken()
    <div class="form-group">
        @Html.LabelFor(m => m.OldPassword)
        @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control", required = "", autocomplete = "off", @pattern = ".{6,50}" })
        @Html.ValidationMessageFor(m => m.OldPassword)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.NewPassword)
        @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", required = "", autocomplete = "off" })
        @Html.ValidationMessageFor(m => m.NewPassword)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmNewPassword)
        @Html.PasswordFor(m => m.ConfirmNewPassword, new { @class = "form-control", required = "", autocomplete = "off" })
        @Html.ValidationMessageFor(m => m.ConfirmNewPassword)
    </div>
    
    <div class="form-group">
        <button type="submit" id="btnRegister" class="btn btn-default">Update Password</button>
    </div>
</form>
