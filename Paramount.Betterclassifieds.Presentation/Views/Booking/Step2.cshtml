@using Paramount
@using Paramount.Betterclassifieds.Presentation.Framework
@model Paramount.Betterclassifieds.Presentation.ViewModels.Booking.Step2View

@{
    ViewBag.Title = "Classifieds - Place new Ad";
    Layout = @Url.ClientUrl("~/Views/Shared/_ApplicationLayout.cshtml");
}

<div class="container">
    <ul class="nav nav-tabs" role="tablist">
        <li><a href="#">1</a></li>
        <li class="active"><a href="#">Step 2</a></li>
        <li><a href="#">3</a></li>
        <li><a href="#">4</a></li>
    </ul>

    <form role="form" id="adDesignForm" action="@Url.Action("Step2", "Booking")" method="POST">
        @Html.AntiForgeryToken()

        <div class="row top-buffer-20">
            <div class="col-xs-12">

                <div class="bs-callout bs-callout-info">
                    <h4>Online Ad Details</h4>
                    <p>Ok. You might want to entice the readers with an impact heading.</p>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.OnlineAdHeading)
                    @Html.BootstrapLargeTextBoxFor(m => m.OnlineAdHeading)
                    @Html.ValidationMessageFor(m => m.OnlineAdHeading)
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.OnlineAdDescription)
                    @Html.BootstrapLargeTextAreaFor(m => m.OnlineAdDescription, 8, new Dictionary<string, object> { { "class", "markdown-editor" }, { "data-provide", "markdown-editable" } })
                    @Html.ValidationMessageFor(m => m.OnlineAdDescription)
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.OnlineAdContactName)
                    @Html.BootstrapLargeTextBoxFor(m => m.OnlineAdContactName)
                    @Html.ValidationMessageFor(m => m.OnlineAdContactName)
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.OnlineAdEmail)
                    @Html.BootstrapLargeTextBoxFor(m => m.OnlineAdEmail)
                    @Html.ValidationMessageFor(m => m.OnlineAdEmail)
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.OnlineAdPhone)
                    @Html.BootstrapLargeTextBoxFor(m => m.OnlineAdPhone)
                    @Html.ValidationMessageFor(m => m.OnlineAdPhone)
                </div>

                <div class="panel panel-default" id="onlineImages">
                    <div class="panel-heading">
                        <span class="btn btn-success fileinput-button" data-bind="css : { hidden : !maxLimitNotReached() }">
                            <i class="glyphicon glyphicon-plus"></i>
                            <span>Select images...</span>
                            <!-- The file input field used as target for the file upload widget -->
                            <input id="fileupload" type="file" name="files[]" multiple>
                        </span>
                        
                        @if (Model.MaxOnlineImages.HasValue)
                        {
                            <span>You can upload up to @Model.MaxOnlineImages images.</span>
                        }
                    </div>
                    <div class="panel-body upload-thumbs">
                        <div class="alert alert-danger" data-bind="text : errorMsg, css : { hidden : errorMsg().length == 0 }"></div>
                        <div class="progress hidden">
                            <div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;">
                                <span class="sr-only">0% complete</span>
                            </div>
                        </div>

                        <div class="row" data-bind="foreach: adImages">
                            <div class="col-lg-2 col-md-3 col-sm-4 col-xs-6">
                                <img class="img-thumbnail" data-bind="attr: {src: '/iflog/Image/' + $data + '/140/140'}" />
                                <button class="btn btn-warning btn-block" title="Remove" data-bind="click: $parent.removeImage">
                                    <span class="glyphicon glyphicon-trash"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @if (Model.IsLineAdIncluded)
        {
            <div class="row top-buffer-10">
                <div class="col-xs-12">
                    <div class="bs-callout bs-callout-info">
                        <h4>Print Ad Details</h4>
                        <p>Coming soon</p>
                    </div>
                </div>
            </div>
        }

        @*Pager*@
        <ul class="pager">
            <li class="previous">
                <button id="btnPrev" class="btn btn-large btn-default js-load" data-nav='@Url.Action("Step1")'>&larr; Previous</button>
            </li>
            <li class="next">
                <button id="btnSubmit" type="submit" class="btn btn-large btn-default">Next &rarr;</button>
            </li>
        </ul>
    </form>
</div>

@section Scripts{

    <script>
        (function($) {

            $(function() {
                $('.markdown-editor').markdown({
                    autofocus: false,
                    savable: false
                });

                var OnlineAd = function(data, maxImages) {
                    // Images
                    var self = this;
                    self.adImages = ko.observableArray(data);
                    self.errorMsg = ko.observable("");
                    self.removeImage = function(img) {
                        $.post('@Url.Action("RemoveOnlineImage")', { documentId: img }, function(result) {
                            if (result.removed) {
                                self.adImages.remove(img);
                            }
                        });
                        $('#fileupload').removeClass('hidden');
                    };
                    self.maxImages = ko.observable(maxImages);
                    self.maxLimitNotReached = function() {
                        return self.adImages().length < self.maxImages();
                    };
                };

                var rawJson = @Html.Raw(Model.OnlineAdImages.ToJsonString());
                var onlineAdModel = new OnlineAd(rawJson, @Model.MaxOnlineImages);
                
                
                ko.applyBindings(onlineAdModel);

                var $imageUploadProgress = $('#onlineImages .progress-bar');

                var upload = $('#fileupload').fileupload({
                    dataType: 'json',
                    url: '@Url.Action("UploadOnlineImage", "Booking")',
                    autoUpload: true,
                    singleFileUploads: false
                });
                
                upload.on('fileuploaddone', function(e, data) {
                    if (data.result.documentId) {
                        onlineAdModel.adImages.push(data.result.documentId);
                    } else {
                        onlineAdModel.errorMsg(data.result.errorMsg);
                    }
                });

                //upload.on('fileuploadprogressall', function(e, data) {
                    //console.log('progress ' + data.loaded);
                    //console.log('progress ' + data.total);
                //});
                
                //upload.on('fileuploadstart', function(e, data) {
                //    $imageUploadProgress.parent().removeClass('hidden');
                //});

                upload.on('fileuploadadd', function(e, data) {
                    onlineAdModel.errorMsg("");
                    if (data.files.length > 1) {
                        onlineAdModel.errorMsg("Please select one image at a time.");
                        return false;
                    }
                    return true;
                });
            }); 
        })(jQuery);
    </script>
}