@using Paramount
@using Paramount.Betterclassifieds.Presentation.Framework

@model EditAdDetailsViewModel

@{
    ViewBag.Title = "Update Ad Details";
    Layout = "~/Views/Shared/_ApplicationLayout.cshtml";

    var onlineImgSizeWarning = "Max image size " + Model.MaxImageUploadInMegabytes.ToString("F1") + " Megabytes.";
    if (Model.MaxOnlineImages.HasValue)
    {
        onlineImgSizeWarning += " You can upload up to " + Model.MaxOnlineImages + " images.";
    }

}

@if (ViewBag.Updated)
{
    @Alert("Details have been updated successfully", "success")
}

@if (ViewBag.Invalid)
{
    @Alert("Ooops. Some details seem to be incorrect. Please check below", "danger")
}

@Html.Partial("_CropImage")

<div class="container top-buffer-40">
    <form role="form" id="editAdForm" action="@Url.Action("Details", "EditAd")" method="POST">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.IsFutureScheduledAd)

        <div class="row top-buffer-20">
            <div class="col-xs-12">
                <div class="bs-callout bs-callout-info">
                    <h4>Online Ad Details</h4>
                    <p>
                        Please provide at least a heading and description for your online ad.
                    </p>
                </div>

                @*Heading*@
                <div class="form-group">
                    @Html.LabelFor(m => m.OnlineAdHeading)
                    @Html.BootstrapLargeTextBoxFor(m => m.OnlineAdHeading)
                    @Html.ValidationMessageFor(m => m.OnlineAdHeading)
                </div>

                @*Description*@
                <div class="form-group">
                    @Html.LabelFor(m => m.OnlineAdDescription)
                    @Html.BootstrapLargeTextAreaFor(m => m.OnlineAdDescription, 8)
                    @Html.ValidationMessageFor(m => m.OnlineAdDescription)
                </div>

                @*Contact Details*@
                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.OnlineAdContactName)
                            @Html.BootstrapLargeTextBoxFor(m => m.OnlineAdContactName)
                            @Html.ValidationMessageFor(m => m.OnlineAdContactName)
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.OnlineAdContactEmail)
                            @Html.BootstrapLargeTextBoxFor(m => m.OnlineAdContactEmail)
                            @Html.ValidationMessageFor(m => m.OnlineAdContactEmail)
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.OnlineAdContactPhone)
                            @Html.BootstrapLargeTextBoxFor(m => m.OnlineAdContactPhone, new Dictionary<string, object> { { "maxLength", "10" } })
                            @Html.ValidationMessageFor(m => m.OnlineAdContactPhone)
                        </div>
                    </div>
                </div>

                @*Location and Area*@
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.OnlineAdLocationId)
                            <select id="OnlineAdLocationId" name="OnlineAdLocationId"
                                    class="form-control input-lg js-select"
                                    data-selected="@Model.OnlineAdLocationId"
                                    data-url="@Url.LocationOptions()"></select>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.OnlineAdLocationAreaId)
                            <select id="OnlineAdLocationAreaId" name="OnlineAdLocationAreaId"
                                    class="form-control input-lg js-select"
                                    data-selected="@Model.OnlineAdLocationAreaId"
                                    data-url="@Url.LocationAreaOptions(Model.OnlineAdLocationId)"></select>
                        </div>
                    </div>
                </div>

                @*Photos*@
                <div class="row top-buffer-20">
                    <div class="col-xs-12">
                        <div class="bs-callout bs-callout-info">
                            <h4>Online Photos</h4>
                            <p>Enhance your ad with impact photos. Please Note: Uploading and removing images will update your ad instantly.</p>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default" id="onlineImages">

                    <div class="panel-heading">
                        Online Images &nbsp;
                        <span class="btn btn-success fileinput-button" data-bind="css : { hidden : !maxLimitNotReached() }">
                            <i class="fa fa-upload"></i>
                            <span>Upload Image</span>
                            <!-- The file input field used as target for the file upload widget -->
                            <input id="fileupload" type="file" name="files[]" multiple>
                        </span>
                    </div>
                    <div class="panel-body upload-thumbs">

                        @Alert(onlineImgSizeWarning, "warning", false)

                        <div class="alert alert-danger" data-bind="text : errorMsg, css : { hidden : errorMsg().length == 0 }"></div>
                        <div class="progress progress-striped active" data-bind="visible: uploadImageInProgress">
                            <div class="progress-bar active" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;">
                                <span data-bind="visible: uploadImageInProgress">Uploading...</span>
                            </div>
                        </div>

                        <div class="row" data-bind="foreach: adImages">
                            <div class="col-lg-2 col-md-3 col-sm-4 col-xs-6">
                                <div class="thumbnail">
                                    <img data-bind="attr: {src: $parent.getImageUrl($data) }" />
                                    <div class="caption">
                                        <button class="btn btn-warning btn-block" title="Remove" data-bind="click: $parent.removeImage">
                                            <span class="glyphicon glyphicon-trash"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

                @*Online Schedule*@
                <div class="row top-buffer-20">
                    <div class="col-xs-12">
                        <div class="bs-callout bs-callout-info">
                            <h4>Online Schedule</h4>
                            @if (Model.IsFutureScheduledAd)
            {
                                <p>
                                    You may bring your ad forward or schedule it for later if it has not started...
                                    It will be available for @Model.ConfigDurationDays days from the date you select below.
                                </p>
                            }
                            else
                            {
                                @Alert("Your ad is currently active. The option to adjust the schedule is not available at this time.", "info", false)
                            }
                        </div>

                        @if (Model.IsFutureScheduledAd)
                        {
                            <div class="form-group">
                                @Html.LabelFor(m => m.StartDate)
                                @Html.BootstrapCalendar(m => m.StartDate)
                                @Html.ValidationMessageFor(m => m.StartDate)
                            </div>
                        }
                    </div>
                </div>


                <hr />

                @*Line Ad Details*@
                @if (Model.IsLineAdIncluded)
                {
                    @Html.HiddenFor(m => m.IsLineAdIncluded)

                    <div class="row top-buffer-10">
                        <div class="col-xs-12">
                            <div class="bs-callout bs-callout-info">
                                <h4>Print Ad Details</h4>
                                <p>You can update the print details that have been booked.</p>
                            </div>
                        </div>
                    </div>

                    if (Model.HeaderPurchased)
                    {
                        @Html.HiddenFor(m => m.HeaderPurchased)
                        <div class="form-group">
                            @Html.LabelFor(m => m.LineAdHeader)
                            @Html.BootstrapLargeTextBoxFor(m => m.LineAdHeader, attributes: new Dictionary<string, object> { { "data-bind", "value: lineAdHeader" } })
                            @Html.ValidationMessageFor(m => m.LineAdHeader)
                        </div>
                    }


                    @Html.HiddenFor(m => m.LineWordsPurchased)
                    <div class="form-group">
                        @Html.LabelFor(m => m.LineAdText)
                        @Html.BootstrapLargeTextAreaFor(m => m.LineAdText, 5, attributes: new Dictionary<string, object>
        {
            {"data-bind", "value: lineAdText, html: lineAdText, valueUpdate: ['afterkeydown', 'input']"}
        })
                        <span class="help-block">
                            <strong>Puchased Words @Model.LineWordsPurchased.</strong>
                            Current Word Count: <span data-bind="text: wordCount"></span>.
                        </span>
                        @Html.ValidationMessageFor(m => m.LineAdText)
                    </div>

                    if (Model.PhotoPurchased)
                    {
                        <input type="hidden" name="LineAdImageId" id="LineAdImageId" data-bind="value : lineAdImageId" />
                        @Html.HiddenFor(m => m.PhotoPurchased)

                        <div class="panel panel-default">
                            <div class="panel-heading">
                                Print Image &nbsp;
                                <span class="btn btn-default btn-success fileinput-button" data-bind="visible: lineAdImageId() === ''">
                                    <i class="fa fa-upload"></i>
                                    <span>Upload for Print</span>
                                    <!-- The file input field used as target for the file upload widget -->
                                    <input id="fileuploadPrint" type="file" name="files[]" multiple>
                                </span>
                            </div>
                            <div class="panel-body">

                                <div class="row" id="printImageSelector">
                                    <div class="col-xs-12">
                                        <div class="alert alert-warning">
                                            Max image size @Model.MaxImageUploadInMegabytes.ToString("F1") MB.
                                            Print image requires specific dimension (aspect ratio). Please upload a new
                                            image to prepare it for print.
                                        </div>
                                    </div>
                                </div>

                                <div class="row" id="printImagePreview" data-bind="visible: lineAdImageId() !== ''">
                                    <div class="col-lg-2 col-md-3 col-sm-4 col-xs-6">
                                        <div class="thumbnail">
                                            <input type="hidden" name="LineAdImageId" id="LineAdImageId" data-bind="value : lineAdImageId" />
                                            <img id="printImg" data-bind="attr : { src : lineAdImgUrl }" />
                                            <div class="caption">
                                                <button class="btn btn-warning btn-block" title="Remove" data-bind="click: removePrintImage">
                                                    <span class="glyphicon glyphicon-trash"></span>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row top-buffer-10">
                                    <div class="col-xs-12">
                                        <div id="fileUploadPrintProgress" class="progress progress-striped active no-display">
                                            <div class="progress-bar active" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;">
                                                <span>Uploading...</span>
                                            </div>
                                        </div>

                                    </div>
                                </div>

                            </div>
                        </div>
                    }
                }

                @*Submit Buttons*@<div class="form-group">
                    <button type="submit" id="btnUpdateAd" class="btn btn-default pull-right">Update Ad Details</button>
                </div>

            </div>
        </div>

    </form>

</div>

@section Scripts{

    <script>
        (function($, $p, $models) {
            var adService = new $p.AdDesignService(@Model.Id);
            var lineAdJson = {};
            @if (Model.IsLineAdIncluded)
            {
                <text>lineAdJson = @Html.Raw(Model.LineAdAsJson); </text>
            }

            var designOptions = {
                adService: adService,
                onlineImages: @Html.Raw(Model.OnlineAdImages.ToJsonString()),
                maxImages : @Model.MaxOnlineImages,
                lineAd : lineAdJson,
                updateRates : false
            };

            var designAdModel = new $models.DesignAd(designOptions);
            $p.editAd.init(designAdModel, adService);

        })(jQuery, $paramount, $paramount.models);
    </script>
}

@helper Alert(string messsage, string type, bool dismissable = true)
{
    <div class="alert alert-@type @(dismissable ? Html.Raw("alert-dismissable") : Html.Raw(""))">

        @if (dismissable)
        {
            <button type="button" class="close" data-dismiss="alert">
                <span aria-hidden="true">×</span><span class="sr-only">Close</span>
            </button>
        }
        @messsage
    </div>
}