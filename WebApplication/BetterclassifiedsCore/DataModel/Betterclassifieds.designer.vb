'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18052
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection

Namespace DataModel
	
	<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="iFlog")>  _
	Partial Public Class BetterclassifiedsDataContext
		Inherits System.Data.Linq.DataContext
		
		Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertAd(instance As Ad)
    End Sub
    Partial Private Sub UpdateAd(instance As Ad)
    End Sub
    Partial Private Sub DeleteAd(instance As Ad)
    End Sub
    Partial Private Sub InsertAppSetting(instance As AppSetting)
    End Sub
    Partial Private Sub UpdateAppSetting(instance As AppSetting)
    End Sub
    Partial Private Sub DeleteAppSetting(instance As AppSetting)
    End Sub
    Partial Private Sub InsertBookEntry(instance As BookEntry)
    End Sub
    Partial Private Sub UpdateBookEntry(instance As BookEntry)
    End Sub
    Partial Private Sub DeleteBookEntry(instance As BookEntry)
    End Sub
    Partial Private Sub InsertMainCategory(instance As MainCategory)
    End Sub
    Partial Private Sub UpdateMainCategory(instance As MainCategory)
    End Sub
    Partial Private Sub DeleteMainCategory(instance As MainCategory)
    End Sub
    Partial Private Sub InsertPublicationAdType(instance As PublicationAdType)
    End Sub
    Partial Private Sub UpdatePublicationAdType(instance As PublicationAdType)
    End Sub
    Partial Private Sub DeletePublicationAdType(instance As PublicationAdType)
    End Sub
    Partial Private Sub InsertPublicationCategory(instance As PublicationCategory)
    End Sub
    Partial Private Sub UpdatePublicationCategory(instance As PublicationCategory)
    End Sub
    Partial Private Sub DeletePublicationCategory(instance As PublicationCategory)
    End Sub
    Partial Private Sub InsertPublicationRate(instance As PublicationRate)
    End Sub
    Partial Private Sub UpdatePublicationRate(instance As PublicationRate)
    End Sub
    Partial Private Sub DeletePublicationRate(instance As PublicationRate)
    End Sub
    Partial Private Sub InsertPublicationType(instance As PublicationType)
    End Sub
    Partial Private Sub UpdatePublicationType(instance As PublicationType)
    End Sub
    Partial Private Sub DeletePublicationType(instance As PublicationType)
    End Sub
    Partial Private Sub InsertAdType(instance As AdType)
    End Sub
    Partial Private Sub UpdateAdType(instance As AdType)
    End Sub
    Partial Private Sub DeleteAdType(instance As AdType)
    End Sub
    Partial Private Sub InsertTransaction(instance As Transaction)
    End Sub
    Partial Private Sub UpdateTransaction(instance As Transaction)
    End Sub
    Partial Private Sub DeleteTransaction(instance As Transaction)
    End Sub
    Partial Private Sub InsertPublicationSpecialRate(instance As PublicationSpecialRate)
    End Sub
    Partial Private Sub UpdatePublicationSpecialRate(instance As PublicationSpecialRate)
    End Sub
    Partial Private Sub DeletePublicationSpecialRate(instance As PublicationSpecialRate)
    End Sub
    Partial Private Sub InsertBaseRate(instance As BaseRate)
    End Sub
    Partial Private Sub UpdateBaseRate(instance As BaseRate)
    End Sub
    Partial Private Sub DeleteBaseRate(instance As BaseRate)
    End Sub
    Partial Private Sub InsertSpecialRate(instance As SpecialRate)
    End Sub
    Partial Private Sub UpdateSpecialRate(instance As SpecialRate)
    End Sub
    Partial Private Sub DeleteSpecialRate(instance As SpecialRate)
    End Sub
    Partial Private Sub InsertAdGraphic(instance As AdGraphic)
    End Sub
    Partial Private Sub UpdateAdGraphic(instance As AdGraphic)
    End Sub
    Partial Private Sub DeleteAdGraphic(instance As AdGraphic)
    End Sub
    Partial Private Sub InsertLocationArea(instance As LocationArea)
    End Sub
    Partial Private Sub UpdateLocationArea(instance As LocationArea)
    End Sub
    Partial Private Sub DeleteLocationArea(instance As LocationArea)
    End Sub
    Partial Private Sub InsertLocation(instance As Location)
    End Sub
    Partial Private Sub UpdateLocation(instance As Location)
    End Sub
    Partial Private Sub DeleteLocation(instance As Location)
    End Sub
    Partial Private Sub InsertAdBooking(instance As AdBooking)
    End Sub
    Partial Private Sub UpdateAdBooking(instance As AdBooking)
    End Sub
    Partial Private Sub DeleteAdBooking(instance As AdBooking)
    End Sub
    Partial Private Sub InsertOnlineAd(instance As OnlineAd)
    End Sub
    Partial Private Sub UpdateOnlineAd(instance As OnlineAd)
    End Sub
    Partial Private Sub DeleteOnlineAd(instance As OnlineAd)
    End Sub
    Partial Private Sub InsertPublication(instance As Publication)
    End Sub
    Partial Private Sub UpdatePublication(instance As Publication)
    End Sub
    Partial Private Sub DeletePublication(instance As Publication)
    End Sub
    Partial Private Sub InsertEdition(instance As Edition)
    End Sub
    Partial Private Sub UpdateEdition(instance As Edition)
    End Sub
    Partial Private Sub DeleteEdition(instance As Edition)
    End Sub
    Partial Private Sub InsertTempBookingRecord(instance As TempBookingRecord)
    End Sub
    Partial Private Sub UpdateTempBookingRecord(instance As TempBookingRecord)
    End Sub
    Partial Private Sub DeleteTempBookingRecord(instance As TempBookingRecord)
    End Sub
    Partial Private Sub InsertWebAdSpace(instance As WebAdSpace)
    End Sub
    Partial Private Sub UpdateWebAdSpace(instance As WebAdSpace)
    End Sub
    Partial Private Sub DeleteWebAdSpace(instance As WebAdSpace)
    End Sub
    Partial Private Sub InsertWebAdSpaceSetting(instance As WebAdSpaceSetting)
    End Sub
    Partial Private Sub UpdateWebAdSpaceSetting(instance As WebAdSpaceSetting)
    End Sub
    Partial Private Sub DeleteWebAdSpaceSetting(instance As WebAdSpaceSetting)
    End Sub
    Partial Private Sub InsertEnquiryDocument(instance As EnquiryDocument)
    End Sub
    Partial Private Sub UpdateEnquiryDocument(instance As EnquiryDocument)
    End Sub
    Partial Private Sub DeleteEnquiryDocument(instance As EnquiryDocument)
    End Sub
    Partial Private Sub InsertEnquiryType(instance As EnquiryType)
    End Sub
    Partial Private Sub UpdateEnquiryType(instance As EnquiryType)
    End Sub
    Partial Private Sub DeleteEnquiryType(instance As EnquiryType)
    End Sub
    Partial Private Sub InsertOnlineAdEnquiry(instance As OnlineAdEnquiry)
    End Sub
    Partial Private Sub UpdateOnlineAdEnquiry(instance As OnlineAdEnquiry)
    End Sub
    Partial Private Sub DeleteOnlineAdEnquiry(instance As OnlineAdEnquiry)
    End Sub
    Partial Private Sub InsertSupportEnquiry(instance As SupportEnquiry)
    End Sub
    Partial Private Sub UpdateSupportEnquiry(instance As SupportEnquiry)
    End Sub
    Partial Private Sub DeleteSupportEnquiry(instance As SupportEnquiry)
    End Sub
    Partial Private Sub InsertWebContent(instance As WebContent)
    End Sub
    Partial Private Sub UpdateWebContent(instance As WebContent)
    End Sub
    Partial Private Sub DeleteWebContent(instance As WebContent)
    End Sub
    Partial Private Sub InsertAdDesign(instance As AdDesign)
    End Sub
    Partial Private Sub UpdateAdDesign(instance As AdDesign)
    End Sub
    Partial Private Sub DeleteAdDesign(instance As AdDesign)
    End Sub
    Partial Private Sub InsertRatecard(instance As Ratecard)
    End Sub
    Partial Private Sub UpdateRatecard(instance As Ratecard)
    End Sub
    Partial Private Sub DeleteRatecard(instance As Ratecard)
    End Sub
    Partial Private Sub InsertLineAdColourCode(instance As LineAdColourCode)
    End Sub
    Partial Private Sub UpdateLineAdColourCode(instance As LineAdColourCode)
    End Sub
    Partial Private Sub DeleteLineAdColourCode(instance As LineAdColourCode)
    End Sub
    Partial Private Sub InsertLineAdTheme(instance As LineAdTheme)
    End Sub
    Partial Private Sub UpdateLineAdTheme(instance As LineAdTheme)
    End Sub
    Partial Private Sub DeleteLineAdTheme(instance As LineAdTheme)
    End Sub
    Partial Private Sub InsertLineAd(instance As LineAd)
    End Sub
    Partial Private Sub UpdateLineAd(instance As LineAd)
    End Sub
    Partial Private Sub DeleteLineAd(instance As LineAd)
    End Sub
    Partial Private Sub InsertAdBookingExtension(instance As AdBookingExtension)
    End Sub
    Partial Private Sub UpdateAdBookingExtension(instance As AdBookingExtension)
    End Sub
    Partial Private Sub DeleteAdBookingExtension(instance As AdBookingExtension)
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New(Global.BetterclassifiedsCore.My.MySettings.Default.iFlogConnectionString, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public ReadOnly Property Ads() As System.Data.Linq.Table(Of Ad)
			Get
				Return Me.GetTable(Of Ad)
			End Get
		End Property
		
		Public ReadOnly Property AppSettings() As System.Data.Linq.Table(Of AppSetting)
			Get
				Return Me.GetTable(Of AppSetting)
			End Get
		End Property
		
		Public ReadOnly Property BookEntries() As System.Data.Linq.Table(Of BookEntry)
			Get
				Return Me.GetTable(Of BookEntry)
			End Get
		End Property
		
		Public ReadOnly Property MainCategories() As System.Data.Linq.Table(Of MainCategory)
			Get
				Return Me.GetTable(Of MainCategory)
			End Get
		End Property
		
		Public ReadOnly Property PublicationAdTypes() As System.Data.Linq.Table(Of PublicationAdType)
			Get
				Return Me.GetTable(Of PublicationAdType)
			End Get
		End Property
		
		Public ReadOnly Property PublicationCategories() As System.Data.Linq.Table(Of PublicationCategory)
			Get
				Return Me.GetTable(Of PublicationCategory)
			End Get
		End Property
		
		Public ReadOnly Property PublicationRates() As System.Data.Linq.Table(Of PublicationRate)
			Get
				Return Me.GetTable(Of PublicationRate)
			End Get
		End Property
		
		Public ReadOnly Property PublicationTypes() As System.Data.Linq.Table(Of PublicationType)
			Get
				Return Me.GetTable(Of PublicationType)
			End Get
		End Property
		
		Public ReadOnly Property AdTypes() As System.Data.Linq.Table(Of AdType)
			Get
				Return Me.GetTable(Of AdType)
			End Get
		End Property
		
		Public ReadOnly Property Transactions() As System.Data.Linq.Table(Of Transaction)
			Get
				Return Me.GetTable(Of Transaction)
			End Get
		End Property
		
		Public ReadOnly Property PublicationSpecialRates() As System.Data.Linq.Table(Of PublicationSpecialRate)
			Get
				Return Me.GetTable(Of PublicationSpecialRate)
			End Get
		End Property
		
		Public ReadOnly Property BaseRates() As System.Data.Linq.Table(Of BaseRate)
			Get
				Return Me.GetTable(Of BaseRate)
			End Get
		End Property
		
		Public ReadOnly Property SpecialRates() As System.Data.Linq.Table(Of SpecialRate)
			Get
				Return Me.GetTable(Of SpecialRate)
			End Get
		End Property
		
		Public ReadOnly Property AdGraphics() As System.Data.Linq.Table(Of AdGraphic)
			Get
				Return Me.GetTable(Of AdGraphic)
			End Get
		End Property
		
		Public ReadOnly Property LocationAreas() As System.Data.Linq.Table(Of LocationArea)
			Get
				Return Me.GetTable(Of LocationArea)
			End Get
		End Property
		
		Public ReadOnly Property Locations() As System.Data.Linq.Table(Of Location)
			Get
				Return Me.GetTable(Of Location)
			End Get
		End Property
		
		Public ReadOnly Property AdBookings() As System.Data.Linq.Table(Of AdBooking)
			Get
				Return Me.GetTable(Of AdBooking)
			End Get
		End Property
		
		Public ReadOnly Property OnlineAds() As System.Data.Linq.Table(Of OnlineAd)
			Get
				Return Me.GetTable(Of OnlineAd)
			End Get
		End Property
		
		Public ReadOnly Property Publications() As System.Data.Linq.Table(Of Publication)
			Get
				Return Me.GetTable(Of Publication)
			End Get
		End Property
		
		Public ReadOnly Property Editions() As System.Data.Linq.Table(Of Edition)
			Get
				Return Me.GetTable(Of Edition)
			End Get
		End Property
		
		Public ReadOnly Property Invoices() As System.Data.Linq.Table(Of Invoice)
			Get
				Return Me.GetTable(Of Invoice)
			End Get
		End Property
		
		Public ReadOnly Property TempBookingRecords() As System.Data.Linq.Table(Of TempBookingRecord)
			Get
				Return Me.GetTable(Of TempBookingRecord)
			End Get
		End Property
		
		Public ReadOnly Property WebAdSpaces() As System.Data.Linq.Table(Of WebAdSpace)
			Get
				Return Me.GetTable(Of WebAdSpace)
			End Get
		End Property
		
		Public ReadOnly Property WebAdSpaceSettings() As System.Data.Linq.Table(Of WebAdSpaceSetting)
			Get
				Return Me.GetTable(Of WebAdSpaceSetting)
			End Get
		End Property
		
		Public ReadOnly Property EnquiryDocuments() As System.Data.Linq.Table(Of EnquiryDocument)
			Get
				Return Me.GetTable(Of EnquiryDocument)
			End Get
		End Property
		
		Public ReadOnly Property EnquiryTypes() As System.Data.Linq.Table(Of EnquiryType)
			Get
				Return Me.GetTable(Of EnquiryType)
			End Get
		End Property
		
		Public ReadOnly Property OnlineAdEnquiries() As System.Data.Linq.Table(Of OnlineAdEnquiry)
			Get
				Return Me.GetTable(Of OnlineAdEnquiry)
			End Get
		End Property
		
		Public ReadOnly Property SupportEnquiries() As System.Data.Linq.Table(Of SupportEnquiry)
			Get
				Return Me.GetTable(Of SupportEnquiry)
			End Get
		End Property
		
		Public ReadOnly Property WebContents() As System.Data.Linq.Table(Of WebContent)
			Get
				Return Me.GetTable(Of WebContent)
			End Get
		End Property
		
		Public ReadOnly Property AdDesigns() As System.Data.Linq.Table(Of AdDesign)
			Get
				Return Me.GetTable(Of AdDesign)
			End Get
		End Property
		
		Public ReadOnly Property Ratecards() As System.Data.Linq.Table(Of Ratecard)
			Get
				Return Me.GetTable(Of Ratecard)
			End Get
		End Property
		
		Public ReadOnly Property LineAdColourCodes() As System.Data.Linq.Table(Of LineAdColourCode)
			Get
				Return Me.GetTable(Of LineAdColourCode)
			End Get
		End Property
		
		Public ReadOnly Property LineAdThemes() As System.Data.Linq.Table(Of LineAdTheme)
			Get
				Return Me.GetTable(Of LineAdTheme)
			End Get
		End Property
		
		Public ReadOnly Property LineAds() As System.Data.Linq.Table(Of LineAd)
			Get
				Return Me.GetTable(Of LineAd)
			End Get
		End Property
		
		Public ReadOnly Property AdBookingExtensions() As System.Data.Linq.Table(Of AdBookingExtension)
			Get
				Return Me.GetTable(Of AdBookingExtension)
			End Get
		End Property
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spGetMainParentCategories")>  _
		Public Function spGetMainParentCategories() As ISingleResult(Of MainCategory)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
			Return CType(result.ReturnValue,ISingleResult(Of MainCategory))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spSpecialRatesByCategory")>  _
		Public Function spSpecialRatesByCategory(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal mainCategoryId As System.Nullable(Of Integer)) As ISingleResult(Of spSpecialRatesByCategoryResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), mainCategoryId)
			Return CType(result.ReturnValue,ISingleResult(Of spSpecialRatesByCategoryResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spMainCategoryAdCount")>  _
		Public Function spMainCategoryAdCount(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal bookStatus As System.Nullable(Of Integer)) As ISingleResult(Of spMainCategoryAdCountResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), bookStatus)
			Return CType(result.ReturnValue,ISingleResult(Of spMainCategoryAdCountResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spOnlineAdSelect")>  _
		Public Function spOnlineAdSelect(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ParentCategoryId", DbType:="Int")> ByVal parentCategoryId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SubCategoryId", DbType:="Int")> ByVal subCategoryId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="LocationId", DbType:="Int")> ByVal locationId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="AreaId", DbType:="Int")> ByVal areaId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="KeyWord", DbType:="NVarChar(100)")> ByVal keyWord As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="BookStatus", DbType:="Int")> ByVal bookStatus As System.Nullable(Of Integer)) As ISingleResult(Of spOnlineAdSelectResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), parentCategoryId, subCategoryId, locationId, areaId, keyWord, bookStatus)
			Return CType(result.ReturnValue,ISingleResult(Of spOnlineAdSelectResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spOnlineAdSelectByCategory")>  _
		Public Function spOnlineAdSelectByCategory(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="CategoryId", DbType:="Int")> ByVal categoryId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal bookStatus As System.Nullable(Of Integer)) As ISingleResult(Of spOnlineAdSelectByCategoryResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), categoryId, bookStatus)
			Return CType(result.ReturnValue,ISingleResult(Of spOnlineAdSelectByCategoryResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spGetPublicationsByAdType")>  _
		Public Function spGetPublicationsByAdType(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal adTypeId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal showOnline As System.Nullable(Of Boolean)) As ISingleResult(Of Publication)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), adTypeId, showOnline)
			Return CType(result.ReturnValue,ISingleResult(Of Publication))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spPublicationEditionAndDeadlines")>  _
		Public Function spPublicationEditionAndDeadlines() As ISingleResult(Of spPublicationEditionAndDeadlinesResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
			Return CType(result.ReturnValue,ISingleResult(Of spPublicationEditionAndDeadlinesResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spLineAdById")>  _
		Public Function spLineAdById(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="LineAdId", DbType:="Int")> ByVal lineAdId As System.Nullable(Of Integer)) As ISingleResult(Of spLineAdByIdResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lineAdId)
			Return CType(result.ReturnValue,ISingleResult(Of spLineAdByIdResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spPublicationCategories")>  _
		Public Function spPublicationCategories(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PublicationID", DbType:="Int")> ByVal publicationID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ParentID", DbType:="Int")> ByVal parentID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="MainCategoryID", DbType:="Int")> ByVal mainCategoryID As System.Nullable(Of Integer)) As ISingleResult(Of spPublicationCategoriesResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), publicationID, parentID, mainCategoryID)
			Return CType(result.ReturnValue,ISingleResult(Of spPublicationCategoriesResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spPublicationCategoriesByPubId")>  _
		Public Function spPublicationCategoriesByPubId(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PublicationID", DbType:="Int")> ByVal publicationID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ParentID", DbType:="Int")> ByVal parentID As System.Nullable(Of Integer)) As ISingleResult(Of spPublicationCategoriesByPubIdResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), publicationID, parentID)
			Return CType(result.ReturnValue,ISingleResult(Of spPublicationCategoriesByPubIdResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spMainCategoriesUnassigned")>  _
		Public Function spMainCategoriesUnassigned(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal isParent As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal publicationCategoryId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal publicationId As System.Nullable(Of Integer)) As ISingleResult(Of spMainCategoriesUnassignedResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), isParent, publicationCategoryId, publicationId)
			Return CType(result.ReturnValue,ISingleResult(Of spMainCategoriesUnassignedResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spSpecialRatePublications")>  _
		Public Function spSpecialRatePublications(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal specialRateId As System.Nullable(Of Integer)) As ISingleResult(Of spSpecialRatePublicationsResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), specialRateId)
			Return CType(result.ReturnValue,ISingleResult(Of spSpecialRatePublicationsResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spAdBookingSelectUserActive")>  _
		Public Function spAdBookingSelectUserActive(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="UserId", DbType:="NVarChar(50)")> ByVal userId As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="BookingStatus", DbType:="Int")> ByVal bookingStatus As System.Nullable(Of Integer)) As ISingleResult(Of spAdBookingSelectUserActiveResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), userId, bookingStatus)
			Return CType(result.ReturnValue,ISingleResult(Of spAdBookingSelectUserActiveResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spOnlineAdSelectUserScheduled")>  _
		Public Function spOnlineAdSelectUserScheduled(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="UserId", DbType:="NVarChar(50)")> ByVal userId As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="BookingStatus", DbType:="Int")> ByVal bookingStatus As System.Nullable(Of Integer)) As ISingleResult(Of spOnlineAdSelectUserScheduledResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), userId, bookingStatus)
			Return CType(result.ReturnValue,ISingleResult(Of spOnlineAdSelectUserScheduledResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spLineAdSelectUserScheduled")>  _
		Public Function spLineAdSelectUserScheduled(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="UserId", DbType:="NVarChar(50)")> ByVal userId As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="BookingStatus", DbType:="Int")> ByVal bookingStatus As System.Nullable(Of Integer)) As ISingleResult(Of spLineAdSelectUserScheduledResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), userId, bookingStatus)
			Return CType(result.ReturnValue,ISingleResult(Of spLineAdSelectUserScheduledResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spLineAdSelectUserCurrent")>  _
		Public Function spLineAdSelectUserCurrent(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="UserId", DbType:="NVarChar(50)")> ByVal userId As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="BookingStatus", DbType:="Int")> ByVal bookingStatus As System.Nullable(Of Integer)) As ISingleResult(Of spLineAdSelectUserCurrentResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), userId, bookingStatus)
			Return CType(result.ReturnValue,ISingleResult(Of spLineAdSelectUserCurrentResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spOnlineAdSelectUserCurrent")>  _
		Public Function spOnlineAdSelectUserCurrent(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="UserId", DbType:="NVarChar(50)")> ByVal userId As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="BookingStatus", DbType:="Int")> ByVal bookingStatus As System.Nullable(Of Integer)) As ISingleResult(Of spOnlineAdSelectUserCurrentResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), userId, bookingStatus)
			Return CType(result.ReturnValue,ISingleResult(Of spOnlineAdSelectUserCurrentResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spTransactionsByUser")>  _
		Public Function spTransactionsByUser(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="UserId", DbType:="NVarChar(50)")> ByVal userId As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="StartDate", DbType:="DateTime")> ByVal startDate As System.Nullable(Of Date)) As ISingleResult(Of spTransactionsByUserResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), userId, startDate)
			Return CType(result.ReturnValue,ISingleResult(Of spTransactionsByUserResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spOnlineAdSelectUserExpired")>  _
		Public Function spOnlineAdSelectUserExpired(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="UserId", DbType:="NVarChar(50)")> ByVal userId As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="EndDate", DbType:="DateTime")> ByVal endDate As System.Nullable(Of Date)) As ISingleResult(Of spOnlineAdSelectUserExpiredResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), userId, endDate)
			Return CType(result.ReturnValue,ISingleResult(Of spOnlineAdSelectUserExpiredResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spLineAdSelectUserExpired")>  _
		Public Function spLineAdSelectUserExpired(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="UserId", DbType:="NVarChar(50)")> ByVal userId As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="EndDate", DbType:="DateTime")> ByVal endDate As System.Nullable(Of Date)) As ISingleResult(Of spLineAdSelectUserExpiredResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), userId, endDate)
			Return CType(result.ReturnValue,ISingleResult(Of spLineAdSelectUserExpiredResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spRatecardsByCategory")>  _
		Public Function spRatecardsByCategory(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal categoryId As System.Nullable(Of Integer)) As ISingleResult(Of spRatecardsByCategoryResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), categoryId)
			Return CType(result.ReturnValue,ISingleResult(Of spRatecardsByCategoryResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spSystemBackupDatabases")>  _
		Public Function spSystemBackupDatabases(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="NVarChar(200)")> ByVal path As String) As Integer
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), path)
			Return CType(result.ReturnValue,Integer)
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spReportWeeklySales")>  _
		Public Function spReportWeeklySales(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pubid As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal ed As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal status As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal subCategoryId As System.Nullable(Of Integer)) As ISingleResult(Of spReportWeeklySalesResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pubid, ed, status, subCategoryId)
			Return CType(result.ReturnValue,ISingleResult(Of spReportWeeklySalesResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spReportIncomeReport")>  _
		Public Function spReportIncomeReport(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal startDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal endDate As System.Nullable(Of Date)) As ISingleResult(Of spReportIncomeReportResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), startDate, endDate)
			Return CType(result.ReturnValue,ISingleResult(Of spReportIncomeReportResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spAdBookingsSearch")>  _
		Public Function spAdBookingsSearch(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="AdDesignId", DbType:="Int")> ByVal adDesignId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="BookReference", DbType:="NVarChar(10)")> ByVal bookReference As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Username", DbType:="NVarChar(50)")> ByVal username As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="BookingDateStart", DbType:="DateTime")> ByVal bookingDateStart As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="BookingDateEnd", DbType:="DateTime")> ByVal bookingDateEnd As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="BookingStatus", DbType:="Int")> ByVal bookingStatus As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PublicationId", DbType:="Int")> ByVal publicationId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ParentCategoryId", DbType:="Int")> ByVal parentCategoryId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="MainCategoryId", DbType:="Int")> ByVal mainCategoryId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="AdSearchText", DbType:="NVarChar(50)")> ByVal adSearchText As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="EditionStartDate", DbType:="DateTime")> ByVal editionStartDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="EditionEndDate", DbType:="DateTime")> ByVal editionEndDate As System.Nullable(Of Date)) As ISingleResult(Of spAdBookingsSearchResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), adDesignId, bookReference, username, bookingDateStart, bookingDateEnd, bookingStatus, publicationId, parentCategoryId, mainCategoryId, adSearchText, editionStartDate, editionEndDate)
			Return CType(result.ReturnValue,ISingleResult(Of spAdBookingsSearchResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spOnlineAdSelectByLineAdDesign")>  _
		Public Function spOnlineAdSelectByLineAdDesign(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="LineDesignId", DbType:="Int")> ByVal lineDesignId As System.Nullable(Of Integer)) As ISingleResult(Of spOnlineAdSelectByLineAdDesignResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lineDesignId)
			Return CType(result.ReturnValue,ISingleResult(Of spOnlineAdSelectByLineAdDesignResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spPublicationDeadlineSelect")>  _
		Public Function spPublicationDeadlineSelect(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PublicationID", DbType:="Int")> ByVal publicationID As System.Nullable(Of Integer)) As ISingleResult(Of spPublicationDeadlineSelectResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), publicationID)
			Return CType(result.ReturnValue,ISingleResult(Of spPublicationDeadlineSelectResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spPublicationSpecialRateAdd")>  _
		Public Function spPublicationSpecialRateAdd(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PublicationId", DbType:="Int")> ByVal publicationId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="MainCategoryId", DbType:="Int")> ByVal mainCategoryId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SpecialRateId", DbType:="Int")> ByVal specialRateId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ClearCurrentRates", DbType:="Bit")> ByVal clearCurrentRates As System.Nullable(Of Boolean)) As Integer
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), publicationId, mainCategoryId, specialRateId, clearCurrentRates)
			Return CType(result.ReturnValue,Integer)
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spSpecialRateDelete")>  _
		Public Function spSpecialRateDelete(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal specialRateId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal isCascade As System.Nullable(Of Boolean)) As Integer
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), specialRateId, isCascade)
			Return CType(result.ReturnValue,Integer)
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_RateCard__Delete")>  _
		Public Function usp_RateCard__Delete(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="RateCardId", DbType:="Int")> ByVal rateCardId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IsCascade", DbType:="Bit")> ByVal isCascade As System.Nullable(Of Boolean)) As Integer
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), rateCardId, isCascade)
			Return CType(result.ReturnValue,Integer)
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_PublicationRateCard__Add")>  _
		Public Function usp_PublicationRateCard__Add(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PublicationId", DbType:="Int")> ByVal publicationId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="MainCategoryId", DbType:="Int")> ByVal mainCategoryId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="RatecardId", DbType:="Int")> ByVal ratecardId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ClearCurrentRates", DbType:="Bit")> ByVal clearCurrentRates As System.Nullable(Of Boolean)) As Integer
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), publicationId, mainCategoryId, ratecardId, clearCurrentRates)
			Return CType(result.ReturnValue,Integer)
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_RateCard__Search")>  _
		Public Function usp_RateCard__Search() As ISingleResult(Of usp_RateCard__SearchResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
			Return CType(result.ReturnValue,ISingleResult(Of usp_RateCard__SearchResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_MainCategory__SelectForRateCard")>  _
		Public Function usp_MainCategory__SelectForRateCard(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="RateCardId", DbType:="Int")> ByVal rateCardId As System.Nullable(Of Integer)) As ISingleResult(Of usp_MainCategory__SelectForRateCardResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), rateCardId)
			Return CType(result.ReturnValue,ISingleResult(Of usp_MainCategory__SelectForRateCardResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_Publication__SelectForRateCard")>  _
		Public Function usp_Publication__SelectForRateCard(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="RateCardId", DbType:="Int")> ByVal rateCardId As System.Nullable(Of Integer)) As ISingleResult(Of usp_Publication__SelectForRateCardResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), rateCardId)
			Return CType(result.ReturnValue,ISingleResult(Of usp_Publication__SelectForRateCardResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_PublicationRateCard__Select")>  _
		Public Function usp_PublicationRateCard__Select(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PublicationId", DbType:="Int")> ByVal publicationId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="MainCategoryId", DbType:="Int")> ByVal mainCategoryId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="AdTypeId", DbType:="Int")> ByVal adTypeId As System.Nullable(Of Integer)) As ISingleResult(Of usp_PublicationRateCard__SelectResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), publicationId, mainCategoryId, adTypeId)
			Return CType(result.ReturnValue,ISingleResult(Of usp_PublicationRateCard__SelectResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_LineAdTheme__FetchBorderColour")>  _
		Public Function usp_LineAdTheme__FetchBorderColour(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HeaderColourCode", DbType:="VarChar(10)")> ByVal headerColourCode As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="BackgroundColourCode", DbType:="VarChar(10)")> ByVal backgroundColourCode As String) As ISingleResult(Of usp_LineAdTheme__FetchBorderColourResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), headerColourCode, backgroundColourCode)
			Return CType(result.ReturnValue,ISingleResult(Of usp_LineAdTheme__FetchBorderColourResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_LineAdTheme__FetchBackgroundColour")>  _
		Public Function usp_LineAdTheme__FetchBackgroundColour(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HeaderColourCode", DbType:="VarChar(10)")> ByVal headerColourCode As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="BorderColourCode", DbType:="VarChar(10)")> ByVal borderColourCode As String) As ISingleResult(Of usp_LineAdTheme__FetchBackgroundColourResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), headerColourCode, borderColourCode)
			Return CType(result.ReturnValue,ISingleResult(Of usp_LineAdTheme__FetchBackgroundColourResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_LineAdTheme__FetchHeaderColour")>  _
		Public Function usp_LineAdTheme__FetchHeaderColour(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="BorderColourCode", DbType:="VarChar(10)")> ByVal borderColourCode As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="BackgroundColourCode", DbType:="VarChar(10)")> ByVal backgroundColourCode As String) As ISingleResult(Of usp_LineAdTheme__FetchHeaderColourResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), borderColourCode, backgroundColourCode)
			Return CType(result.ReturnValue,ISingleResult(Of usp_LineAdTheme__FetchHeaderColourResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spOnlineAdSelectRecentlyAdded")>  _
		Public Function spOnlineAdSelectRecentlyAdded(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal bookStatus As System.Nullable(Of Integer)) As ISingleResult(Of spOnlineAdSelectRecentlyAddedResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), bookStatus)
			Return CType(result.ReturnValue,ISingleResult(Of spOnlineAdSelectRecentlyAddedResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spLineAdExportList")>  _
		Public Function spLineAdExportList(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal publicationId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal editionDate As System.Nullable(Of Date)) As ISingleResult(Of spLineAdExportListResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), publicationId, editionDate)
			Return CType(result.ReturnValue,ISingleResult(Of spLineAdExportListResult))
		End Function
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Ad")>  _
	Partial Public Class Ad
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _AdId As Integer
		
		Private _Title As String
		
		Private _Comments As String
		
		Private _UseAsTemplate As System.Nullable(Of Boolean)
		
		Private _AdBookings As EntitySet(Of AdBooking)
		
		Private _AdDesigns As EntitySet(Of AdDesign)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAdIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnAdIdChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnCommentsChanging(value As String)
    End Sub
    Partial Private Sub OnCommentsChanged()
    End Sub
    Partial Private Sub OnUseAsTemplateChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnUseAsTemplateChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._AdBookings = New EntitySet(Of AdBooking)(AddressOf Me.attach_AdBookings, AddressOf Me.detach_AdBookings)
			Me._AdDesigns = New EntitySet(Of AdDesign)(AddressOf Me.attach_AdDesigns, AddressOf Me.detach_AdDesigns)
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property AdId() As Integer
			Get
				Return Me._AdId
			End Get
			Set
				If ((Me._AdId = value)  _
							= false) Then
					Me.OnAdIdChanging(value)
					Me.SendPropertyChanging
					Me._AdId = value
					Me.SendPropertyChanged("AdId")
					Me.OnAdIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me.OnTitleChanging(value)
					Me.SendPropertyChanging
					Me._Title = value
					Me.SendPropertyChanged("Title")
					Me.OnTitleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comments", DbType:="NVarChar(255)")>  _
		Public Property Comments() As String
			Get
				Return Me._Comments
			End Get
			Set
				If (String.Equals(Me._Comments, value) = false) Then
					Me.OnCommentsChanging(value)
					Me.SendPropertyChanging
					Me._Comments = value
					Me.SendPropertyChanged("Comments")
					Me.OnCommentsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UseAsTemplate", DbType:="Bit")>  _
		Public Property UseAsTemplate() As System.Nullable(Of Boolean)
			Get
				Return Me._UseAsTemplate
			End Get
			Set
				If (Me._UseAsTemplate.Equals(value) = false) Then
					Me.OnUseAsTemplateChanging(value)
					Me.SendPropertyChanging
					Me._UseAsTemplate = value
					Me.SendPropertyChanged("UseAsTemplate")
					Me.OnUseAsTemplateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Ad_AdBooking", Storage:="_AdBookings", ThisKey:="AdId", OtherKey:="AdId")>  _
		Public Property AdBookings() As EntitySet(Of AdBooking)
			Get
				Return Me._AdBookings
			End Get
			Set
				Me._AdBookings.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Ad_AdDesign", Storage:="_AdDesigns", ThisKey:="AdId", OtherKey:="AdId")>  _
		Public Property AdDesigns() As EntitySet(Of AdDesign)
			Get
				Return Me._AdDesigns
			End Get
			Set
				Me._AdDesigns.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_AdBookings(ByVal entity As AdBooking)
			Me.SendPropertyChanging
			entity.Ad = Me
		End Sub
		
		Private Sub detach_AdBookings(ByVal entity As AdBooking)
			Me.SendPropertyChanging
			entity.Ad = Nothing
		End Sub
		
		Private Sub attach_AdDesigns(ByVal entity As AdDesign)
			Me.SendPropertyChanging
			entity.Ad = Me
		End Sub
		
		Private Sub detach_AdDesigns(ByVal entity As AdDesign)
			Me.SendPropertyChanging
			entity.Ad = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AppSetting")>  _
	Partial Public Class AppSetting
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Module As String
		
		Private _AppKey As String
		
		Private _DataType As String
		
		Private _SettingValue As String
		
		Private _Description As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnModuleChanging(value As String)
    End Sub
    Partial Private Sub OnModuleChanged()
    End Sub
    Partial Private Sub OnAppKeyChanging(value As String)
    End Sub
    Partial Private Sub OnAppKeyChanged()
    End Sub
    Partial Private Sub OnDataTypeChanging(value As String)
    End Sub
    Partial Private Sub OnDataTypeChanged()
    End Sub
    Partial Private Sub OnSettingValueChanging(value As String)
    End Sub
    Partial Private Sub OnSettingValueChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Module", Storage:="_Module", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property [Module]() As String
			Get
				Return Me._Module
			End Get
			Set
				If (String.Equals(Me._Module, value) = false) Then
					Me.OnModuleChanging(value)
					Me.SendPropertyChanging
					Me._Module = value
					Me.SendPropertyChanged("[Module]")
					Me.OnModuleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AppKey", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property AppKey() As String
			Get
				Return Me._AppKey
			End Get
			Set
				If (String.Equals(Me._AppKey, value) = false) Then
					Me.OnAppKeyChanging(value)
					Me.SendPropertyChanging
					Me._AppKey = value
					Me.SendPropertyChanged("AppKey")
					Me.OnAppKeyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataType", DbType:="NChar(10)")>  _
		Public Property DataType() As String
			Get
				Return Me._DataType
			End Get
			Set
				If (String.Equals(Me._DataType, value) = false) Then
					Me.OnDataTypeChanging(value)
					Me.SendPropertyChanging
					Me._DataType = value
					Me.SendPropertyChanged("DataType")
					Me.OnDataTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SettingValue", DbType:="NVarChar(MAX)")>  _
		Public Property SettingValue() As String
			Get
				Return Me._SettingValue
			End Get
			Set
				If (String.Equals(Me._SettingValue, value) = false) Then
					Me.OnSettingValueChanging(value)
					Me.SendPropertyChanging
					Me._SettingValue = value
					Me.SendPropertyChanged("SettingValue")
					Me.OnSettingValueChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(MAX)")>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me.OnDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._Description = value
					Me.SendPropertyChanged("Description")
					Me.OnDescriptionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.BookEntry")>  _
	Partial Public Class BookEntry
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _BookEntryId As Integer
		
		Private _EditionDate As System.Nullable(Of Date)
		
		Private _AdBookingId As System.Nullable(Of Integer)
		
		Private _PublicationId As System.Nullable(Of Integer)
		
		Private _Price As System.Nullable(Of Decimal)
		
		Private _PublicationPrice As System.Nullable(Of Decimal)
		
		Private _BaseRateId As System.Nullable(Of Integer)
		
		Private _RateType As String
		
		Private _AdBooking As EntityRef(Of AdBooking)
		
		Private _Publication As EntityRef(Of Publication)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBookEntryIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnBookEntryIdChanged()
    End Sub
    Partial Private Sub OnEditionDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEditionDateChanged()
    End Sub
    Partial Private Sub OnAdBookingIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAdBookingIdChanged()
    End Sub
    Partial Private Sub OnPublicationIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPublicationIdChanged()
    End Sub
    Partial Private Sub OnEditionAdPriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnEditionAdPriceChanged()
    End Sub
    Partial Private Sub OnPublicationPriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPublicationPriceChanged()
    End Sub
    Partial Private Sub OnBaseRateIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBaseRateIdChanged()
    End Sub
    Partial Private Sub OnRateTypeChanging(value As String)
    End Sub
    Partial Private Sub OnRateTypeChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._AdBooking = CType(Nothing, EntityRef(Of AdBooking))
			Me._Publication = CType(Nothing, EntityRef(Of Publication))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BookEntryId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property BookEntryId() As Integer
			Get
				Return Me._BookEntryId
			End Get
			Set
				If ((Me._BookEntryId = value)  _
							= false) Then
					Me.OnBookEntryIdChanging(value)
					Me.SendPropertyChanging
					Me._BookEntryId = value
					Me.SendPropertyChanged("BookEntryId")
					Me.OnBookEntryIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EditionDate", DbType:="DateTime")>  _
		Public Property EditionDate() As System.Nullable(Of Date)
			Get
				Return Me._EditionDate
			End Get
			Set
				If (Me._EditionDate.Equals(value) = false) Then
					Me.OnEditionDateChanging(value)
					Me.SendPropertyChanging
					Me._EditionDate = value
					Me.SendPropertyChanged("EditionDate")
					Me.OnEditionDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdBookingId", DbType:="Int")>  _
		Public Property AdBookingId() As System.Nullable(Of Integer)
			Get
				Return Me._AdBookingId
			End Get
			Set
				If (Me._AdBookingId.Equals(value) = false) Then
					If Me._AdBooking.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnAdBookingIdChanging(value)
					Me.SendPropertyChanging
					Me._AdBookingId = value
					Me.SendPropertyChanged("AdBookingId")
					Me.OnAdBookingIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationId", DbType:="Int")>  _
		Public Property PublicationId() As System.Nullable(Of Integer)
			Get
				Return Me._PublicationId
			End Get
			Set
				If (Me._PublicationId.Equals(value) = false) Then
					If Me._Publication.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnPublicationIdChanging(value)
					Me.SendPropertyChanging
					Me._PublicationId = value
					Me.SendPropertyChanged("PublicationId")
					Me.OnPublicationIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Price", DbType:="Money")>  _
		Public Property EditionAdPrice() As System.Nullable(Of Decimal)
			Get
				Return Me._Price
			End Get
			Set
				If (Me._Price.Equals(value) = false) Then
					Me.OnEditionAdPriceChanging(value)
					Me.SendPropertyChanging
					Me._Price = value
					Me.SendPropertyChanged("EditionAdPrice")
					Me.OnEditionAdPriceChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationPrice", DbType:="Money")>  _
		Public Property PublicationPrice() As System.Nullable(Of Decimal)
			Get
				Return Me._PublicationPrice
			End Get
			Set
				If (Me._PublicationPrice.Equals(value) = false) Then
					Me.OnPublicationPriceChanging(value)
					Me.SendPropertyChanging
					Me._PublicationPrice = value
					Me.SendPropertyChanged("PublicationPrice")
					Me.OnPublicationPriceChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BaseRateId", DbType:="Int")>  _
		Public Property BaseRateId() As System.Nullable(Of Integer)
			Get
				Return Me._BaseRateId
			End Get
			Set
				If (Me._BaseRateId.Equals(value) = false) Then
					Me.OnBaseRateIdChanging(value)
					Me.SendPropertyChanging
					Me._BaseRateId = value
					Me.SendPropertyChanged("BaseRateId")
					Me.OnBaseRateIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RateType", DbType:="NVarChar(20)")>  _
		Public Property RateType() As String
			Get
				Return Me._RateType
			End Get
			Set
				If (String.Equals(Me._RateType, value) = false) Then
					Me.OnRateTypeChanging(value)
					Me.SendPropertyChanging
					Me._RateType = value
					Me.SendPropertyChanged("RateType")
					Me.OnRateTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AdBooking_BookEntry", Storage:="_AdBooking", ThisKey:="AdBookingId", OtherKey:="AdBookingId", IsForeignKey:=true)>  _
		Public Property AdBooking() As AdBooking
			Get
				Return Me._AdBooking.Entity
			End Get
			Set
				Dim previousValue As AdBooking = Me._AdBooking.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._AdBooking.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._AdBooking.Entity = Nothing
						previousValue.BookEntries.Remove(Me)
					End If
					Me._AdBooking.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.BookEntries.Add(Me)
						Me._AdBookingId = value.AdBookingId
					Else
						Me._AdBookingId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("AdBooking")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Publication_BookEntry", Storage:="_Publication", ThisKey:="PublicationId", OtherKey:="PublicationId", IsForeignKey:=true)>  _
		Public Property Publication() As Publication
			Get
				Return Me._Publication.Entity
			End Get
			Set
				Dim previousValue As Publication = Me._Publication.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._Publication.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._Publication.Entity = Nothing
						previousValue.BookEntries.Remove(Me)
					End If
					Me._Publication.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.BookEntries.Add(Me)
						Me._PublicationId = value.PublicationId
					Else
						Me._PublicationId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("Publication")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MainCategory")>  _
	Partial Public Class MainCategory
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _MainCategoryId As Integer
		
		Private _Title As String
		
		Private _Description As String
		
		Private _ImageUrl As String
		
		Private _ParentId As System.Nullable(Of Integer)
		
		Private _PublicationCategories As EntitySet(Of PublicationCategory)
		
		Private _AdBookings As EntitySet(Of AdBooking)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMainCategoryIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnMainCategoryIdChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnImageUrlChanging(value As String)
    End Sub
    Partial Private Sub OnImageUrlChanged()
    End Sub
    Partial Private Sub OnParentIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnParentIdChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._PublicationCategories = New EntitySet(Of PublicationCategory)(AddressOf Me.attach_PublicationCategories, AddressOf Me.detach_PublicationCategories)
			Me._AdBookings = New EntitySet(Of AdBooking)(AddressOf Me.attach_AdBookings, AddressOf Me.detach_AdBookings)
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MainCategoryId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property MainCategoryId() As Integer
			Get
				Return Me._MainCategoryId
			End Get
			Set
				If ((Me._MainCategoryId = value)  _
							= false) Then
					Me.OnMainCategoryIdChanging(value)
					Me.SendPropertyChanging
					Me._MainCategoryId = value
					Me.SendPropertyChanged("MainCategoryId")
					Me.OnMainCategoryIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me.OnTitleChanging(value)
					Me.SendPropertyChanging
					Me._Title = value
					Me.SendPropertyChanged("Title")
					Me.OnTitleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(MAX)")>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me.OnDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._Description = value
					Me.SendPropertyChanged("Description")
					Me.OnDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImageUrl", DbType:="NVarChar(255)")>  _
		Public Property ImageUrl() As String
			Get
				Return Me._ImageUrl
			End Get
			Set
				If (String.Equals(Me._ImageUrl, value) = false) Then
					Me.OnImageUrlChanging(value)
					Me.SendPropertyChanging
					Me._ImageUrl = value
					Me.SendPropertyChanged("ImageUrl")
					Me.OnImageUrlChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ParentId", DbType:="Int")>  _
		Public Property ParentId() As System.Nullable(Of Integer)
			Get
				Return Me._ParentId
			End Get
			Set
				If (Me._ParentId.Equals(value) = false) Then
					Me.OnParentIdChanging(value)
					Me.SendPropertyChanging
					Me._ParentId = value
					Me.SendPropertyChanged("ParentId")
					Me.OnParentIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="MainCategory_PublicationCategory", Storage:="_PublicationCategories", ThisKey:="MainCategoryId", OtherKey:="MainCategoryId")>  _
		Public Property PublicationCategories() As EntitySet(Of PublicationCategory)
			Get
				Return Me._PublicationCategories
			End Get
			Set
				Me._PublicationCategories.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="MainCategory_AdBooking", Storage:="_AdBookings", ThisKey:="MainCategoryId", OtherKey:="MainCategoryId")>  _
		Public Property AdBookings() As EntitySet(Of AdBooking)
			Get
				Return Me._AdBookings
			End Get
			Set
				Me._AdBookings.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_PublicationCategories(ByVal entity As PublicationCategory)
			Me.SendPropertyChanging
			entity.MainCategory = Me
		End Sub
		
		Private Sub detach_PublicationCategories(ByVal entity As PublicationCategory)
			Me.SendPropertyChanging
			entity.MainCategory = Nothing
		End Sub
		
		Private Sub attach_AdBookings(ByVal entity As AdBooking)
			Me.SendPropertyChanging
			entity.MainCategory = Me
		End Sub
		
		Private Sub detach_AdBookings(ByVal entity As AdBooking)
			Me.SendPropertyChanging
			entity.MainCategory = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PublicationAdType")>  _
	Partial Public Class PublicationAdType
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _PublicationAdTypeId As Integer
		
		Private _PublicationId As System.Nullable(Of Integer)
		
		Private _AdTypeId As System.Nullable(Of Integer)
		
		Private _PublicationRates As EntitySet(Of PublicationRate)
		
		Private _PublicationSpecialRates As EntitySet(Of PublicationSpecialRate)
		
		Private _AdType As EntityRef(Of AdType)
		
		Private _Publication As EntityRef(Of Publication)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPublicationAdTypeIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnPublicationAdTypeIdChanged()
    End Sub
    Partial Private Sub OnPublicationIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPublicationIdChanged()
    End Sub
    Partial Private Sub OnAdTypeIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAdTypeIdChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._PublicationRates = New EntitySet(Of PublicationRate)(AddressOf Me.attach_PublicationRates, AddressOf Me.detach_PublicationRates)
			Me._PublicationSpecialRates = New EntitySet(Of PublicationSpecialRate)(AddressOf Me.attach_PublicationSpecialRates, AddressOf Me.detach_PublicationSpecialRates)
			Me._AdType = CType(Nothing, EntityRef(Of AdType))
			Me._Publication = CType(Nothing, EntityRef(Of Publication))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationAdTypeId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property PublicationAdTypeId() As Integer
			Get
				Return Me._PublicationAdTypeId
			End Get
			Set
				If ((Me._PublicationAdTypeId = value)  _
							= false) Then
					Me.OnPublicationAdTypeIdChanging(value)
					Me.SendPropertyChanging
					Me._PublicationAdTypeId = value
					Me.SendPropertyChanged("PublicationAdTypeId")
					Me.OnPublicationAdTypeIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationId", DbType:="Int")>  _
		Public Property PublicationId() As System.Nullable(Of Integer)
			Get
				Return Me._PublicationId
			End Get
			Set
				If (Me._PublicationId.Equals(value) = false) Then
					If Me._Publication.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnPublicationIdChanging(value)
					Me.SendPropertyChanging
					Me._PublicationId = value
					Me.SendPropertyChanged("PublicationId")
					Me.OnPublicationIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdTypeId", DbType:="Int")>  _
		Public Property AdTypeId() As System.Nullable(Of Integer)
			Get
				Return Me._AdTypeId
			End Get
			Set
				If (Me._AdTypeId.Equals(value) = false) Then
					If Me._AdType.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnAdTypeIdChanging(value)
					Me.SendPropertyChanging
					Me._AdTypeId = value
					Me.SendPropertyChanged("AdTypeId")
					Me.OnAdTypeIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PublicationAdType_PublicationRate", Storage:="_PublicationRates", ThisKey:="PublicationAdTypeId", OtherKey:="PublicationAdTypeId")>  _
		Public Property PublicationRates() As EntitySet(Of PublicationRate)
			Get
				Return Me._PublicationRates
			End Get
			Set
				Me._PublicationRates.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PublicationAdType_PublicationSpecialRate", Storage:="_PublicationSpecialRates", ThisKey:="PublicationAdTypeId", OtherKey:="PublicationAdTypeId")>  _
		Public Property PublicationSpecialRates() As EntitySet(Of PublicationSpecialRate)
			Get
				Return Me._PublicationSpecialRates
			End Get
			Set
				Me._PublicationSpecialRates.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AdType_PublicationAdType", Storage:="_AdType", ThisKey:="AdTypeId", OtherKey:="AdTypeId", IsForeignKey:=true)>  _
		Public Property AdType() As AdType
			Get
				Return Me._AdType.Entity
			End Get
			Set
				Dim previousValue As AdType = Me._AdType.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._AdType.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._AdType.Entity = Nothing
						previousValue.PublicationAdTypes.Remove(Me)
					End If
					Me._AdType.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.PublicationAdTypes.Add(Me)
						Me._AdTypeId = value.AdTypeId
					Else
						Me._AdTypeId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("AdType")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Publication_PublicationAdType", Storage:="_Publication", ThisKey:="PublicationId", OtherKey:="PublicationId", IsForeignKey:=true)>  _
		Public Property Publication() As Publication
			Get
				Return Me._Publication.Entity
			End Get
			Set
				Dim previousValue As Publication = Me._Publication.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._Publication.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._Publication.Entity = Nothing
						previousValue.PublicationAdTypes.Remove(Me)
					End If
					Me._Publication.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.PublicationAdTypes.Add(Me)
						Me._PublicationId = value.PublicationId
					Else
						Me._PublicationId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("Publication")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_PublicationRates(ByVal entity As PublicationRate)
			Me.SendPropertyChanging
			entity.PublicationAdType = Me
		End Sub
		
		Private Sub detach_PublicationRates(ByVal entity As PublicationRate)
			Me.SendPropertyChanging
			entity.PublicationAdType = Nothing
		End Sub
		
		Private Sub attach_PublicationSpecialRates(ByVal entity As PublicationSpecialRate)
			Me.SendPropertyChanging
			entity.PublicationAdType = Me
		End Sub
		
		Private Sub detach_PublicationSpecialRates(ByVal entity As PublicationSpecialRate)
			Me.SendPropertyChanging
			entity.PublicationAdType = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PublicationCategory")>  _
	Partial Public Class PublicationCategory
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _PublicationCategoryId As Integer
		
		Private _Title As String
		
		Private _Description As String
		
		Private _ImageUrl As String
		
		Private _ParentId As System.Nullable(Of Integer)
		
		Private _MainCategoryId As System.Nullable(Of Integer)
		
		Private _PublicationId As System.Nullable(Of Integer)
		
		Private _PublicationRates As EntitySet(Of PublicationRate)
		
		Private _PublicationSpecialRates As EntitySet(Of PublicationSpecialRate)
		
		Private _MainCategory As EntityRef(Of MainCategory)
		
		Private _Publication As EntityRef(Of Publication)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPublicationCategoryIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnPublicationCategoryIdChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnImageUrlChanging(value As String)
    End Sub
    Partial Private Sub OnImageUrlChanged()
    End Sub
    Partial Private Sub OnParentIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnParentIdChanged()
    End Sub
    Partial Private Sub OnMainCategoryIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMainCategoryIdChanged()
    End Sub
    Partial Private Sub OnPublicationIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPublicationIdChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._PublicationRates = New EntitySet(Of PublicationRate)(AddressOf Me.attach_PublicationRates, AddressOf Me.detach_PublicationRates)
			Me._PublicationSpecialRates = New EntitySet(Of PublicationSpecialRate)(AddressOf Me.attach_PublicationSpecialRates, AddressOf Me.detach_PublicationSpecialRates)
			Me._MainCategory = CType(Nothing, EntityRef(Of MainCategory))
			Me._Publication = CType(Nothing, EntityRef(Of Publication))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationCategoryId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property PublicationCategoryId() As Integer
			Get
				Return Me._PublicationCategoryId
			End Get
			Set
				If ((Me._PublicationCategoryId = value)  _
							= false) Then
					Me.OnPublicationCategoryIdChanging(value)
					Me.SendPropertyChanging
					Me._PublicationCategoryId = value
					Me.SendPropertyChanged("PublicationCategoryId")
					Me.OnPublicationCategoryIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me.OnTitleChanging(value)
					Me.SendPropertyChanging
					Me._Title = value
					Me.SendPropertyChanged("Title")
					Me.OnTitleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(MAX)")>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me.OnDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._Description = value
					Me.SendPropertyChanged("Description")
					Me.OnDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImageUrl", DbType:="NVarChar(255)")>  _
		Public Property ImageUrl() As String
			Get
				Return Me._ImageUrl
			End Get
			Set
				If (String.Equals(Me._ImageUrl, value) = false) Then
					Me.OnImageUrlChanging(value)
					Me.SendPropertyChanging
					Me._ImageUrl = value
					Me.SendPropertyChanged("ImageUrl")
					Me.OnImageUrlChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ParentId", DbType:="Int")>  _
		Public Property ParentId() As System.Nullable(Of Integer)
			Get
				Return Me._ParentId
			End Get
			Set
				If (Me._ParentId.Equals(value) = false) Then
					Me.OnParentIdChanging(value)
					Me.SendPropertyChanging
					Me._ParentId = value
					Me.SendPropertyChanged("ParentId")
					Me.OnParentIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MainCategoryId", DbType:="Int")>  _
		Public Property MainCategoryId() As System.Nullable(Of Integer)
			Get
				Return Me._MainCategoryId
			End Get
			Set
				If (Me._MainCategoryId.Equals(value) = false) Then
					If Me._MainCategory.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnMainCategoryIdChanging(value)
					Me.SendPropertyChanging
					Me._MainCategoryId = value
					Me.SendPropertyChanged("MainCategoryId")
					Me.OnMainCategoryIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationId", DbType:="Int")>  _
		Public Property PublicationId() As System.Nullable(Of Integer)
			Get
				Return Me._PublicationId
			End Get
			Set
				If (Me._PublicationId.Equals(value) = false) Then
					If Me._Publication.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnPublicationIdChanging(value)
					Me.SendPropertyChanging
					Me._PublicationId = value
					Me.SendPropertyChanged("PublicationId")
					Me.OnPublicationIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PublicationCategory_PublicationRate", Storage:="_PublicationRates", ThisKey:="PublicationCategoryId", OtherKey:="PublicationCategoryId")>  _
		Public Property PublicationRates() As EntitySet(Of PublicationRate)
			Get
				Return Me._PublicationRates
			End Get
			Set
				Me._PublicationRates.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PublicationCategory_PublicationSpecialRate", Storage:="_PublicationSpecialRates", ThisKey:="PublicationCategoryId", OtherKey:="PublicationCategoryId")>  _
		Public Property PublicationSpecialRates() As EntitySet(Of PublicationSpecialRate)
			Get
				Return Me._PublicationSpecialRates
			End Get
			Set
				Me._PublicationSpecialRates.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="MainCategory_PublicationCategory", Storage:="_MainCategory", ThisKey:="MainCategoryId", OtherKey:="MainCategoryId", IsForeignKey:=true)>  _
		Public Property MainCategory() As MainCategory
			Get
				Return Me._MainCategory.Entity
			End Get
			Set
				Dim previousValue As MainCategory = Me._MainCategory.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._MainCategory.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._MainCategory.Entity = Nothing
						previousValue.PublicationCategories.Remove(Me)
					End If
					Me._MainCategory.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.PublicationCategories.Add(Me)
						Me._MainCategoryId = value.MainCategoryId
					Else
						Me._MainCategoryId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("MainCategory")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Publication_PublicationCategory", Storage:="_Publication", ThisKey:="PublicationId", OtherKey:="PublicationId", IsForeignKey:=true)>  _
		Public Property Publication() As Publication
			Get
				Return Me._Publication.Entity
			End Get
			Set
				Dim previousValue As Publication = Me._Publication.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._Publication.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._Publication.Entity = Nothing
						previousValue.PublicationCategories.Remove(Me)
					End If
					Me._Publication.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.PublicationCategories.Add(Me)
						Me._PublicationId = value.PublicationId
					Else
						Me._PublicationId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("Publication")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_PublicationRates(ByVal entity As PublicationRate)
			Me.SendPropertyChanging
			entity.PublicationCategory = Me
		End Sub
		
		Private Sub detach_PublicationRates(ByVal entity As PublicationRate)
			Me.SendPropertyChanging
			entity.PublicationCategory = Nothing
		End Sub
		
		Private Sub attach_PublicationSpecialRates(ByVal entity As PublicationSpecialRate)
			Me.SendPropertyChanging
			entity.PublicationCategory = Me
		End Sub
		
		Private Sub detach_PublicationSpecialRates(ByVal entity As PublicationSpecialRate)
			Me.SendPropertyChanging
			entity.PublicationCategory = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PublicationRate")>  _
	Partial Public Class PublicationRate
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _PublicationRateId As Integer
		
		Private _PublicationAdTypeId As System.Nullable(Of Integer)
		
		Private _PublicationCategoryId As System.Nullable(Of Integer)
		
		Private _RatecardId As System.Nullable(Of Integer)
		
		Private _PublicationAdType As EntityRef(Of PublicationAdType)
		
		Private _PublicationCategory As EntityRef(Of PublicationCategory)
		
		Private _Ratecard As EntityRef(Of Ratecard)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPublicationRateIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnPublicationRateIdChanged()
    End Sub
    Partial Private Sub OnPublicationAdTypeIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPublicationAdTypeIdChanged()
    End Sub
    Partial Private Sub OnPublicationCategoryIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPublicationCategoryIdChanged()
    End Sub
    Partial Private Sub OnRatecardIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRatecardIdChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._PublicationAdType = CType(Nothing, EntityRef(Of PublicationAdType))
			Me._PublicationCategory = CType(Nothing, EntityRef(Of PublicationCategory))
			Me._Ratecard = CType(Nothing, EntityRef(Of Ratecard))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationRateId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property PublicationRateId() As Integer
			Get
				Return Me._PublicationRateId
			End Get
			Set
				If ((Me._PublicationRateId = value)  _
							= false) Then
					Me.OnPublicationRateIdChanging(value)
					Me.SendPropertyChanging
					Me._PublicationRateId = value
					Me.SendPropertyChanged("PublicationRateId")
					Me.OnPublicationRateIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationAdTypeId", DbType:="Int")>  _
		Public Property PublicationAdTypeId() As System.Nullable(Of Integer)
			Get
				Return Me._PublicationAdTypeId
			End Get
			Set
				If (Me._PublicationAdTypeId.Equals(value) = false) Then
					If Me._PublicationAdType.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnPublicationAdTypeIdChanging(value)
					Me.SendPropertyChanging
					Me._PublicationAdTypeId = value
					Me.SendPropertyChanged("PublicationAdTypeId")
					Me.OnPublicationAdTypeIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationCategoryId", DbType:="Int")>  _
		Public Property PublicationCategoryId() As System.Nullable(Of Integer)
			Get
				Return Me._PublicationCategoryId
			End Get
			Set
				If (Me._PublicationCategoryId.Equals(value) = false) Then
					If Me._PublicationCategory.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnPublicationCategoryIdChanging(value)
					Me.SendPropertyChanging
					Me._PublicationCategoryId = value
					Me.SendPropertyChanged("PublicationCategoryId")
					Me.OnPublicationCategoryIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RatecardId", DbType:="Int")>  _
		Public Property RatecardId() As System.Nullable(Of Integer)
			Get
				Return Me._RatecardId
			End Get
			Set
				If (Me._RatecardId.Equals(value) = false) Then
					If Me._Ratecard.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnRatecardIdChanging(value)
					Me.SendPropertyChanging
					Me._RatecardId = value
					Me.SendPropertyChanged("RatecardId")
					Me.OnRatecardIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PublicationAdType_PublicationRate", Storage:="_PublicationAdType", ThisKey:="PublicationAdTypeId", OtherKey:="PublicationAdTypeId", IsForeignKey:=true)>  _
		Public Property PublicationAdType() As PublicationAdType
			Get
				Return Me._PublicationAdType.Entity
			End Get
			Set
				Dim previousValue As PublicationAdType = Me._PublicationAdType.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._PublicationAdType.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._PublicationAdType.Entity = Nothing
						previousValue.PublicationRates.Remove(Me)
					End If
					Me._PublicationAdType.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.PublicationRates.Add(Me)
						Me._PublicationAdTypeId = value.PublicationAdTypeId
					Else
						Me._PublicationAdTypeId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("PublicationAdType")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PublicationCategory_PublicationRate", Storage:="_PublicationCategory", ThisKey:="PublicationCategoryId", OtherKey:="PublicationCategoryId", IsForeignKey:=true)>  _
		Public Property PublicationCategory() As PublicationCategory
			Get
				Return Me._PublicationCategory.Entity
			End Get
			Set
				Dim previousValue As PublicationCategory = Me._PublicationCategory.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._PublicationCategory.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._PublicationCategory.Entity = Nothing
						previousValue.PublicationRates.Remove(Me)
					End If
					Me._PublicationCategory.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.PublicationRates.Add(Me)
						Me._PublicationCategoryId = value.PublicationCategoryId
					Else
						Me._PublicationCategoryId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("PublicationCategory")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Ratecard_PublicationRate", Storage:="_Ratecard", ThisKey:="RatecardId", OtherKey:="RatecardId", IsForeignKey:=true)>  _
		Public Property Ratecard() As Ratecard
			Get
				Return Me._Ratecard.Entity
			End Get
			Set
				Dim previousValue As Ratecard = Me._Ratecard.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._Ratecard.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._Ratecard.Entity = Nothing
						previousValue.PublicationRates.Remove(Me)
					End If
					Me._Ratecard.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.PublicationRates.Add(Me)
						Me._RatecardId = value.RatecardId
					Else
						Me._RatecardId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("Ratecard")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PublicationType")>  _
	Partial Public Class PublicationType
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _PublicationTypeId As Integer
		
		Private _Code As String
		
		Private _Title As String
		
		Private _Description As String
		
		Private _Publications As EntitySet(Of Publication)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPublicationTypeIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnPublicationTypeIdChanged()
    End Sub
    Partial Private Sub OnCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._Publications = New EntitySet(Of Publication)(AddressOf Me.attach_Publications, AddressOf Me.detach_Publications)
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationTypeId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property PublicationTypeId() As Integer
			Get
				Return Me._PublicationTypeId
			End Get
			Set
				If ((Me._PublicationTypeId = value)  _
							= false) Then
					Me.OnPublicationTypeIdChanging(value)
					Me.SendPropertyChanging
					Me._PublicationTypeId = value
					Me.SendPropertyChanged("PublicationTypeId")
					Me.OnPublicationTypeIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="NChar(10)")>  _
		Public Property Code() As String
			Get
				Return Me._Code
			End Get
			Set
				If (String.Equals(Me._Code, value) = false) Then
					Me.OnCodeChanging(value)
					Me.SendPropertyChanging
					Me._Code = value
					Me.SendPropertyChanged("Code")
					Me.OnCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me.OnTitleChanging(value)
					Me.SendPropertyChanging
					Me._Title = value
					Me.SendPropertyChanged("Title")
					Me.OnTitleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(255)")>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me.OnDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._Description = value
					Me.SendPropertyChanged("Description")
					Me.OnDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PublicationType_Publication", Storage:="_Publications", ThisKey:="PublicationTypeId", OtherKey:="PublicationTypeId")>  _
		Public Property Publications() As EntitySet(Of Publication)
			Get
				Return Me._Publications
			End Get
			Set
				Me._Publications.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_Publications(ByVal entity As Publication)
			Me.SendPropertyChanging
			entity.PublicationType = Me
		End Sub
		
		Private Sub detach_Publications(ByVal entity As Publication)
			Me.SendPropertyChanging
			entity.PublicationType = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AdType")>  _
	Partial Public Class AdType
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _AdTypeId As Integer
		
		Private _Code As String
		
		Private _Title As String
		
		Private _Description As String
		
		Private _PaperBased As System.Nullable(Of Boolean)
		
		Private _ImageUrl As String
		
		Private _Active As System.Nullable(Of Boolean)
		
		Private _PublicationAdTypes As EntitySet(Of PublicationAdType)
		
		Private _AdDesigns As EntitySet(Of AdDesign)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAdTypeIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnAdTypeIdChanged()
    End Sub
    Partial Private Sub OnCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnPaperBasedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnPaperBasedChanged()
    End Sub
    Partial Private Sub OnImageUrlChanging(value As String)
    End Sub
    Partial Private Sub OnImageUrlChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._PublicationAdTypes = New EntitySet(Of PublicationAdType)(AddressOf Me.attach_PublicationAdTypes, AddressOf Me.detach_PublicationAdTypes)
			Me._AdDesigns = New EntitySet(Of AdDesign)(AddressOf Me.attach_AdDesigns, AddressOf Me.detach_AdDesigns)
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdTypeId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property AdTypeId() As Integer
			Get
				Return Me._AdTypeId
			End Get
			Set
				If ((Me._AdTypeId = value)  _
							= false) Then
					Me.OnAdTypeIdChanging(value)
					Me.SendPropertyChanging
					Me._AdTypeId = value
					Me.SendPropertyChanged("AdTypeId")
					Me.OnAdTypeIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="NVarChar(50)")>  _
		Public Property Code() As String
			Get
				Return Me._Code
			End Get
			Set
				If (String.Equals(Me._Code, value) = false) Then
					Me.OnCodeChanging(value)
					Me.SendPropertyChanging
					Me._Code = value
					Me.SendPropertyChanged("Code")
					Me.OnCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me.OnTitleChanging(value)
					Me.SendPropertyChanging
					Me._Title = value
					Me.SendPropertyChanged("Title")
					Me.OnTitleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(MAX)")>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me.OnDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._Description = value
					Me.SendPropertyChanged("Description")
					Me.OnDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaperBased", DbType:="Bit")>  _
		Public Property PaperBased() As System.Nullable(Of Boolean)
			Get
				Return Me._PaperBased
			End Get
			Set
				If (Me._PaperBased.Equals(value) = false) Then
					Me.OnPaperBasedChanging(value)
					Me.SendPropertyChanging
					Me._PaperBased = value
					Me.SendPropertyChanged("PaperBased")
					Me.OnPaperBasedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImageUrl", DbType:="NVarChar(255)")>  _
		Public Property ImageUrl() As String
			Get
				Return Me._ImageUrl
			End Get
			Set
				If (String.Equals(Me._ImageUrl, value) = false) Then
					Me.OnImageUrlChanging(value)
					Me.SendPropertyChanging
					Me._ImageUrl = value
					Me.SendPropertyChanged("ImageUrl")
					Me.OnImageUrlChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="Bit")>  _
		Public Property Active() As System.Nullable(Of Boolean)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AdType_PublicationAdType", Storage:="_PublicationAdTypes", ThisKey:="AdTypeId", OtherKey:="AdTypeId")>  _
		Public Property PublicationAdTypes() As EntitySet(Of PublicationAdType)
			Get
				Return Me._PublicationAdTypes
			End Get
			Set
				Me._PublicationAdTypes.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AdType_AdDesign", Storage:="_AdDesigns", ThisKey:="AdTypeId", OtherKey:="AdTypeId")>  _
		Public Property AdDesigns() As EntitySet(Of AdDesign)
			Get
				Return Me._AdDesigns
			End Get
			Set
				Me._AdDesigns.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_PublicationAdTypes(ByVal entity As PublicationAdType)
			Me.SendPropertyChanging
			entity.AdType = Me
		End Sub
		
		Private Sub detach_PublicationAdTypes(ByVal entity As PublicationAdType)
			Me.SendPropertyChanging
			entity.AdType = Nothing
		End Sub
		
		Private Sub attach_AdDesigns(ByVal entity As AdDesign)
			Me.SendPropertyChanging
			entity.AdType = Me
		End Sub
		
		Private Sub detach_AdDesigns(ByVal entity As AdDesign)
			Me.SendPropertyChanging
			entity.AdType = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[Transaction]")>  _
	Partial Public Class Transaction
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _TransactionId As Integer
		
		Private _TransactionType As System.Nullable(Of Integer)
		
		Private _UserId As String
		
		Private _Title As String
		
		Private _Description As String
		
		Private _Amount As System.Nullable(Of Decimal)
		
		Private _TransactionDate As System.Nullable(Of Date)
		
		Private _RowTimeStamp As System.Data.Linq.Binary
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTransactionIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnTransactionIdChanged()
    End Sub
    Partial Private Sub OnTransactionTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTransactionTypeChanged()
    End Sub
    Partial Private Sub OnUserIdChanging(value As String)
    End Sub
    Partial Private Sub OnUserIdChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAmountChanged()
    End Sub
    Partial Private Sub OnTransactionDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTransactionDateChanged()
    End Sub
    Partial Private Sub OnRowTimeStampChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnRowTimeStampChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransactionId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
		Public Property TransactionId() As Integer
			Get
				Return Me._TransactionId
			End Get
			Set
				If ((Me._TransactionId = value)  _
							= false) Then
					Me.OnTransactionIdChanging(value)
					Me.SendPropertyChanging
					Me._TransactionId = value
					Me.SendPropertyChanged("TransactionId")
					Me.OnTransactionIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransactionType", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
		Public Property TransactionType() As System.Nullable(Of Integer)
			Get
				Return Me._TransactionType
			End Get
			Set
				If (Me._TransactionType.Equals(value) = false) Then
					Me.OnTransactionTypeChanging(value)
					Me.SendPropertyChanging
					Me._TransactionType = value
					Me.SendPropertyChanged("TransactionType")
					Me.OnTransactionTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
		Public Property UserId() As String
			Get
				Return Me._UserId
			End Get
			Set
				If (String.Equals(Me._UserId, value) = false) Then
					Me.OnUserIdChanging(value)
					Me.SendPropertyChanging
					Me._UserId = value
					Me.SendPropertyChanged("UserId")
					Me.OnUserIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me.OnTitleChanging(value)
					Me.SendPropertyChanging
					Me._Title = value
					Me.SendPropertyChanged("Title")
					Me.OnTitleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me.OnDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._Description = value
					Me.SendPropertyChanged("Description")
					Me.OnDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Amount", DbType:="Money", UpdateCheck:=UpdateCheck.Never)>  _
		Public Property Amount() As System.Nullable(Of Decimal)
			Get
				Return Me._Amount
			End Get
			Set
				If (Me._Amount.Equals(value) = false) Then
					Me.OnAmountChanging(value)
					Me.SendPropertyChanging
					Me._Amount = value
					Me.SendPropertyChanged("Amount")
					Me.OnAmountChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransactionDate", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
		Public Property TransactionDate() As System.Nullable(Of Date)
			Get
				Return Me._TransactionDate
			End Get
			Set
				If (Me._TransactionDate.Equals(value) = false) Then
					Me.OnTransactionDateChanging(value)
					Me.SendPropertyChanging
					Me._TransactionDate = value
					Me.SendPropertyChanged("TransactionDate")
					Me.OnTransactionDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RowTimeStamp", AutoSync:=AutoSync.Always, DbType:="rowversion", IsDbGenerated:=true, IsVersion:=true, UpdateCheck:=UpdateCheck.Never)>  _
		Public Property RowTimeStamp() As System.Data.Linq.Binary
			Get
				Return Me._RowTimeStamp
			End Get
			Set
				If (Object.Equals(Me._RowTimeStamp, value) = false) Then
					Me.OnRowTimeStampChanging(value)
					Me.SendPropertyChanging
					Me._RowTimeStamp = value
					Me.SendPropertyChanged("RowTimeStamp")
					Me.OnRowTimeStampChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PublicationSpecialRate")>  _
	Partial Public Class PublicationSpecialRate
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _PublicationSpecialRateId As Integer
		
		Private _SpecialRateId As System.Nullable(Of Integer)
		
		Private _PublicationAdTypeId As System.Nullable(Of Integer)
		
		Private _PublicationCategoryId As System.Nullable(Of Integer)
		
		Private _PublicationAdType As EntityRef(Of PublicationAdType)
		
		Private _PublicationCategory As EntityRef(Of PublicationCategory)
		
		Private _SpecialRate As EntityRef(Of SpecialRate)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPublicationSpecialRateIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnPublicationSpecialRateIdChanged()
    End Sub
    Partial Private Sub OnSpecialRateIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSpecialRateIdChanged()
    End Sub
    Partial Private Sub OnPublicationAdTypeIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPublicationAdTypeIdChanged()
    End Sub
    Partial Private Sub OnPublicationCategoryIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPublicationCategoryIdChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._PublicationAdType = CType(Nothing, EntityRef(Of PublicationAdType))
			Me._PublicationCategory = CType(Nothing, EntityRef(Of PublicationCategory))
			Me._SpecialRate = CType(Nothing, EntityRef(Of SpecialRate))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationSpecialRateId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property PublicationSpecialRateId() As Integer
			Get
				Return Me._PublicationSpecialRateId
			End Get
			Set
				If ((Me._PublicationSpecialRateId = value)  _
							= false) Then
					Me.OnPublicationSpecialRateIdChanging(value)
					Me.SendPropertyChanging
					Me._PublicationSpecialRateId = value
					Me.SendPropertyChanged("PublicationSpecialRateId")
					Me.OnPublicationSpecialRateIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpecialRateId", DbType:="Int")>  _
		Public Property SpecialRateId() As System.Nullable(Of Integer)
			Get
				Return Me._SpecialRateId
			End Get
			Set
				If (Me._SpecialRateId.Equals(value) = false) Then
					If Me._SpecialRate.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnSpecialRateIdChanging(value)
					Me.SendPropertyChanging
					Me._SpecialRateId = value
					Me.SendPropertyChanged("SpecialRateId")
					Me.OnSpecialRateIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationAdTypeId", DbType:="Int")>  _
		Public Property PublicationAdTypeId() As System.Nullable(Of Integer)
			Get
				Return Me._PublicationAdTypeId
			End Get
			Set
				If (Me._PublicationAdTypeId.Equals(value) = false) Then
					If Me._PublicationAdType.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnPublicationAdTypeIdChanging(value)
					Me.SendPropertyChanging
					Me._PublicationAdTypeId = value
					Me.SendPropertyChanged("PublicationAdTypeId")
					Me.OnPublicationAdTypeIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationCategoryId", DbType:="Int")>  _
		Public Property PublicationCategoryId() As System.Nullable(Of Integer)
			Get
				Return Me._PublicationCategoryId
			End Get
			Set
				If (Me._PublicationCategoryId.Equals(value) = false) Then
					If Me._PublicationCategory.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnPublicationCategoryIdChanging(value)
					Me.SendPropertyChanging
					Me._PublicationCategoryId = value
					Me.SendPropertyChanged("PublicationCategoryId")
					Me.OnPublicationCategoryIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PublicationAdType_PublicationSpecialRate", Storage:="_PublicationAdType", ThisKey:="PublicationAdTypeId", OtherKey:="PublicationAdTypeId", IsForeignKey:=true)>  _
		Public Property PublicationAdType() As PublicationAdType
			Get
				Return Me._PublicationAdType.Entity
			End Get
			Set
				Dim previousValue As PublicationAdType = Me._PublicationAdType.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._PublicationAdType.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._PublicationAdType.Entity = Nothing
						previousValue.PublicationSpecialRates.Remove(Me)
					End If
					Me._PublicationAdType.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.PublicationSpecialRates.Add(Me)
						Me._PublicationAdTypeId = value.PublicationAdTypeId
					Else
						Me._PublicationAdTypeId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("PublicationAdType")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PublicationCategory_PublicationSpecialRate", Storage:="_PublicationCategory", ThisKey:="PublicationCategoryId", OtherKey:="PublicationCategoryId", IsForeignKey:=true)>  _
		Public Property PublicationCategory() As PublicationCategory
			Get
				Return Me._PublicationCategory.Entity
			End Get
			Set
				Dim previousValue As PublicationCategory = Me._PublicationCategory.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._PublicationCategory.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._PublicationCategory.Entity = Nothing
						previousValue.PublicationSpecialRates.Remove(Me)
					End If
					Me._PublicationCategory.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.PublicationSpecialRates.Add(Me)
						Me._PublicationCategoryId = value.PublicationCategoryId
					Else
						Me._PublicationCategoryId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("PublicationCategory")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="SpecialRate_PublicationSpecialRate", Storage:="_SpecialRate", ThisKey:="SpecialRateId", OtherKey:="SpecialRateId", IsForeignKey:=true)>  _
		Public Property SpecialRate() As SpecialRate
			Get
				Return Me._SpecialRate.Entity
			End Get
			Set
				Dim previousValue As SpecialRate = Me._SpecialRate.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._SpecialRate.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._SpecialRate.Entity = Nothing
						previousValue.PublicationSpecialRates.Remove(Me)
					End If
					Me._SpecialRate.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.PublicationSpecialRates.Add(Me)
						Me._SpecialRateId = value.SpecialRateId
					Else
						Me._SpecialRateId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("SpecialRate")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.BaseRate")>  _
	Partial Public Class BaseRate
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _BaseRateId As Integer
		
		Private _Title As String
		
		Private _Description As String
		
		Private _StartDate As System.Nullable(Of Date)
		
		Private _EndDate As System.Nullable(Of Date)
		
		Private _ImageUrl As String
		
		Private _SpecialRates As EntitySet(Of SpecialRate)
		
		Private _Ratecards As EntitySet(Of Ratecard)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBaseRateIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnBaseRateIdChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnStartDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnStartDateChanged()
    End Sub
    Partial Private Sub OnEndDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEndDateChanged()
    End Sub
    Partial Private Sub OnImageUrlChanging(value As String)
    End Sub
    Partial Private Sub OnImageUrlChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._SpecialRates = New EntitySet(Of SpecialRate)(AddressOf Me.attach_SpecialRates, AddressOf Me.detach_SpecialRates)
			Me._Ratecards = New EntitySet(Of Ratecard)(AddressOf Me.attach_Ratecards, AddressOf Me.detach_Ratecards)
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BaseRateId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property BaseRateId() As Integer
			Get
				Return Me._BaseRateId
			End Get
			Set
				If ((Me._BaseRateId = value)  _
							= false) Then
					Me.OnBaseRateIdChanging(value)
					Me.SendPropertyChanging
					Me._BaseRateId = value
					Me.SendPropertyChanged("BaseRateId")
					Me.OnBaseRateIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me.OnTitleChanging(value)
					Me.SendPropertyChanging
					Me._Title = value
					Me.SendPropertyChanged("Title")
					Me.OnTitleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(MAX)")>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me.OnDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._Description = value
					Me.SendPropertyChanged("Description")
					Me.OnDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="DateTime")>  _
		Public Property StartDate() As System.Nullable(Of Date)
			Get
				Return Me._StartDate
			End Get
			Set
				If (Me._StartDate.Equals(value) = false) Then
					Me.OnStartDateChanging(value)
					Me.SendPropertyChanging
					Me._StartDate = value
					Me.SendPropertyChanged("StartDate")
					Me.OnStartDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDate", DbType:="DateTime")>  _
		Public Property EndDate() As System.Nullable(Of Date)
			Get
				Return Me._EndDate
			End Get
			Set
				If (Me._EndDate.Equals(value) = false) Then
					Me.OnEndDateChanging(value)
					Me.SendPropertyChanging
					Me._EndDate = value
					Me.SendPropertyChanged("EndDate")
					Me.OnEndDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImageUrl", DbType:="NVarChar(255)")>  _
		Public Property ImageUrl() As String
			Get
				Return Me._ImageUrl
			End Get
			Set
				If (String.Equals(Me._ImageUrl, value) = false) Then
					Me.OnImageUrlChanging(value)
					Me.SendPropertyChanging
					Me._ImageUrl = value
					Me.SendPropertyChanged("ImageUrl")
					Me.OnImageUrlChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BaseRate_SpecialRate", Storage:="_SpecialRates", ThisKey:="BaseRateId", OtherKey:="BaseRateId")>  _
		Public Property SpecialRates() As EntitySet(Of SpecialRate)
			Get
				Return Me._SpecialRates
			End Get
			Set
				Me._SpecialRates.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BaseRate_Ratecard", Storage:="_Ratecards", ThisKey:="BaseRateId", OtherKey:="BaseRateId")>  _
		Public Property Ratecards() As EntitySet(Of Ratecard)
			Get
				Return Me._Ratecards
			End Get
			Set
				Me._Ratecards.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_SpecialRates(ByVal entity As SpecialRate)
			Me.SendPropertyChanging
			entity.BaseRate = Me
		End Sub
		
		Private Sub detach_SpecialRates(ByVal entity As SpecialRate)
			Me.SendPropertyChanging
			entity.BaseRate = Nothing
		End Sub
		
		Private Sub attach_Ratecards(ByVal entity As Ratecard)
			Me.SendPropertyChanging
			entity.BaseRate = Me
		End Sub
		
		Private Sub detach_Ratecards(ByVal entity As Ratecard)
			Me.SendPropertyChanging
			entity.BaseRate = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SpecialRate")>  _
	Partial Public Class SpecialRate
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _SpecialRateId As Integer
		
		Private _BaseRateId As System.Nullable(Of Integer)
		
		Private _NumOfInsertions As System.Nullable(Of Integer)
		
		Private _MaximumWords As System.Nullable(Of Integer)
		
		Private _SetPrice As System.Nullable(Of Decimal)
		
		Private _Discount As System.Nullable(Of Decimal)
		
		Private _NumOfAds As System.Nullable(Of Integer)
		
		Private _LineAdBoldHeader As System.Nullable(Of Boolean)
		
		Private _LineAdImage As System.Nullable(Of Boolean)
		
		Private _PublicationSpecialRates As EntitySet(Of PublicationSpecialRate)
		
		Private _BaseRate As EntityRef(Of BaseRate)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSpecialRateIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnSpecialRateIdChanged()
    End Sub
    Partial Private Sub OnBaseRateIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBaseRateIdChanged()
    End Sub
    Partial Private Sub OnNumOfInsertionsChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumOfInsertionsChanged()
    End Sub
    Partial Private Sub OnMaximumWordsChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMaximumWordsChanged()
    End Sub
    Partial Private Sub OnSetPriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSetPriceChanged()
    End Sub
    Partial Private Sub OnDiscountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDiscountChanged()
    End Sub
    Partial Private Sub OnNumOfAdsChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumOfAdsChanged()
    End Sub
    Partial Private Sub OnLineAdBoldHeaderChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnLineAdBoldHeaderChanged()
    End Sub
    Partial Private Sub OnLineAdImageChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnLineAdImageChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._PublicationSpecialRates = New EntitySet(Of PublicationSpecialRate)(AddressOf Me.attach_PublicationSpecialRates, AddressOf Me.detach_PublicationSpecialRates)
			Me._BaseRate = CType(Nothing, EntityRef(Of BaseRate))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpecialRateId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property SpecialRateId() As Integer
			Get
				Return Me._SpecialRateId
			End Get
			Set
				If ((Me._SpecialRateId = value)  _
							= false) Then
					Me.OnSpecialRateIdChanging(value)
					Me.SendPropertyChanging
					Me._SpecialRateId = value
					Me.SendPropertyChanged("SpecialRateId")
					Me.OnSpecialRateIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BaseRateId", DbType:="Int")>  _
		Public Property BaseRateId() As System.Nullable(Of Integer)
			Get
				Return Me._BaseRateId
			End Get
			Set
				If (Me._BaseRateId.Equals(value) = false) Then
					If Me._BaseRate.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnBaseRateIdChanging(value)
					Me.SendPropertyChanging
					Me._BaseRateId = value
					Me.SendPropertyChanged("BaseRateId")
					Me.OnBaseRateIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumOfInsertions", DbType:="Int")>  _
		Public Property NumOfInsertions() As System.Nullable(Of Integer)
			Get
				Return Me._NumOfInsertions
			End Get
			Set
				If (Me._NumOfInsertions.Equals(value) = false) Then
					Me.OnNumOfInsertionsChanging(value)
					Me.SendPropertyChanging
					Me._NumOfInsertions = value
					Me.SendPropertyChanged("NumOfInsertions")
					Me.OnNumOfInsertionsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaximumWords", DbType:="Int")>  _
		Public Property MaximumWords() As System.Nullable(Of Integer)
			Get
				Return Me._MaximumWords
			End Get
			Set
				If (Me._MaximumWords.Equals(value) = false) Then
					Me.OnMaximumWordsChanging(value)
					Me.SendPropertyChanging
					Me._MaximumWords = value
					Me.SendPropertyChanged("MaximumWords")
					Me.OnMaximumWordsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SetPrice", DbType:="Money")>  _
		Public Property SetPrice() As System.Nullable(Of Decimal)
			Get
				Return Me._SetPrice
			End Get
			Set
				If (Me._SetPrice.Equals(value) = false) Then
					Me.OnSetPriceChanging(value)
					Me.SendPropertyChanging
					Me._SetPrice = value
					Me.SendPropertyChanged("SetPrice")
					Me.OnSetPriceChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Discount", DbType:="Decimal(18,2)")>  _
		Public Property Discount() As System.Nullable(Of Decimal)
			Get
				Return Me._Discount
			End Get
			Set
				If (Me._Discount.Equals(value) = false) Then
					Me.OnDiscountChanging(value)
					Me.SendPropertyChanging
					Me._Discount = value
					Me.SendPropertyChanged("Discount")
					Me.OnDiscountChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumOfAds", DbType:="Int")>  _
		Public Property NumOfAds() As System.Nullable(Of Integer)
			Get
				Return Me._NumOfAds
			End Get
			Set
				If (Me._NumOfAds.Equals(value) = false) Then
					Me.OnNumOfAdsChanging(value)
					Me.SendPropertyChanging
					Me._NumOfAds = value
					Me.SendPropertyChanged("NumOfAds")
					Me.OnNumOfAdsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LineAdBoldHeader", DbType:="Bit")>  _
		Public Property LineAdBoldHeader() As System.Nullable(Of Boolean)
			Get
				Return Me._LineAdBoldHeader
			End Get
			Set
				If (Me._LineAdBoldHeader.Equals(value) = false) Then
					Me.OnLineAdBoldHeaderChanging(value)
					Me.SendPropertyChanging
					Me._LineAdBoldHeader = value
					Me.SendPropertyChanged("LineAdBoldHeader")
					Me.OnLineAdBoldHeaderChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LineAdImage", DbType:="Bit")>  _
		Public Property LineAdImage() As System.Nullable(Of Boolean)
			Get
				Return Me._LineAdImage
			End Get
			Set
				If (Me._LineAdImage.Equals(value) = false) Then
					Me.OnLineAdImageChanging(value)
					Me.SendPropertyChanging
					Me._LineAdImage = value
					Me.SendPropertyChanged("LineAdImage")
					Me.OnLineAdImageChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="SpecialRate_PublicationSpecialRate", Storage:="_PublicationSpecialRates", ThisKey:="SpecialRateId", OtherKey:="SpecialRateId")>  _
		Public Property PublicationSpecialRates() As EntitySet(Of PublicationSpecialRate)
			Get
				Return Me._PublicationSpecialRates
			End Get
			Set
				Me._PublicationSpecialRates.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BaseRate_SpecialRate", Storage:="_BaseRate", ThisKey:="BaseRateId", OtherKey:="BaseRateId", IsForeignKey:=true)>  _
		Public Property BaseRate() As BaseRate
			Get
				Return Me._BaseRate.Entity
			End Get
			Set
				Dim previousValue As BaseRate = Me._BaseRate.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._BaseRate.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._BaseRate.Entity = Nothing
						previousValue.SpecialRates.Remove(Me)
					End If
					Me._BaseRate.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.SpecialRates.Add(Me)
						Me._BaseRateId = value.BaseRateId
					Else
						Me._BaseRateId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("BaseRate")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_PublicationSpecialRates(ByVal entity As PublicationSpecialRate)
			Me.SendPropertyChanging
			entity.SpecialRate = Me
		End Sub
		
		Private Sub detach_PublicationSpecialRates(ByVal entity As PublicationSpecialRate)
			Me.SendPropertyChanging
			entity.SpecialRate = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AdGraphic")>  _
	Partial Public Class AdGraphic
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _AdGraphicId As Integer
		
		Private _AdDesignId As System.Nullable(Of Integer)
		
		Private _DocumentID As String
		
		Private _Filename As String
		
		Private _ImageType As String
		
		Private _ModifiedDate As System.Nullable(Of Date)
		
		Private _AdDesign As EntityRef(Of AdDesign)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAdGraphicIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnAdGraphicIdChanged()
    End Sub
    Partial Private Sub OnAdDesignIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAdDesignIdChanged()
    End Sub
    Partial Private Sub OnDocumentIDChanging(value As String)
    End Sub
    Partial Private Sub OnDocumentIDChanged()
    End Sub
    Partial Private Sub OnFilenameChanging(value As String)
    End Sub
    Partial Private Sub OnFilenameChanged()
    End Sub
    Partial Private Sub OnImageTypeChanging(value As String)
    End Sub
    Partial Private Sub OnImageTypeChanged()
    End Sub
    Partial Private Sub OnModifiedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedDateChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._AdDesign = CType(Nothing, EntityRef(Of AdDesign))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdGraphicId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property AdGraphicId() As Integer
			Get
				Return Me._AdGraphicId
			End Get
			Set
				If ((Me._AdGraphicId = value)  _
							= false) Then
					Me.OnAdGraphicIdChanging(value)
					Me.SendPropertyChanging
					Me._AdGraphicId = value
					Me.SendPropertyChanged("AdGraphicId")
					Me.OnAdGraphicIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdDesignId", DbType:="Int")>  _
		Public Property AdDesignId() As System.Nullable(Of Integer)
			Get
				Return Me._AdDesignId
			End Get
			Set
				If (Me._AdDesignId.Equals(value) = false) Then
					If Me._AdDesign.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnAdDesignIdChanging(value)
					Me.SendPropertyChanging
					Me._AdDesignId = value
					Me.SendPropertyChanged("AdDesignId")
					Me.OnAdDesignIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DocumentID", DbType:="NVarChar(100)")>  _
		Public Property DocumentID() As String
			Get
				Return Me._DocumentID
			End Get
			Set
				If (String.Equals(Me._DocumentID, value) = false) Then
					Me.OnDocumentIDChanging(value)
					Me.SendPropertyChanging
					Me._DocumentID = value
					Me.SendPropertyChanged("DocumentID")
					Me.OnDocumentIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Filename", DbType:="NVarChar(100)")>  _
		Public Property Filename() As String
			Get
				Return Me._Filename
			End Get
			Set
				If (String.Equals(Me._Filename, value) = false) Then
					Me.OnFilenameChanging(value)
					Me.SendPropertyChanging
					Me._Filename = value
					Me.SendPropertyChanged("Filename")
					Me.OnFilenameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImageType", DbType:="NVarChar(50)")>  _
		Public Property ImageType() As String
			Get
				Return Me._ImageType
			End Get
			Set
				If (String.Equals(Me._ImageType, value) = false) Then
					Me.OnImageTypeChanging(value)
					Me.SendPropertyChanging
					Me._ImageType = value
					Me.SendPropertyChanged("ImageType")
					Me.OnImageTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedDate", DbType:="DateTime")>  _
		Public Property ModifiedDate() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedDate
			End Get
			Set
				If (Me._ModifiedDate.Equals(value) = false) Then
					Me.OnModifiedDateChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedDate = value
					Me.SendPropertyChanged("ModifiedDate")
					Me.OnModifiedDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AdDesign_AdGraphic", Storage:="_AdDesign", ThisKey:="AdDesignId", OtherKey:="AdDesignId", IsForeignKey:=true)>  _
		Public Property AdDesign() As AdDesign
			Get
				Return Me._AdDesign.Entity
			End Get
			Set
				Dim previousValue As AdDesign = Me._AdDesign.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._AdDesign.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._AdDesign.Entity = Nothing
						previousValue.AdGraphics.Remove(Me)
					End If
					Me._AdDesign.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.AdGraphics.Add(Me)
						Me._AdDesignId = value.AdDesignId
					Else
						Me._AdDesignId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("AdDesign")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LocationArea")>  _
	Partial Public Class LocationArea
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _LocationAreaId As Integer
		
		Private _LocationId As Integer
		
		Private _Title As String
		
		Private _Description As String
		
		Private _OnlineAds As EntitySet(Of OnlineAd)
		
		Private _Location As EntityRef(Of Location)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLocationAreaIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnLocationAreaIdChanged()
    End Sub
    Partial Private Sub OnLocationIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnLocationIdChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._OnlineAds = New EntitySet(Of OnlineAd)(AddressOf Me.attach_OnlineAds, AddressOf Me.detach_OnlineAds)
			Me._Location = CType(Nothing, EntityRef(Of Location))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LocationAreaId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property LocationAreaId() As Integer
			Get
				Return Me._LocationAreaId
			End Get
			Set
				If ((Me._LocationAreaId = value)  _
							= false) Then
					Me.OnLocationAreaIdChanging(value)
					Me.SendPropertyChanging
					Me._LocationAreaId = value
					Me.SendPropertyChanged("LocationAreaId")
					Me.OnLocationAreaIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LocationId", DbType:="Int NOT NULL")>  _
		Public Property LocationId() As Integer
			Get
				Return Me._LocationId
			End Get
			Set
				If ((Me._LocationId = value)  _
							= false) Then
					If Me._Location.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnLocationIdChanging(value)
					Me.SendPropertyChanging
					Me._LocationId = value
					Me.SendPropertyChanged("LocationId")
					Me.OnLocationIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me.OnTitleChanging(value)
					Me.SendPropertyChanging
					Me._Title = value
					Me.SendPropertyChanged("Title")
					Me.OnTitleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(255)")>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me.OnDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._Description = value
					Me.SendPropertyChanged("Description")
					Me.OnDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="LocationArea_OnlineAd", Storage:="_OnlineAds", ThisKey:="LocationAreaId", OtherKey:="LocationAreaId")>  _
		Public Property OnlineAds() As EntitySet(Of OnlineAd)
			Get
				Return Me._OnlineAds
			End Get
			Set
				Me._OnlineAds.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Location_LocationArea", Storage:="_Location", ThisKey:="LocationId", OtherKey:="LocationId", IsForeignKey:=true)>  _
		Public Property Location() As Location
			Get
				Return Me._Location.Entity
			End Get
			Set
				Dim previousValue As Location = Me._Location.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._Location.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._Location.Entity = Nothing
						previousValue.LocationAreas.Remove(Me)
					End If
					Me._Location.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.LocationAreas.Add(Me)
						Me._LocationId = value.LocationId
					Else
						Me._LocationId = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("Location")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_OnlineAds(ByVal entity As OnlineAd)
			Me.SendPropertyChanging
			entity.LocationArea = Me
		End Sub
		
		Private Sub detach_OnlineAds(ByVal entity As OnlineAd)
			Me.SendPropertyChanging
			entity.LocationArea = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Location")>  _
	Partial Public Class Location
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _LocationId As Integer
		
		Private _Title As String
		
		Private _Description As String
		
		Private _LocationAreas As EntitySet(Of LocationArea)
		
		Private _OnlineAds As EntitySet(Of OnlineAd)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLocationIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnLocationIdChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._LocationAreas = New EntitySet(Of LocationArea)(AddressOf Me.attach_LocationAreas, AddressOf Me.detach_LocationAreas)
			Me._OnlineAds = New EntitySet(Of OnlineAd)(AddressOf Me.attach_OnlineAds, AddressOf Me.detach_OnlineAds)
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LocationId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property LocationId() As Integer
			Get
				Return Me._LocationId
			End Get
			Set
				If ((Me._LocationId = value)  _
							= false) Then
					Me.OnLocationIdChanging(value)
					Me.SendPropertyChanging
					Me._LocationId = value
					Me.SendPropertyChanged("LocationId")
					Me.OnLocationIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me.OnTitleChanging(value)
					Me.SendPropertyChanging
					Me._Title = value
					Me.SendPropertyChanged("Title")
					Me.OnTitleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(50)")>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me.OnDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._Description = value
					Me.SendPropertyChanged("Description")
					Me.OnDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Location_LocationArea", Storage:="_LocationAreas", ThisKey:="LocationId", OtherKey:="LocationId")>  _
		Public Property LocationAreas() As EntitySet(Of LocationArea)
			Get
				Return Me._LocationAreas
			End Get
			Set
				Me._LocationAreas.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Location_OnlineAd", Storage:="_OnlineAds", ThisKey:="LocationId", OtherKey:="LocationId")>  _
		Public Property OnlineAds() As EntitySet(Of OnlineAd)
			Get
				Return Me._OnlineAds
			End Get
			Set
				Me._OnlineAds.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_LocationAreas(ByVal entity As LocationArea)
			Me.SendPropertyChanging
			entity.Location = Me
		End Sub
		
		Private Sub detach_LocationAreas(ByVal entity As LocationArea)
			Me.SendPropertyChanging
			entity.Location = Nothing
		End Sub
		
		Private Sub attach_OnlineAds(ByVal entity As OnlineAd)
			Me.SendPropertyChanging
			entity.Location = Me
		End Sub
		
		Private Sub detach_OnlineAds(ByVal entity As OnlineAd)
			Me.SendPropertyChanging
			entity.Location = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AdBooking")>  _
	Partial Public Class AdBooking
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _AdBookingId As Integer
		
		Private _StartDate As System.Nullable(Of Date)
		
		Private _EndDate As System.Nullable(Of Date)
		
		Private _TotalPrice As System.Nullable(Of Decimal)
		
		Private _BookReference As String
		
		Private _AdId As System.Nullable(Of Integer)
		
		Private _UserId As String
		
		Private _BookingStatus As System.Nullable(Of Integer)
		
		Private _MainCategoryId As System.Nullable(Of Integer)
		
		Private _BookingType As String
		
		Private _Insertions As System.Nullable(Of Integer)
		
		Private _BookingDate As System.Nullable(Of Date)
		
		Private _BookEntries As EntitySet(Of BookEntry)
		
		Private _Ad As EntityRef(Of Ad)
		
		Private _MainCategory As EntityRef(Of MainCategory)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAdBookingIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnAdBookingIdChanged()
    End Sub
    Partial Private Sub OnStartDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnStartDateChanged()
    End Sub
    Partial Private Sub OnEndDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEndDateChanged()
    End Sub
    Partial Private Sub OnTotalPriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTotalPriceChanged()
    End Sub
    Partial Private Sub OnBookReferenceChanging(value As String)
    End Sub
    Partial Private Sub OnBookReferenceChanged()
    End Sub
    Partial Private Sub OnAdIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAdIdChanged()
    End Sub
    Partial Private Sub OnUserIdChanging(value As String)
    End Sub
    Partial Private Sub OnUserIdChanged()
    End Sub
    Partial Private Sub OnBookingStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBookingStatusChanged()
    End Sub
    Partial Private Sub OnMainCategoryIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMainCategoryIdChanged()
    End Sub
    Partial Private Sub OnBookingTypeChanging(value As String)
    End Sub
    Partial Private Sub OnBookingTypeChanged()
    End Sub
    Partial Private Sub OnInsertionsChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnInsertionsChanged()
    End Sub
    Partial Private Sub OnBookingDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnBookingDateChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._BookEntries = New EntitySet(Of BookEntry)(AddressOf Me.attach_BookEntries, AddressOf Me.detach_BookEntries)
			Me._Ad = CType(Nothing, EntityRef(Of Ad))
			Me._MainCategory = CType(Nothing, EntityRef(Of MainCategory))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdBookingId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property AdBookingId() As Integer
			Get
				Return Me._AdBookingId
			End Get
			Set
				If ((Me._AdBookingId = value)  _
							= false) Then
					Me.OnAdBookingIdChanging(value)
					Me.SendPropertyChanging
					Me._AdBookingId = value
					Me.SendPropertyChanged("AdBookingId")
					Me.OnAdBookingIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="DateTime")>  _
		Public Property StartDate() As System.Nullable(Of Date)
			Get
				Return Me._StartDate
			End Get
			Set
				If (Me._StartDate.Equals(value) = false) Then
					Me.OnStartDateChanging(value)
					Me.SendPropertyChanging
					Me._StartDate = value
					Me.SendPropertyChanged("StartDate")
					Me.OnStartDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDate", DbType:="DateTime")>  _
		Public Property EndDate() As System.Nullable(Of Date)
			Get
				Return Me._EndDate
			End Get
			Set
				If (Me._EndDate.Equals(value) = false) Then
					Me.OnEndDateChanging(value)
					Me.SendPropertyChanging
					Me._EndDate = value
					Me.SendPropertyChanged("EndDate")
					Me.OnEndDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalPrice", DbType:="Money")>  _
		Public Property TotalPrice() As System.Nullable(Of Decimal)
			Get
				Return Me._TotalPrice
			End Get
			Set
				If (Me._TotalPrice.Equals(value) = false) Then
					Me.OnTotalPriceChanging(value)
					Me.SendPropertyChanging
					Me._TotalPrice = value
					Me.SendPropertyChanged("TotalPrice")
					Me.OnTotalPriceChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BookReference", DbType:="NChar(10)")>  _
		Public Property BookReference() As String
			Get
				Return Me._BookReference
			End Get
			Set
				If (String.Equals(Me._BookReference, value) = false) Then
					Me.OnBookReferenceChanging(value)
					Me.SendPropertyChanging
					Me._BookReference = value
					Me.SendPropertyChanged("BookReference")
					Me.OnBookReferenceChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdId", DbType:="Int")>  _
		Public Property AdId() As System.Nullable(Of Integer)
			Get
				Return Me._AdId
			End Get
			Set
				If (Me._AdId.Equals(value) = false) Then
					If Me._Ad.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnAdIdChanging(value)
					Me.SendPropertyChanging
					Me._AdId = value
					Me.SendPropertyChanged("AdId")
					Me.OnAdIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="NVarChar(50)")>  _
		Public Property UserId() As String
			Get
				Return Me._UserId
			End Get
			Set
				If (String.Equals(Me._UserId, value) = false) Then
					Me.OnUserIdChanging(value)
					Me.SendPropertyChanging
					Me._UserId = value
					Me.SendPropertyChanged("UserId")
					Me.OnUserIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BookingStatus", DbType:="Int")>  _
		Public Property BookingStatus() As System.Nullable(Of Integer)
			Get
				Return Me._BookingStatus
			End Get
			Set
				If (Me._BookingStatus.Equals(value) = false) Then
					Me.OnBookingStatusChanging(value)
					Me.SendPropertyChanging
					Me._BookingStatus = value
					Me.SendPropertyChanged("BookingStatus")
					Me.OnBookingStatusChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MainCategoryId", DbType:="Int")>  _
		Public Property MainCategoryId() As System.Nullable(Of Integer)
			Get
				Return Me._MainCategoryId
			End Get
			Set
				If (Me._MainCategoryId.Equals(value) = false) Then
					If Me._MainCategory.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnMainCategoryIdChanging(value)
					Me.SendPropertyChanging
					Me._MainCategoryId = value
					Me.SendPropertyChanged("MainCategoryId")
					Me.OnMainCategoryIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BookingType", DbType:="NVarChar(20)", UpdateCheck:=UpdateCheck.Never)>  _
		Public Property BookingType() As String
			Get
				Return Me._BookingType
			End Get
			Set
				If (String.Equals(Me._BookingType, value) = false) Then
					Me.OnBookingTypeChanging(value)
					Me.SendPropertyChanging
					Me._BookingType = value
					Me.SendPropertyChanged("BookingType")
					Me.OnBookingTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Insertions", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
		Public Property Insertions() As System.Nullable(Of Integer)
			Get
				Return Me._Insertions
			End Get
			Set
				If (Me._Insertions.Equals(value) = false) Then
					Me.OnInsertionsChanging(value)
					Me.SendPropertyChanging
					Me._Insertions = value
					Me.SendPropertyChanged("Insertions")
					Me.OnInsertionsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BookingDate", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
		Public Property BookingDate() As System.Nullable(Of Date)
			Get
				Return Me._BookingDate
			End Get
			Set
				If (Me._BookingDate.Equals(value) = false) Then
					Me.OnBookingDateChanging(value)
					Me.SendPropertyChanging
					Me._BookingDate = value
					Me.SendPropertyChanged("BookingDate")
					Me.OnBookingDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AdBooking_BookEntry", Storage:="_BookEntries", ThisKey:="AdBookingId", OtherKey:="AdBookingId")>  _
		Public Property BookEntries() As EntitySet(Of BookEntry)
			Get
				Return Me._BookEntries
			End Get
			Set
				Me._BookEntries.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Ad_AdBooking", Storage:="_Ad", ThisKey:="AdId", OtherKey:="AdId", IsForeignKey:=true)>  _
		Public Property Ad() As Ad
			Get
				Return Me._Ad.Entity
			End Get
			Set
				Dim previousValue As Ad = Me._Ad.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._Ad.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._Ad.Entity = Nothing
						previousValue.AdBookings.Remove(Me)
					End If
					Me._Ad.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.AdBookings.Add(Me)
						Me._AdId = value.AdId
					Else
						Me._AdId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("Ad")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="MainCategory_AdBooking", Storage:="_MainCategory", ThisKey:="MainCategoryId", OtherKey:="MainCategoryId", IsForeignKey:=true)>  _
		Public Property MainCategory() As MainCategory
			Get
				Return Me._MainCategory.Entity
			End Get
			Set
				Dim previousValue As MainCategory = Me._MainCategory.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._MainCategory.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._MainCategory.Entity = Nothing
						previousValue.AdBookings.Remove(Me)
					End If
					Me._MainCategory.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.AdBookings.Add(Me)
						Me._MainCategoryId = value.MainCategoryId
					Else
						Me._MainCategoryId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("MainCategory")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_BookEntries(ByVal entity As BookEntry)
			Me.SendPropertyChanging
			entity.AdBooking = Me
		End Sub
		
		Private Sub detach_BookEntries(ByVal entity As BookEntry)
			Me.SendPropertyChanging
			entity.AdBooking = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.OnlineAd")>  _
	Partial Public Class OnlineAd
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _OnlineAdId As Integer
		
		Private _AdDesignId As System.Nullable(Of Integer)
		
		Private _Heading As String
		
		Private _Description As String
		
		Private _HtmlText As String
		
		Private _Price As System.Nullable(Of Decimal)
		
		Private _LocationId As System.Nullable(Of Integer)
		
		Private _LocationAreaId As System.Nullable(Of Integer)
		
		Private _ContactName As String
		
		Private _ContactType As String
		
		Private _ContactValue As String
		
		Private _NumOfViews As System.Nullable(Of Integer)
		
		Private _OnlineAdEnquiries As EntitySet(Of OnlineAdEnquiry)
		
		Private _Location As EntityRef(Of Location)
		
		Private _LocationArea As EntityRef(Of LocationArea)
		
		Private _AdDesign As EntityRef(Of AdDesign)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnOnlineAdIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnOnlineAdIdChanged()
    End Sub
    Partial Private Sub OnAdDesignIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAdDesignIdChanged()
    End Sub
    Partial Private Sub OnHeadingChanging(value As String)
    End Sub
    Partial Private Sub OnHeadingChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnHtmlTextChanging(value As String)
    End Sub
    Partial Private Sub OnHtmlTextChanged()
    End Sub
    Partial Private Sub OnPriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPriceChanged()
    End Sub
    Partial Private Sub OnLocationIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLocationIdChanged()
    End Sub
    Partial Private Sub OnLocationAreaIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLocationAreaIdChanged()
    End Sub
    Partial Private Sub OnContactNameChanging(value As String)
    End Sub
    Partial Private Sub OnContactNameChanged()
    End Sub
    Partial Private Sub OnContactTypeChanging(value As String)
    End Sub
    Partial Private Sub OnContactTypeChanged()
    End Sub
    Partial Private Sub OnContactValueChanging(value As String)
    End Sub
    Partial Private Sub OnContactValueChanged()
    End Sub
    Partial Private Sub OnNumOfViewsChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumOfViewsChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._OnlineAdEnquiries = New EntitySet(Of OnlineAdEnquiry)(AddressOf Me.attach_OnlineAdEnquiries, AddressOf Me.detach_OnlineAdEnquiries)
			Me._Location = CType(Nothing, EntityRef(Of Location))
			Me._LocationArea = CType(Nothing, EntityRef(Of LocationArea))
			Me._AdDesign = CType(Nothing, EntityRef(Of AdDesign))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OnlineAdId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property OnlineAdId() As Integer
			Get
				Return Me._OnlineAdId
			End Get
			Set
				If ((Me._OnlineAdId = value)  _
							= false) Then
					Me.OnOnlineAdIdChanging(value)
					Me.SendPropertyChanging
					Me._OnlineAdId = value
					Me.SendPropertyChanged("OnlineAdId")
					Me.OnOnlineAdIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdDesignId", DbType:="Int")>  _
		Public Property AdDesignId() As System.Nullable(Of Integer)
			Get
				Return Me._AdDesignId
			End Get
			Set
				If (Me._AdDesignId.Equals(value) = false) Then
					If Me._AdDesign.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnAdDesignIdChanging(value)
					Me.SendPropertyChanging
					Me._AdDesignId = value
					Me.SendPropertyChanged("AdDesignId")
					Me.OnAdDesignIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Heading", DbType:="NVarChar(255)")>  _
		Public Property Heading() As String
			Get
				Return Me._Heading
			End Get
			Set
				If (String.Equals(Me._Heading, value) = false) Then
					Me.OnHeadingChanging(value)
					Me.SendPropertyChanging
					Me._Heading = value
					Me.SendPropertyChanged("Heading")
					Me.OnHeadingChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(MAX)")>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me.OnDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._Description = value
					Me.SendPropertyChanged("Description")
					Me.OnDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HtmlText", DbType:="NVarChar(MAX)")>  _
		Public Property HtmlText() As String
			Get
				Return Me._HtmlText
			End Get
			Set
				If (String.Equals(Me._HtmlText, value) = false) Then
					Me.OnHtmlTextChanging(value)
					Me.SendPropertyChanging
					Me._HtmlText = value
					Me.SendPropertyChanged("HtmlText")
					Me.OnHtmlTextChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Price", DbType:="Money")>  _
		Public Property Price() As System.Nullable(Of Decimal)
			Get
				Return Me._Price
			End Get
			Set
				If (Me._Price.Equals(value) = false) Then
					Me.OnPriceChanging(value)
					Me.SendPropertyChanging
					Me._Price = value
					Me.SendPropertyChanged("Price")
					Me.OnPriceChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LocationId", DbType:="Int")>  _
		Public Property LocationId() As System.Nullable(Of Integer)
			Get
				Return Me._LocationId
			End Get
			Set
				If (Me._LocationId.Equals(value) = false) Then
					If Me._Location.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnLocationIdChanging(value)
					Me.SendPropertyChanging
					Me._LocationId = value
					Me.SendPropertyChanged("LocationId")
					Me.OnLocationIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LocationAreaId", DbType:="Int")>  _
		Public Property LocationAreaId() As System.Nullable(Of Integer)
			Get
				Return Me._LocationAreaId
			End Get
			Set
				If (Me._LocationAreaId.Equals(value) = false) Then
					If Me._LocationArea.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnLocationAreaIdChanging(value)
					Me.SendPropertyChanging
					Me._LocationAreaId = value
					Me.SendPropertyChanged("LocationAreaId")
					Me.OnLocationAreaIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactName", DbType:="NVarChar(200)")>  _
		Public Property ContactName() As String
			Get
				Return Me._ContactName
			End Get
			Set
				If (String.Equals(Me._ContactName, value) = false) Then
					Me.OnContactNameChanging(value)
					Me.SendPropertyChanging
					Me._ContactName = value
					Me.SendPropertyChanged("ContactName")
					Me.OnContactNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactType", DbType:="NVarChar(20)")>  _
		Public Property ContactType() As String
			Get
				Return Me._ContactType
			End Get
			Set
				If (String.Equals(Me._ContactType, value) = false) Then
					Me.OnContactTypeChanging(value)
					Me.SendPropertyChanging
					Me._ContactType = value
					Me.SendPropertyChanged("ContactType")
					Me.OnContactTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactValue", DbType:="NVarChar(100)")>  _
		Public Property ContactValue() As String
			Get
				Return Me._ContactValue
			End Get
			Set
				If (String.Equals(Me._ContactValue, value) = false) Then
					Me.OnContactValueChanging(value)
					Me.SendPropertyChanging
					Me._ContactValue = value
					Me.SendPropertyChanged("ContactValue")
					Me.OnContactValueChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumOfViews", DbType:="Int")>  _
		Public Property NumOfViews() As System.Nullable(Of Integer)
			Get
				Return Me._NumOfViews
			End Get
			Set
				If (Me._NumOfViews.Equals(value) = false) Then
					Me.OnNumOfViewsChanging(value)
					Me.SendPropertyChanging
					Me._NumOfViews = value
					Me.SendPropertyChanged("NumOfViews")
					Me.OnNumOfViewsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="OnlineAd_OnlineAdEnquiry", Storage:="_OnlineAdEnquiries", ThisKey:="OnlineAdId", OtherKey:="OnlineAdId")>  _
		Public Property OnlineAdEnquiries() As EntitySet(Of OnlineAdEnquiry)
			Get
				Return Me._OnlineAdEnquiries
			End Get
			Set
				Me._OnlineAdEnquiries.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Location_OnlineAd", Storage:="_Location", ThisKey:="LocationId", OtherKey:="LocationId", IsForeignKey:=true)>  _
		Public Property Location() As Location
			Get
				Return Me._Location.Entity
			End Get
			Set
				Dim previousValue As Location = Me._Location.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._Location.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._Location.Entity = Nothing
						previousValue.OnlineAds.Remove(Me)
					End If
					Me._Location.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.OnlineAds.Add(Me)
						Me._LocationId = value.LocationId
					Else
						Me._LocationId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("Location")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="LocationArea_OnlineAd", Storage:="_LocationArea", ThisKey:="LocationAreaId", OtherKey:="LocationAreaId", IsForeignKey:=true)>  _
		Public Property LocationArea() As LocationArea
			Get
				Return Me._LocationArea.Entity
			End Get
			Set
				Dim previousValue As LocationArea = Me._LocationArea.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._LocationArea.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._LocationArea.Entity = Nothing
						previousValue.OnlineAds.Remove(Me)
					End If
					Me._LocationArea.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.OnlineAds.Add(Me)
						Me._LocationAreaId = value.LocationAreaId
					Else
						Me._LocationAreaId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("LocationArea")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AdDesign_OnlineAd", Storage:="_AdDesign", ThisKey:="AdDesignId", OtherKey:="AdDesignId", IsForeignKey:=true)>  _
		Public Property AdDesign() As AdDesign
			Get
				Return Me._AdDesign.Entity
			End Get
			Set
				Dim previousValue As AdDesign = Me._AdDesign.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._AdDesign.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._AdDesign.Entity = Nothing
						previousValue.OnlineAds.Remove(Me)
					End If
					Me._AdDesign.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.OnlineAds.Add(Me)
						Me._AdDesignId = value.AdDesignId
					Else
						Me._AdDesignId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("AdDesign")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_OnlineAdEnquiries(ByVal entity As OnlineAdEnquiry)
			Me.SendPropertyChanging
			entity.OnlineAd = Me
		End Sub
		
		Private Sub detach_OnlineAdEnquiries(ByVal entity As OnlineAdEnquiry)
			Me.SendPropertyChanging
			entity.OnlineAd = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Publication")>  _
	Partial Public Class Publication
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _PublicationId As Integer
		
		Private _Title As String
		
		Private _Description As String
		
		Private _PublicationTypeId As System.Nullable(Of Integer)
		
		Private _ImageUrl As String
		
		Private _FrequencyType As String
		
		Private _FrequencyValue As String
		
		Private _Active As System.Nullable(Of Boolean)
		
		Private _SortOrder As System.Nullable(Of Integer)
		
		Private _BookEntries As EntitySet(Of BookEntry)
		
		Private _PublicationAdTypes As EntitySet(Of PublicationAdType)
		
		Private _PublicationCategories As EntitySet(Of PublicationCategory)
		
		Private _Editions As EntitySet(Of Edition)
		
		Private _PublicationType As EntityRef(Of PublicationType)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPublicationIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnPublicationIdChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnPublicationTypeIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPublicationTypeIdChanged()
    End Sub
    Partial Private Sub OnImageUrlChanging(value As String)
    End Sub
    Partial Private Sub OnImageUrlChanged()
    End Sub
    Partial Private Sub OnFrequencyTypeChanging(value As String)
    End Sub
    Partial Private Sub OnFrequencyTypeChanged()
    End Sub
    Partial Private Sub OnFrequencyValueChanging(value As String)
    End Sub
    Partial Private Sub OnFrequencyValueChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSortOrderChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSortOrderChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._BookEntries = New EntitySet(Of BookEntry)(AddressOf Me.attach_BookEntries, AddressOf Me.detach_BookEntries)
			Me._PublicationAdTypes = New EntitySet(Of PublicationAdType)(AddressOf Me.attach_PublicationAdTypes, AddressOf Me.detach_PublicationAdTypes)
			Me._PublicationCategories = New EntitySet(Of PublicationCategory)(AddressOf Me.attach_PublicationCategories, AddressOf Me.detach_PublicationCategories)
			Me._Editions = New EntitySet(Of Edition)(AddressOf Me.attach_Editions, AddressOf Me.detach_Editions)
			Me._PublicationType = CType(Nothing, EntityRef(Of PublicationType))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property PublicationId() As Integer
			Get
				Return Me._PublicationId
			End Get
			Set
				If ((Me._PublicationId = value)  _
							= false) Then
					Me.OnPublicationIdChanging(value)
					Me.SendPropertyChanging
					Me._PublicationId = value
					Me.SendPropertyChanged("PublicationId")
					Me.OnPublicationIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me.OnTitleChanging(value)
					Me.SendPropertyChanging
					Me._Title = value
					Me.SendPropertyChanged("Title")
					Me.OnTitleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(MAX)")>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me.OnDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._Description = value
					Me.SendPropertyChanged("Description")
					Me.OnDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationTypeId", DbType:="Int")>  _
		Public Property PublicationTypeId() As System.Nullable(Of Integer)
			Get
				Return Me._PublicationTypeId
			End Get
			Set
				If (Me._PublicationTypeId.Equals(value) = false) Then
					If Me._PublicationType.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnPublicationTypeIdChanging(value)
					Me.SendPropertyChanging
					Me._PublicationTypeId = value
					Me.SendPropertyChanged("PublicationTypeId")
					Me.OnPublicationTypeIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImageUrl", DbType:="NVarChar(255)")>  _
		Public Property ImageUrl() As String
			Get
				Return Me._ImageUrl
			End Get
			Set
				If (String.Equals(Me._ImageUrl, value) = false) Then
					Me.OnImageUrlChanging(value)
					Me.SendPropertyChanging
					Me._ImageUrl = value
					Me.SendPropertyChanged("ImageUrl")
					Me.OnImageUrlChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FrequencyType", DbType:="NVarChar(20)")>  _
		Public Property FrequencyType() As String
			Get
				Return Me._FrequencyType
			End Get
			Set
				If (String.Equals(Me._FrequencyType, value) = false) Then
					Me.OnFrequencyTypeChanging(value)
					Me.SendPropertyChanging
					Me._FrequencyType = value
					Me.SendPropertyChanged("FrequencyType")
					Me.OnFrequencyTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FrequencyValue", DbType:="NVarChar(20)")>  _
		Public Property FrequencyValue() As String
			Get
				Return Me._FrequencyValue
			End Get
			Set
				If (String.Equals(Me._FrequencyValue, value) = false) Then
					Me.OnFrequencyValueChanging(value)
					Me.SendPropertyChanging
					Me._FrequencyValue = value
					Me.SendPropertyChanged("FrequencyValue")
					Me.OnFrequencyValueChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="Bit")>  _
		Public Property Active() As System.Nullable(Of Boolean)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SortOrder", DbType:="Int")>  _
		Public Property SortOrder() As System.Nullable(Of Integer)
			Get
				Return Me._SortOrder
			End Get
			Set
				If (Me._SortOrder.Equals(value) = false) Then
					Me.OnSortOrderChanging(value)
					Me.SendPropertyChanging
					Me._SortOrder = value
					Me.SendPropertyChanged("SortOrder")
					Me.OnSortOrderChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Publication_BookEntry", Storage:="_BookEntries", ThisKey:="PublicationId", OtherKey:="PublicationId")>  _
		Public Property BookEntries() As EntitySet(Of BookEntry)
			Get
				Return Me._BookEntries
			End Get
			Set
				Me._BookEntries.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Publication_PublicationAdType", Storage:="_PublicationAdTypes", ThisKey:="PublicationId", OtherKey:="PublicationId")>  _
		Public Property PublicationAdTypes() As EntitySet(Of PublicationAdType)
			Get
				Return Me._PublicationAdTypes
			End Get
			Set
				Me._PublicationAdTypes.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Publication_PublicationCategory", Storage:="_PublicationCategories", ThisKey:="PublicationId", OtherKey:="PublicationId")>  _
		Public Property PublicationCategories() As EntitySet(Of PublicationCategory)
			Get
				Return Me._PublicationCategories
			End Get
			Set
				Me._PublicationCategories.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Publication_Edition", Storage:="_Editions", ThisKey:="PublicationId", OtherKey:="PublicationId")>  _
		Public Property Editions() As EntitySet(Of Edition)
			Get
				Return Me._Editions
			End Get
			Set
				Me._Editions.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PublicationType_Publication", Storage:="_PublicationType", ThisKey:="PublicationTypeId", OtherKey:="PublicationTypeId", IsForeignKey:=true)>  _
		Public Property PublicationType() As PublicationType
			Get
				Return Me._PublicationType.Entity
			End Get
			Set
				Dim previousValue As PublicationType = Me._PublicationType.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._PublicationType.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._PublicationType.Entity = Nothing
						previousValue.Publications.Remove(Me)
					End If
					Me._PublicationType.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.Publications.Add(Me)
						Me._PublicationTypeId = value.PublicationTypeId
					Else
						Me._PublicationTypeId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("PublicationType")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_BookEntries(ByVal entity As BookEntry)
			Me.SendPropertyChanging
			entity.Publication = Me
		End Sub
		
		Private Sub detach_BookEntries(ByVal entity As BookEntry)
			Me.SendPropertyChanging
			entity.Publication = Nothing
		End Sub
		
		Private Sub attach_PublicationAdTypes(ByVal entity As PublicationAdType)
			Me.SendPropertyChanging
			entity.Publication = Me
		End Sub
		
		Private Sub detach_PublicationAdTypes(ByVal entity As PublicationAdType)
			Me.SendPropertyChanging
			entity.Publication = Nothing
		End Sub
		
		Private Sub attach_PublicationCategories(ByVal entity As PublicationCategory)
			Me.SendPropertyChanging
			entity.Publication = Me
		End Sub
		
		Private Sub detach_PublicationCategories(ByVal entity As PublicationCategory)
			Me.SendPropertyChanging
			entity.Publication = Nothing
		End Sub
		
		Private Sub attach_Editions(ByVal entity As Edition)
			Me.SendPropertyChanging
			entity.Publication = Me
		End Sub
		
		Private Sub detach_Editions(ByVal entity As Edition)
			Me.SendPropertyChanging
			entity.Publication = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Edition")>  _
	Partial Public Class Edition
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _EditionId As Integer
		
		Private _PublicationId As System.Nullable(Of Integer)
		
		Private _EditionDate As System.Nullable(Of Date)
		
		Private _Deadline As System.Nullable(Of Date)
		
		Private _Active As System.Nullable(Of Boolean)
		
		Private _Publication As EntityRef(Of Publication)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnEditionIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnEditionIdChanged()
    End Sub
    Partial Private Sub OnPublicationIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPublicationIdChanged()
    End Sub
    Partial Private Sub OnEditionDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEditionDateChanged()
    End Sub
    Partial Private Sub OnDeadlineChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDeadlineChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._Publication = CType(Nothing, EntityRef(Of Publication))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EditionId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property EditionId() As Integer
			Get
				Return Me._EditionId
			End Get
			Set
				If ((Me._EditionId = value)  _
							= false) Then
					Me.OnEditionIdChanging(value)
					Me.SendPropertyChanging
					Me._EditionId = value
					Me.SendPropertyChanged("EditionId")
					Me.OnEditionIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationId", DbType:="Int")>  _
		Public Property PublicationId() As System.Nullable(Of Integer)
			Get
				Return Me._PublicationId
			End Get
			Set
				If (Me._PublicationId.Equals(value) = false) Then
					If Me._Publication.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnPublicationIdChanging(value)
					Me.SendPropertyChanging
					Me._PublicationId = value
					Me.SendPropertyChanged("PublicationId")
					Me.OnPublicationIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EditionDate", DbType:="DateTime")>  _
		Public Property EditionDate() As System.Nullable(Of Date)
			Get
				Return Me._EditionDate
			End Get
			Set
				If (Me._EditionDate.Equals(value) = false) Then
					Me.OnEditionDateChanging(value)
					Me.SendPropertyChanging
					Me._EditionDate = value
					Me.SendPropertyChanged("EditionDate")
					Me.OnEditionDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deadline", DbType:="DateTime")>  _
		Public Property Deadline() As System.Nullable(Of Date)
			Get
				Return Me._Deadline
			End Get
			Set
				If (Me._Deadline.Equals(value) = false) Then
					Me.OnDeadlineChanging(value)
					Me.SendPropertyChanging
					Me._Deadline = value
					Me.SendPropertyChanged("Deadline")
					Me.OnDeadlineChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="Bit")>  _
		Public Property Active() As System.Nullable(Of Boolean)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Publication_Edition", Storage:="_Publication", ThisKey:="PublicationId", OtherKey:="PublicationId", IsForeignKey:=true)>  _
		Public Property Publication() As Publication
			Get
				Return Me._Publication.Entity
			End Get
			Set
				Dim previousValue As Publication = Me._Publication.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._Publication.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._Publication.Entity = Nothing
						previousValue.Editions.Remove(Me)
					End If
					Me._Publication.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.Editions.Add(Me)
						Me._PublicationId = value.PublicationId
					Else
						Me._PublicationId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("Publication")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Invoice")>  _
	Partial Public Class Invoice
		
		Private _StartDate As System.Nullable(Of Date)
		
		Private _EndDate As System.Nullable(Of Date)
		
		Private _TotalPrice As System.Nullable(Of Decimal)
		
		Private _Category As String
		
		Private _BookReference As String
		
		Private _UserId As String
		
		Private _Publication As String
		
		Private _EditionDate As System.Nullable(Of Date)
		
		Private _TransactionDate As System.Nullable(Of Date)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="DateTime")>  _
		Public Property StartDate() As System.Nullable(Of Date)
			Get
				Return Me._StartDate
			End Get
			Set
				If (Me._StartDate.Equals(value) = false) Then
					Me._StartDate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDate", DbType:="DateTime")>  _
		Public Property EndDate() As System.Nullable(Of Date)
			Get
				Return Me._EndDate
			End Get
			Set
				If (Me._EndDate.Equals(value) = false) Then
					Me._EndDate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalPrice", DbType:="Money")>  _
		Public Property TotalPrice() As System.Nullable(Of Decimal)
			Get
				Return Me._TotalPrice
			End Get
			Set
				If (Me._TotalPrice.Equals(value) = false) Then
					Me._TotalPrice = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="NVarChar(50)")>  _
		Public Property Category() As String
			Get
				Return Me._Category
			End Get
			Set
				If (String.Equals(Me._Category, value) = false) Then
					Me._Category = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BookReference", DbType:="NChar(10)")>  _
		Public Property BookReference() As String
			Get
				Return Me._BookReference
			End Get
			Set
				If (String.Equals(Me._BookReference, value) = false) Then
					Me._BookReference = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="NVarChar(50)")>  _
		Public Property UserId() As String
			Get
				Return Me._UserId
			End Get
			Set
				If (String.Equals(Me._UserId, value) = false) Then
					Me._UserId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Publication", DbType:="NVarChar(50)")>  _
		Public Property Publication() As String
			Get
				Return Me._Publication
			End Get
			Set
				If (String.Equals(Me._Publication, value) = false) Then
					Me._Publication = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EditionDate", DbType:="DateTime")>  _
		Public Property EditionDate() As System.Nullable(Of Date)
			Get
				Return Me._EditionDate
			End Get
			Set
				If (Me._EditionDate.Equals(value) = false) Then
					Me._EditionDate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransactionDate", DbType:="DateTime")>  _
		Public Property TransactionDate() As System.Nullable(Of Date)
			Get
				Return Me._TransactionDate
			End Get
			Set
				If (Me._TransactionDate.Equals(value) = false) Then
					Me._TransactionDate = value
				End If
			End Set
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TempBookingRecord")>  _
	Partial Public Class TempBookingRecord
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _BookingRecordId As System.Guid
		
		Private _TotalCost As Decimal
		
		Private _SessionID As String
		
		Private _UserId As String
		
		Private _DateTime As Date
		
		Private _AdReferenceId As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBookingRecordIdChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnBookingRecordIdChanged()
    End Sub
    Partial Private Sub OnTotalCostChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTotalCostChanged()
    End Sub
    Partial Private Sub OnSessionIDChanging(value As String)
    End Sub
    Partial Private Sub OnSessionIDChanged()
    End Sub
    Partial Private Sub OnUserIdChanging(value As String)
    End Sub
    Partial Private Sub OnUserIdChanged()
    End Sub
    Partial Private Sub OnDateTimeChanging(value As Date)
    End Sub
    Partial Private Sub OnDateTimeChanged()
    End Sub
    Partial Private Sub OnAdReferenceIdChanging(value As String)
    End Sub
    Partial Private Sub OnAdReferenceIdChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BookingRecordId", DbType:="UniqueIdentifier NOT NULL", IsPrimaryKey:=true)>  _
		Public Property BookingRecordId() As System.Guid
			Get
				Return Me._BookingRecordId
			End Get
			Set
				If ((Me._BookingRecordId = value)  _
							= false) Then
					Me.OnBookingRecordIdChanging(value)
					Me.SendPropertyChanging
					Me._BookingRecordId = value
					Me.SendPropertyChanged("BookingRecordId")
					Me.OnBookingRecordIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalCost", DbType:="Money NOT NULL")>  _
		Public Property TotalCost() As Decimal
			Get
				Return Me._TotalCost
			End Get
			Set
				If ((Me._TotalCost = value)  _
							= false) Then
					Me.OnTotalCostChanging(value)
					Me.SendPropertyChanging
					Me._TotalCost = value
					Me.SendPropertyChanged("TotalCost")
					Me.OnTotalCostChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SessionID", DbType:="VarChar(25) NOT NULL", CanBeNull:=false)>  _
		Public Property SessionID() As String
			Get
				Return Me._SessionID
			End Get
			Set
				If (String.Equals(Me._SessionID, value) = false) Then
					Me.OnSessionIDChanging(value)
					Me.SendPropertyChanging
					Me._SessionID = value
					Me.SendPropertyChanged("SessionID")
					Me.OnSessionIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property UserId() As String
			Get
				Return Me._UserId
			End Get
			Set
				If (String.Equals(Me._UserId, value) = false) Then
					Me.OnUserIdChanging(value)
					Me.SendPropertyChanging
					Me._UserId = value
					Me.SendPropertyChanged("UserId")
					Me.OnUserIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateTime", DbType:="DateTime NOT NULL")>  _
		Public Property DateTime() As Date
			Get
				Return Me._DateTime
			End Get
			Set
				If ((Me._DateTime = value)  _
							= false) Then
					Me.OnDateTimeChanging(value)
					Me.SendPropertyChanging
					Me._DateTime = value
					Me.SendPropertyChanged("DateTime")
					Me.OnDateTimeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdReferenceId", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
		Public Property AdReferenceId() As String
			Get
				Return Me._AdReferenceId
			End Get
			Set
				If (String.Equals(Me._AdReferenceId, value) = false) Then
					Me.OnAdReferenceIdChanging(value)
					Me.SendPropertyChanging
					Me._AdReferenceId = value
					Me.SendPropertyChanged("AdReferenceId")
					Me.OnAdReferenceIdChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WebAdSpace")>  _
	Partial Public Class WebAdSpace
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _WebAdSpaceId As Integer
		
		Private _Title As String
		
		Private _SettingID As System.Nullable(Of Integer)
		
		Private _SortOrder As System.Nullable(Of Integer)
		
		Private _AdLinkUrl As String
		
		Private _AdTarget As String
		
		Private _SpaceType As System.Nullable(Of Integer)
		
		Private _ImageUrl As String
		
		Private _DisplayText As String
		
		Private _ToolTipText As String
		
		Private _Active As System.Nullable(Of Boolean)
		
		Private _WebAdSpaceSetting As EntityRef(Of WebAdSpaceSetting)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnWebAdSpaceIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnWebAdSpaceIdChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnSettingIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSettingIDChanged()
    End Sub
    Partial Private Sub OnSortOrderChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSortOrderChanged()
    End Sub
    Partial Private Sub OnAdLinkUrlChanging(value As String)
    End Sub
    Partial Private Sub OnAdLinkUrlChanged()
    End Sub
    Partial Private Sub OnAdTargetChanging(value As String)
    End Sub
    Partial Private Sub OnAdTargetChanged()
    End Sub
    Partial Private Sub OnSpaceTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSpaceTypeChanged()
    End Sub
    Partial Private Sub OnImageUrlChanging(value As String)
    End Sub
    Partial Private Sub OnImageUrlChanged()
    End Sub
    Partial Private Sub OnDisplayTextChanging(value As String)
    End Sub
    Partial Private Sub OnDisplayTextChanged()
    End Sub
    Partial Private Sub OnToolTipTextChanging(value As String)
    End Sub
    Partial Private Sub OnToolTipTextChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._WebAdSpaceSetting = CType(Nothing, EntityRef(Of WebAdSpaceSetting))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WebAdSpaceId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property WebAdSpaceId() As Integer
			Get
				Return Me._WebAdSpaceId
			End Get
			Set
				If ((Me._WebAdSpaceId = value)  _
							= false) Then
					Me.OnWebAdSpaceIdChanging(value)
					Me.SendPropertyChanging
					Me._WebAdSpaceId = value
					Me.SendPropertyChanged("WebAdSpaceId")
					Me.OnWebAdSpaceIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(100)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me.OnTitleChanging(value)
					Me.SendPropertyChanging
					Me._Title = value
					Me.SendPropertyChanged("Title")
					Me.OnTitleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SettingID", DbType:="Int")>  _
		Public Property SettingID() As System.Nullable(Of Integer)
			Get
				Return Me._SettingID
			End Get
			Set
				If (Me._SettingID.Equals(value) = false) Then
					If Me._WebAdSpaceSetting.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnSettingIDChanging(value)
					Me.SendPropertyChanging
					Me._SettingID = value
					Me.SendPropertyChanged("SettingID")
					Me.OnSettingIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SortOrder", DbType:="Int")>  _
		Public Property SortOrder() As System.Nullable(Of Integer)
			Get
				Return Me._SortOrder
			End Get
			Set
				If (Me._SortOrder.Equals(value) = false) Then
					Me.OnSortOrderChanging(value)
					Me.SendPropertyChanging
					Me._SortOrder = value
					Me.SendPropertyChanged("SortOrder")
					Me.OnSortOrderChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdLinkUrl", DbType:="NVarChar(255)")>  _
		Public Property AdLinkUrl() As String
			Get
				Return Me._AdLinkUrl
			End Get
			Set
				If (String.Equals(Me._AdLinkUrl, value) = false) Then
					Me.OnAdLinkUrlChanging(value)
					Me.SendPropertyChanging
					Me._AdLinkUrl = value
					Me.SendPropertyChanged("AdLinkUrl")
					Me.OnAdLinkUrlChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdTarget", DbType:="NVarChar(50)")>  _
		Public Property AdTarget() As String
			Get
				Return Me._AdTarget
			End Get
			Set
				If (String.Equals(Me._AdTarget, value) = false) Then
					Me.OnAdTargetChanging(value)
					Me.SendPropertyChanging
					Me._AdTarget = value
					Me.SendPropertyChanged("AdTarget")
					Me.OnAdTargetChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpaceType", DbType:="Int")>  _
		Public Property SpaceType() As System.Nullable(Of Integer)
			Get
				Return Me._SpaceType
			End Get
			Set
				If (Me._SpaceType.Equals(value) = false) Then
					Me.OnSpaceTypeChanging(value)
					Me.SendPropertyChanging
					Me._SpaceType = value
					Me.SendPropertyChanged("SpaceType")
					Me.OnSpaceTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImageUrl", DbType:="NVarChar(255)")>  _
		Public Property ImageUrl() As String
			Get
				Return Me._ImageUrl
			End Get
			Set
				If (String.Equals(Me._ImageUrl, value) = false) Then
					Me.OnImageUrlChanging(value)
					Me.SendPropertyChanging
					Me._ImageUrl = value
					Me.SendPropertyChanged("ImageUrl")
					Me.OnImageUrlChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplayText", DbType:="NVarChar(100)")>  _
		Public Property DisplayText() As String
			Get
				Return Me._DisplayText
			End Get
			Set
				If (String.Equals(Me._DisplayText, value) = false) Then
					Me.OnDisplayTextChanging(value)
					Me.SendPropertyChanging
					Me._DisplayText = value
					Me.SendPropertyChanged("DisplayText")
					Me.OnDisplayTextChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ToolTipText", DbType:="NVarChar(200)")>  _
		Public Property ToolTipText() As String
			Get
				Return Me._ToolTipText
			End Get
			Set
				If (String.Equals(Me._ToolTipText, value) = false) Then
					Me.OnToolTipTextChanging(value)
					Me.SendPropertyChanging
					Me._ToolTipText = value
					Me.SendPropertyChanged("ToolTipText")
					Me.OnToolTipTextChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="Bit")>  _
		Public Property Active() As System.Nullable(Of Boolean)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebAdSpaceSetting_WebAdSpace", Storage:="_WebAdSpaceSetting", ThisKey:="SettingID", OtherKey:="SettingId", IsForeignKey:=true)>  _
		Public Property WebAdSpaceSetting() As WebAdSpaceSetting
			Get
				Return Me._WebAdSpaceSetting.Entity
			End Get
			Set
				Dim previousValue As WebAdSpaceSetting = Me._WebAdSpaceSetting.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._WebAdSpaceSetting.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._WebAdSpaceSetting.Entity = Nothing
						previousValue.WebAdSpaces.Remove(Me)
					End If
					Me._WebAdSpaceSetting.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.WebAdSpaces.Add(Me)
						Me._SettingID = value.SettingId
					Else
						Me._SettingID = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("WebAdSpaceSetting")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WebAdSpaceSetting")>  _
	Partial Public Class WebAdSpaceSetting
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _SettingId As Integer
		
		Private _Title As String
		
		Private _LocationCode As Integer
		
		Private _WebAdSpaces As EntitySet(Of WebAdSpace)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSettingIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnSettingIdChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnLocationCodeChanging(value As Integer)
    End Sub
    Partial Private Sub OnLocationCodeChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._WebAdSpaces = New EntitySet(Of WebAdSpace)(AddressOf Me.attach_WebAdSpaces, AddressOf Me.detach_WebAdSpaces)
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SettingId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property SettingId() As Integer
			Get
				Return Me._SettingId
			End Get
			Set
				If ((Me._SettingId = value)  _
							= false) Then
					Me.OnSettingIdChanging(value)
					Me.SendPropertyChanging
					Me._SettingId = value
					Me.SendPropertyChanged("SettingId")
					Me.OnSettingIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(100)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me.OnTitleChanging(value)
					Me.SendPropertyChanging
					Me._Title = value
					Me.SendPropertyChanged("Title")
					Me.OnTitleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LocationCode", DbType:="Int NOT NULL")>  _
		Public Property LocationCode() As Integer
			Get
				Return Me._LocationCode
			End Get
			Set
				If ((Me._LocationCode = value)  _
							= false) Then
					Me.OnLocationCodeChanging(value)
					Me.SendPropertyChanging
					Me._LocationCode = value
					Me.SendPropertyChanged("LocationCode")
					Me.OnLocationCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebAdSpaceSetting_WebAdSpace", Storage:="_WebAdSpaces", ThisKey:="SettingId", OtherKey:="SettingID")>  _
		Public Property WebAdSpaces() As EntitySet(Of WebAdSpace)
			Get
				Return Me._WebAdSpaces
			End Get
			Set
				Me._WebAdSpaces.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_WebAdSpaces(ByVal entity As WebAdSpace)
			Me.SendPropertyChanging
			entity.WebAdSpaceSetting = Me
		End Sub
		
		Private Sub detach_WebAdSpaces(ByVal entity As WebAdSpace)
			Me.SendPropertyChanging
			entity.WebAdSpaceSetting = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.EnquiryDocument")>  _
	Partial Public Class EnquiryDocument
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _EnquiryDocumentId As Integer
		
		Private _OnlineAdEnquiryId As Integer
		
		Private _DocumentId As System.Nullable(Of Integer)
		
		Private _CreatedDate As System.Nullable(Of Date)
		
		Private _OnlineAdEnquiry As EntityRef(Of OnlineAdEnquiry)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnEnquiryDocumentIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnEnquiryDocumentIdChanged()
    End Sub
    Partial Private Sub OnOnlineAdEnquiryIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnOnlineAdEnquiryIdChanged()
    End Sub
    Partial Private Sub OnDocumentIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDocumentIdChanged()
    End Sub
    Partial Private Sub OnCreatedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreatedDateChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._OnlineAdEnquiry = CType(Nothing, EntityRef(Of OnlineAdEnquiry))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EnquiryDocumentId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property EnquiryDocumentId() As Integer
			Get
				Return Me._EnquiryDocumentId
			End Get
			Set
				If ((Me._EnquiryDocumentId = value)  _
							= false) Then
					Me.OnEnquiryDocumentIdChanging(value)
					Me.SendPropertyChanging
					Me._EnquiryDocumentId = value
					Me.SendPropertyChanged("EnquiryDocumentId")
					Me.OnEnquiryDocumentIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OnlineAdEnquiryId", DbType:="Int NOT NULL")>  _
		Public Property OnlineAdEnquiryId() As Integer
			Get
				Return Me._OnlineAdEnquiryId
			End Get
			Set
				If ((Me._OnlineAdEnquiryId = value)  _
							= false) Then
					If Me._OnlineAdEnquiry.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnOnlineAdEnquiryIdChanging(value)
					Me.SendPropertyChanging
					Me._OnlineAdEnquiryId = value
					Me.SendPropertyChanged("OnlineAdEnquiryId")
					Me.OnOnlineAdEnquiryIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DocumentId", DbType:="Int")>  _
		Public Property DocumentId() As System.Nullable(Of Integer)
			Get
				Return Me._DocumentId
			End Get
			Set
				If (Me._DocumentId.Equals(value) = false) Then
					Me.OnDocumentIdChanging(value)
					Me.SendPropertyChanging
					Me._DocumentId = value
					Me.SendPropertyChanged("DocumentId")
					Me.OnDocumentIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedDate", DbType:="DateTime")>  _
		Public Property CreatedDate() As System.Nullable(Of Date)
			Get
				Return Me._CreatedDate
			End Get
			Set
				If (Me._CreatedDate.Equals(value) = false) Then
					Me.OnCreatedDateChanging(value)
					Me.SendPropertyChanging
					Me._CreatedDate = value
					Me.SendPropertyChanged("CreatedDate")
					Me.OnCreatedDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="OnlineAdEnquiry_EnquiryDocument", Storage:="_OnlineAdEnquiry", ThisKey:="OnlineAdEnquiryId", OtherKey:="OnlineAdEnquiryId", IsForeignKey:=true)>  _
		Public Property OnlineAdEnquiry() As OnlineAdEnquiry
			Get
				Return Me._OnlineAdEnquiry.Entity
			End Get
			Set
				Dim previousValue As OnlineAdEnquiry = Me._OnlineAdEnquiry.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._OnlineAdEnquiry.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._OnlineAdEnquiry.Entity = Nothing
						previousValue.EnquiryDocuments.Remove(Me)
					End If
					Me._OnlineAdEnquiry.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.EnquiryDocuments.Add(Me)
						Me._OnlineAdEnquiryId = value.OnlineAdEnquiryId
					Else
						Me._OnlineAdEnquiryId = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("OnlineAdEnquiry")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.EnquiryType")>  _
	Partial Public Class EnquiryType
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _EnquiryTypeId As Integer
		
		Private _Title As String
		
		Private _Active As System.Nullable(Of Boolean)
		
		Private _CreatedDate As System.Nullable(Of Date)
		
		Private _OnlineAdEnquiries As EntitySet(Of OnlineAdEnquiry)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnEnquiryTypeIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnEnquiryTypeIdChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnCreatedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreatedDateChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._OnlineAdEnquiries = New EntitySet(Of OnlineAdEnquiry)(AddressOf Me.attach_OnlineAdEnquiries, AddressOf Me.detach_OnlineAdEnquiries)
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EnquiryTypeId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property EnquiryTypeId() As Integer
			Get
				Return Me._EnquiryTypeId
			End Get
			Set
				If ((Me._EnquiryTypeId = value)  _
							= false) Then
					Me.OnEnquiryTypeIdChanging(value)
					Me.SendPropertyChanging
					Me._EnquiryTypeId = value
					Me.SendPropertyChanged("EnquiryTypeId")
					Me.OnEnquiryTypeIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(100)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me.OnTitleChanging(value)
					Me.SendPropertyChanging
					Me._Title = value
					Me.SendPropertyChanged("Title")
					Me.OnTitleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="Bit")>  _
		Public Property Active() As System.Nullable(Of Boolean)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedDate", DbType:="DateTime")>  _
		Public Property CreatedDate() As System.Nullable(Of Date)
			Get
				Return Me._CreatedDate
			End Get
			Set
				If (Me._CreatedDate.Equals(value) = false) Then
					Me.OnCreatedDateChanging(value)
					Me.SendPropertyChanging
					Me._CreatedDate = value
					Me.SendPropertyChanged("CreatedDate")
					Me.OnCreatedDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="EnquiryType_OnlineAdEnquiry", Storage:="_OnlineAdEnquiries", ThisKey:="EnquiryTypeId", OtherKey:="EnquiryTypeId")>  _
		Public Property OnlineAdEnquiries() As EntitySet(Of OnlineAdEnquiry)
			Get
				Return Me._OnlineAdEnquiries
			End Get
			Set
				Me._OnlineAdEnquiries.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_OnlineAdEnquiries(ByVal entity As OnlineAdEnquiry)
			Me.SendPropertyChanging
			entity.EnquiryType = Me
		End Sub
		
		Private Sub detach_OnlineAdEnquiries(ByVal entity As OnlineAdEnquiry)
			Me.SendPropertyChanging
			entity.EnquiryType = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.OnlineAdEnquiry")>  _
	Partial Public Class OnlineAdEnquiry
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _OnlineAdEnquiryId As Integer
		
		Private _FullName As String
		
		Private _OnlineAdId As Integer
		
		Private _EnquiryTypeId As Integer
		
		Private _Email As String
		
		Private _Phone As String
		
		Private _EnquiryText As String
		
		Private _OpenDate As System.Nullable(Of Date)
		
		Private _CreatedDate As System.Nullable(Of Date)
		
		Private _Active As System.Nullable(Of Boolean)
		
		Private _EnquiryDocuments As EntitySet(Of EnquiryDocument)
		
		Private _EnquiryType As EntityRef(Of EnquiryType)
		
		Private _OnlineAd As EntityRef(Of OnlineAd)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnOnlineAdEnquiryIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnOnlineAdEnquiryIdChanged()
    End Sub
    Partial Private Sub OnFullNameChanging(value As String)
    End Sub
    Partial Private Sub OnFullNameChanged()
    End Sub
    Partial Private Sub OnOnlineAdIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnOnlineAdIdChanged()
    End Sub
    Partial Private Sub OnEnquiryTypeIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnEnquiryTypeIdChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnPhoneChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneChanged()
    End Sub
    Partial Private Sub OnEnquiryTextChanging(value As String)
    End Sub
    Partial Private Sub OnEnquiryTextChanged()
    End Sub
    Partial Private Sub OnOpenDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnOpenDateChanged()
    End Sub
    Partial Private Sub OnCreatedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreatedDateChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._EnquiryDocuments = New EntitySet(Of EnquiryDocument)(AddressOf Me.attach_EnquiryDocuments, AddressOf Me.detach_EnquiryDocuments)
			Me._EnquiryType = CType(Nothing, EntityRef(Of EnquiryType))
			Me._OnlineAd = CType(Nothing, EntityRef(Of OnlineAd))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OnlineAdEnquiryId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property OnlineAdEnquiryId() As Integer
			Get
				Return Me._OnlineAdEnquiryId
			End Get
			Set
				If ((Me._OnlineAdEnquiryId = value)  _
							= false) Then
					Me.OnOnlineAdEnquiryIdChanging(value)
					Me.SendPropertyChanging
					Me._OnlineAdEnquiryId = value
					Me.SendPropertyChanged("OnlineAdEnquiryId")
					Me.OnOnlineAdEnquiryIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FullName", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
		Public Property FullName() As String
			Get
				Return Me._FullName
			End Get
			Set
				If (String.Equals(Me._FullName, value) = false) Then
					Me.OnFullNameChanging(value)
					Me.SendPropertyChanging
					Me._FullName = value
					Me.SendPropertyChanged("FullName")
					Me.OnFullNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OnlineAdId", DbType:="Int NOT NULL")>  _
		Public Property OnlineAdId() As Integer
			Get
				Return Me._OnlineAdId
			End Get
			Set
				If ((Me._OnlineAdId = value)  _
							= false) Then
					If Me._OnlineAd.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnOnlineAdIdChanging(value)
					Me.SendPropertyChanging
					Me._OnlineAdId = value
					Me.SendPropertyChanged("OnlineAdId")
					Me.OnOnlineAdIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EnquiryTypeId", DbType:="Int NOT NULL")>  _
		Public Property EnquiryTypeId() As Integer
			Get
				Return Me._EnquiryTypeId
			End Get
			Set
				If ((Me._EnquiryTypeId = value)  _
							= false) Then
					If Me._EnquiryType.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnEnquiryTypeIdChanging(value)
					Me.SendPropertyChanging
					Me._EnquiryTypeId = value
					Me.SendPropertyChanged("EnquiryTypeId")
					Me.OnEnquiryTypeIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(100)")>  _
		Public Property Email() As String
			Get
				Return Me._Email
			End Get
			Set
				If (String.Equals(Me._Email, value) = false) Then
					Me.OnEmailChanging(value)
					Me.SendPropertyChanging
					Me._Email = value
					Me.SendPropertyChanged("Email")
					Me.OnEmailChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Phone", DbType:="NVarChar(12)")>  _
		Public Property Phone() As String
			Get
				Return Me._Phone
			End Get
			Set
				If (String.Equals(Me._Phone, value) = false) Then
					Me.OnPhoneChanging(value)
					Me.SendPropertyChanging
					Me._Phone = value
					Me.SendPropertyChanged("Phone")
					Me.OnPhoneChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EnquiryText", DbType:="NVarChar(MAX)")>  _
		Public Property EnquiryText() As String
			Get
				Return Me._EnquiryText
			End Get
			Set
				If (String.Equals(Me._EnquiryText, value) = false) Then
					Me.OnEnquiryTextChanging(value)
					Me.SendPropertyChanging
					Me._EnquiryText = value
					Me.SendPropertyChanged("EnquiryText")
					Me.OnEnquiryTextChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OpenDate", DbType:="DateTime")>  _
		Public Property OpenDate() As System.Nullable(Of Date)
			Get
				Return Me._OpenDate
			End Get
			Set
				If (Me._OpenDate.Equals(value) = false) Then
					Me.OnOpenDateChanging(value)
					Me.SendPropertyChanging
					Me._OpenDate = value
					Me.SendPropertyChanged("OpenDate")
					Me.OnOpenDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedDate", DbType:="DateTime")>  _
		Public Property CreatedDate() As System.Nullable(Of Date)
			Get
				Return Me._CreatedDate
			End Get
			Set
				If (Me._CreatedDate.Equals(value) = false) Then
					Me.OnCreatedDateChanging(value)
					Me.SendPropertyChanging
					Me._CreatedDate = value
					Me.SendPropertyChanged("CreatedDate")
					Me.OnCreatedDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="Bit")>  _
		Public Property Active() As System.Nullable(Of Boolean)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="OnlineAdEnquiry_EnquiryDocument", Storage:="_EnquiryDocuments", ThisKey:="OnlineAdEnquiryId", OtherKey:="OnlineAdEnquiryId")>  _
		Public Property EnquiryDocuments() As EntitySet(Of EnquiryDocument)
			Get
				Return Me._EnquiryDocuments
			End Get
			Set
				Me._EnquiryDocuments.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="EnquiryType_OnlineAdEnquiry", Storage:="_EnquiryType", ThisKey:="EnquiryTypeId", OtherKey:="EnquiryTypeId", IsForeignKey:=true)>  _
		Public Property EnquiryType() As EnquiryType
			Get
				Return Me._EnquiryType.Entity
			End Get
			Set
				Dim previousValue As EnquiryType = Me._EnquiryType.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._EnquiryType.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._EnquiryType.Entity = Nothing
						previousValue.OnlineAdEnquiries.Remove(Me)
					End If
					Me._EnquiryType.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.OnlineAdEnquiries.Add(Me)
						Me._EnquiryTypeId = value.EnquiryTypeId
					Else
						Me._EnquiryTypeId = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("EnquiryType")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="OnlineAd_OnlineAdEnquiry", Storage:="_OnlineAd", ThisKey:="OnlineAdId", OtherKey:="OnlineAdId", IsForeignKey:=true)>  _
		Public Property OnlineAd() As OnlineAd
			Get
				Return Me._OnlineAd.Entity
			End Get
			Set
				Dim previousValue As OnlineAd = Me._OnlineAd.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._OnlineAd.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._OnlineAd.Entity = Nothing
						previousValue.OnlineAdEnquiries.Remove(Me)
					End If
					Me._OnlineAd.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.OnlineAdEnquiries.Add(Me)
						Me._OnlineAdId = value.OnlineAdId
					Else
						Me._OnlineAdId = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("OnlineAd")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_EnquiryDocuments(ByVal entity As EnquiryDocument)
			Me.SendPropertyChanging
			entity.OnlineAdEnquiry = Me
		End Sub
		
		Private Sub detach_EnquiryDocuments(ByVal entity As EnquiryDocument)
			Me.SendPropertyChanging
			entity.OnlineAdEnquiry = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SupportEnquiry")>  _
	Partial Public Class SupportEnquiry
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _SupportEnquiryId As Integer
		
		Private _EnquiryTypeName As String
		
		Private _FirstName As String
		
		Private _Email As String
		
		Private _Phone As String
		
		Private _Subject As String
		
		Private _EnquiryText As String
		
		Private _CreatedDate As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSupportEnquiryIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnSupportEnquiryIdChanged()
    End Sub
    Partial Private Sub OnEnquiryTypeNameChanging(value As String)
    End Sub
    Partial Private Sub OnEnquiryTypeNameChanged()
    End Sub
    Partial Private Sub OnFullNameChanging(value As String)
    End Sub
    Partial Private Sub OnFullNameChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnPhoneChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneChanged()
    End Sub
    Partial Private Sub OnSubjectChanging(value As String)
    End Sub
    Partial Private Sub OnSubjectChanged()
    End Sub
    Partial Private Sub OnEnquiryTextChanging(value As String)
    End Sub
    Partial Private Sub OnEnquiryTextChanged()
    End Sub
    Partial Private Sub OnCreatedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreatedDateChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SupportEnquiryId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property SupportEnquiryId() As Integer
			Get
				Return Me._SupportEnquiryId
			End Get
			Set
				If ((Me._SupportEnquiryId = value)  _
							= false) Then
					Me.OnSupportEnquiryIdChanging(value)
					Me.SendPropertyChanging
					Me._SupportEnquiryId = value
					Me.SendPropertyChanged("SupportEnquiryId")
					Me.OnSupportEnquiryIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EnquiryTypeName", DbType:="VarChar(50)")>  _
		Public Property EnquiryTypeName() As String
			Get
				Return Me._EnquiryTypeName
			End Get
			Set
				If (String.Equals(Me._EnquiryTypeName, value) = false) Then
					Me.OnEnquiryTypeNameChanging(value)
					Me.SendPropertyChanging
					Me._EnquiryTypeName = value
					Me.SendPropertyChanged("EnquiryTypeName")
					Me.OnEnquiryTypeNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FirstName", DbType:="VarChar(100)")>  _
		Public Property FullName() As String
			Get
				Return Me._FirstName
			End Get
			Set
				If (String.Equals(Me._FirstName, value) = false) Then
					Me.OnFullNameChanging(value)
					Me.SendPropertyChanging
					Me._FirstName = value
					Me.SendPropertyChanged("FullName")
					Me.OnFullNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(100)")>  _
		Public Property Email() As String
			Get
				Return Me._Email
			End Get
			Set
				If (String.Equals(Me._Email, value) = false) Then
					Me.OnEmailChanging(value)
					Me.SendPropertyChanging
					Me._Email = value
					Me.SendPropertyChanged("Email")
					Me.OnEmailChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Phone", DbType:="VarChar(15)")>  _
		Public Property Phone() As String
			Get
				Return Me._Phone
			End Get
			Set
				If (String.Equals(Me._Phone, value) = false) Then
					Me.OnPhoneChanging(value)
					Me.SendPropertyChanging
					Me._Phone = value
					Me.SendPropertyChanged("Phone")
					Me.OnPhoneChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Subject", DbType:="VarChar(100)")>  _
		Public Property Subject() As String
			Get
				Return Me._Subject
			End Get
			Set
				If (String.Equals(Me._Subject, value) = false) Then
					Me.OnSubjectChanging(value)
					Me.SendPropertyChanging
					Me._Subject = value
					Me.SendPropertyChanged("Subject")
					Me.OnSubjectChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EnquiryText", DbType:="VarChar(MAX)")>  _
		Public Property EnquiryText() As String
			Get
				Return Me._EnquiryText
			End Get
			Set
				If (String.Equals(Me._EnquiryText, value) = false) Then
					Me.OnEnquiryTextChanging(value)
					Me.SendPropertyChanging
					Me._EnquiryText = value
					Me.SendPropertyChanged("EnquiryText")
					Me.OnEnquiryTextChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedDate", DbType:="DateTime")>  _
		Public Property CreatedDate() As System.Nullable(Of Date)
			Get
				Return Me._CreatedDate
			End Get
			Set
				If (Me._CreatedDate.Equals(value) = false) Then
					Me.OnCreatedDateChanging(value)
					Me.SendPropertyChanging
					Me._CreatedDate = value
					Me.SendPropertyChanged("CreatedDate")
					Me.OnCreatedDateChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WebContent")>  _
	Partial Public Class WebContent
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _WebContentId As Integer
		
		Private _Title As String
		
		Private _PageId As String
		
		Private _WebContent As String
		
		Private _LastModifiedDate As System.Nullable(Of Date)
		
		Private _LastModifiedUser As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnWebContentIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnWebContentIdChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnPageIdChanging(value As String)
    End Sub
    Partial Private Sub OnPageIdChanged()
    End Sub
    Partial Private Sub OnWebContentChanging(value As String)
    End Sub
    Partial Private Sub OnWebContentChanged()
    End Sub
    Partial Private Sub OnLastModifiedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastModifiedDateChanged()
    End Sub
    Partial Private Sub OnLastModifiedUserChanging(value As String)
    End Sub
    Partial Private Sub OnLastModifiedUserChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WebContentId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property WebContentId() As Integer
			Get
				Return Me._WebContentId
			End Get
			Set
				If ((Me._WebContentId = value)  _
							= false) Then
					Me.OnWebContentIdChanging(value)
					Me.SendPropertyChanging
					Me._WebContentId = value
					Me.SendPropertyChanged("WebContentId")
					Me.OnWebContentIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="VarChar(50)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me.OnTitleChanging(value)
					Me.SendPropertyChanging
					Me._Title = value
					Me.SendPropertyChanged("Title")
					Me.OnTitleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PageId", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property PageId() As String
			Get
				Return Me._PageId
			End Get
			Set
				If (String.Equals(Me._PageId, value) = false) Then
					Me.OnPageIdChanging(value)
					Me.SendPropertyChanging
					Me._PageId = value
					Me.SendPropertyChanged("PageId")
					Me.OnPageIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WebContent", DbType:="NVarChar(MAX)")>  _
		Public Property WebContent() As String
			Get
				Return Me._WebContent
			End Get
			Set
				If (String.Equals(Me._WebContent, value) = false) Then
					Me.OnWebContentChanging(value)
					Me.SendPropertyChanging
					Me._WebContent = value
					Me.SendPropertyChanged("WebContent")
					Me.OnWebContentChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastModifiedDate", DbType:="DateTime")>  _
		Public Property LastModifiedDate() As System.Nullable(Of Date)
			Get
				Return Me._LastModifiedDate
			End Get
			Set
				If (Me._LastModifiedDate.Equals(value) = false) Then
					Me.OnLastModifiedDateChanging(value)
					Me.SendPropertyChanging
					Me._LastModifiedDate = value
					Me.SendPropertyChanged("LastModifiedDate")
					Me.OnLastModifiedDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastModifiedUser", DbType:="VarChar(50)")>  _
		Public Property LastModifiedUser() As String
			Get
				Return Me._LastModifiedUser
			End Get
			Set
				If (String.Equals(Me._LastModifiedUser, value) = false) Then
					Me.OnLastModifiedUserChanging(value)
					Me.SendPropertyChanging
					Me._LastModifiedUser = value
					Me.SendPropertyChanged("LastModifiedUser")
					Me.OnLastModifiedUserChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AdDesign")>  _
	Partial Public Class AdDesign
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _AdDesignId As Integer
		
		Private _AdId As System.Nullable(Of Integer)
		
		Private _AdTypeId As System.Nullable(Of Integer)
		
		Private _Status As System.Nullable(Of Integer)
		
		Private _CreatedDate As System.Nullable(Of Date)
		
		Private _Version As System.Nullable(Of Integer)
		
		Private _FirstAdDesignId As System.Nullable(Of Integer)
		
		Private _AdGraphics As EntitySet(Of AdGraphic)
		
		Private _OnlineAds As EntitySet(Of OnlineAd)
		
		Private _LineAds As EntitySet(Of LineAd)
		
		Private _Ad As EntityRef(Of Ad)
		
		Private _AdType As EntityRef(Of AdType)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAdDesignIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnAdDesignIdChanged()
    End Sub
    Partial Private Sub OnAdIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAdIdChanged()
    End Sub
    Partial Private Sub OnAdTypeIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAdTypeIdChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnCreatedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreatedDateChanged()
    End Sub
    Partial Private Sub OnVersionChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVersionChanged()
    End Sub
    Partial Private Sub OnFirstAdDesignIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFirstAdDesignIdChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._AdGraphics = New EntitySet(Of AdGraphic)(AddressOf Me.attach_AdGraphics, AddressOf Me.detach_AdGraphics)
			Me._OnlineAds = New EntitySet(Of OnlineAd)(AddressOf Me.attach_OnlineAds, AddressOf Me.detach_OnlineAds)
			Me._LineAds = New EntitySet(Of LineAd)(AddressOf Me.attach_LineAds, AddressOf Me.detach_LineAds)
			Me._Ad = CType(Nothing, EntityRef(Of Ad))
			Me._AdType = CType(Nothing, EntityRef(Of AdType))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdDesignId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property AdDesignId() As Integer
			Get
				Return Me._AdDesignId
			End Get
			Set
				If ((Me._AdDesignId = value)  _
							= false) Then
					Me.OnAdDesignIdChanging(value)
					Me.SendPropertyChanging
					Me._AdDesignId = value
					Me.SendPropertyChanged("AdDesignId")
					Me.OnAdDesignIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdId", DbType:="Int")>  _
		Public Property AdId() As System.Nullable(Of Integer)
			Get
				Return Me._AdId
			End Get
			Set
				If (Me._AdId.Equals(value) = false) Then
					If Me._Ad.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnAdIdChanging(value)
					Me.SendPropertyChanging
					Me._AdId = value
					Me.SendPropertyChanged("AdId")
					Me.OnAdIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdTypeId", DbType:="Int")>  _
		Public Property AdTypeId() As System.Nullable(Of Integer)
			Get
				Return Me._AdTypeId
			End Get
			Set
				If (Me._AdTypeId.Equals(value) = false) Then
					If Me._AdType.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnAdTypeIdChanging(value)
					Me.SendPropertyChanging
					Me._AdTypeId = value
					Me.SendPropertyChanged("AdTypeId")
					Me.OnAdTypeIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Int")>  _
		Public Property Status() As System.Nullable(Of Integer)
			Get
				Return Me._Status
			End Get
			Set
				If (Me._Status.Equals(value) = false) Then
					Me.OnStatusChanging(value)
					Me.SendPropertyChanging
					Me._Status = value
					Me.SendPropertyChanged("Status")
					Me.OnStatusChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedDate", DbType:="DateTime")>  _
		Public Property CreatedDate() As System.Nullable(Of Date)
			Get
				Return Me._CreatedDate
			End Get
			Set
				If (Me._CreatedDate.Equals(value) = false) Then
					Me.OnCreatedDateChanging(value)
					Me.SendPropertyChanging
					Me._CreatedDate = value
					Me.SendPropertyChanged("CreatedDate")
					Me.OnCreatedDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Version", DbType:="Int")>  _
		Public Property Version() As System.Nullable(Of Integer)
			Get
				Return Me._Version
			End Get
			Set
				If (Me._Version.Equals(value) = false) Then
					Me.OnVersionChanging(value)
					Me.SendPropertyChanging
					Me._Version = value
					Me.SendPropertyChanged("Version")
					Me.OnVersionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FirstAdDesignId", DbType:="Int")>  _
		Public Property FirstAdDesignId() As System.Nullable(Of Integer)
			Get
				Return Me._FirstAdDesignId
			End Get
			Set
				If (Me._FirstAdDesignId.Equals(value) = false) Then
					Me.OnFirstAdDesignIdChanging(value)
					Me.SendPropertyChanging
					Me._FirstAdDesignId = value
					Me.SendPropertyChanged("FirstAdDesignId")
					Me.OnFirstAdDesignIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AdDesign_AdGraphic", Storage:="_AdGraphics", ThisKey:="AdDesignId", OtherKey:="AdDesignId")>  _
		Public Property AdGraphics() As EntitySet(Of AdGraphic)
			Get
				Return Me._AdGraphics
			End Get
			Set
				Me._AdGraphics.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AdDesign_OnlineAd", Storage:="_OnlineAds", ThisKey:="AdDesignId", OtherKey:="AdDesignId")>  _
		Public Property OnlineAds() As EntitySet(Of OnlineAd)
			Get
				Return Me._OnlineAds
			End Get
			Set
				Me._OnlineAds.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AdDesign_LineAd", Storage:="_LineAds", ThisKey:="AdDesignId", OtherKey:="AdDesignId")>  _
		Public Property LineAds() As EntitySet(Of LineAd)
			Get
				Return Me._LineAds
			End Get
			Set
				Me._LineAds.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Ad_AdDesign", Storage:="_Ad", ThisKey:="AdId", OtherKey:="AdId", IsForeignKey:=true)>  _
		Public Property Ad() As Ad
			Get
				Return Me._Ad.Entity
			End Get
			Set
				Dim previousValue As Ad = Me._Ad.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._Ad.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._Ad.Entity = Nothing
						previousValue.AdDesigns.Remove(Me)
					End If
					Me._Ad.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.AdDesigns.Add(Me)
						Me._AdId = value.AdId
					Else
						Me._AdId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("Ad")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AdType_AdDesign", Storage:="_AdType", ThisKey:="AdTypeId", OtherKey:="AdTypeId", IsForeignKey:=true)>  _
		Public Property AdType() As AdType
			Get
				Return Me._AdType.Entity
			End Get
			Set
				Dim previousValue As AdType = Me._AdType.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._AdType.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._AdType.Entity = Nothing
						previousValue.AdDesigns.Remove(Me)
					End If
					Me._AdType.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.AdDesigns.Add(Me)
						Me._AdTypeId = value.AdTypeId
					Else
						Me._AdTypeId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("AdType")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_AdGraphics(ByVal entity As AdGraphic)
			Me.SendPropertyChanging
			entity.AdDesign = Me
		End Sub
		
		Private Sub detach_AdGraphics(ByVal entity As AdGraphic)
			Me.SendPropertyChanging
			entity.AdDesign = Nothing
		End Sub
		
		Private Sub attach_OnlineAds(ByVal entity As OnlineAd)
			Me.SendPropertyChanging
			entity.AdDesign = Me
		End Sub
		
		Private Sub detach_OnlineAds(ByVal entity As OnlineAd)
			Me.SendPropertyChanging
			entity.AdDesign = Nothing
		End Sub
		
		Private Sub attach_LineAds(ByVal entity As LineAd)
			Me.SendPropertyChanging
			entity.AdDesign = Me
		End Sub
		
		Private Sub detach_LineAds(ByVal entity As LineAd)
			Me.SendPropertyChanging
			entity.AdDesign = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Ratecard")>  _
	Partial Public Class Ratecard
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _RatecardId As Integer
		
		Private _BaseRateId As System.Nullable(Of Integer)
		
		Private _MinCharge As System.Nullable(Of Decimal)
		
		Private _MaxCharge As System.Nullable(Of Decimal)
		
		Private _RatePerMeasureUnit As System.Nullable(Of Decimal)
		
		Private _MeasureUnitLimit As System.Nullable(Of Integer)
		
		Private _PhotoCharge As System.Nullable(Of Decimal)
		
		Private _BoldHeading As System.Nullable(Of Decimal)
		
		Private _OnlineEditionBundle As System.Nullable(Of Decimal)
		
		Private _LineAdSuperBoldHeading As System.Nullable(Of Decimal)
		
		Private _LineAdColourHeading As System.Nullable(Of Decimal)
		
		Private _LineAdColourBorder As System.Nullable(Of Decimal)
		
		Private _LineAdColourBackground As System.Nullable(Of Decimal)
		
		Private _LineAdExtraImage As System.Nullable(Of Decimal)
		
		Private _CreatedDate As System.Nullable(Of Date)
		
		Private _CreatedByUser As String
		
		Private _PublicationRates As EntitySet(Of PublicationRate)
		
		Private _BaseRate As EntityRef(Of BaseRate)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRatecardIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnRatecardIdChanged()
    End Sub
    Partial Private Sub OnBaseRateIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBaseRateIdChanged()
    End Sub
    Partial Private Sub OnMinChargeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMinChargeChanged()
    End Sub
    Partial Private Sub OnMaxChargeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMaxChargeChanged()
    End Sub
    Partial Private Sub OnRatePerMeasureUnitChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnRatePerMeasureUnitChanged()
    End Sub
    Partial Private Sub OnMeasureUnitLimitChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMeasureUnitLimitChanged()
    End Sub
    Partial Private Sub OnPhotoChargeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPhotoChargeChanged()
    End Sub
    Partial Private Sub OnBoldHeadingChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnBoldHeadingChanged()
    End Sub
    Partial Private Sub OnOnlineEditionBundleChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnOnlineEditionBundleChanged()
    End Sub
    Partial Private Sub OnLineAdSuperBoldHeadingChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnLineAdSuperBoldHeadingChanged()
    End Sub
    Partial Private Sub OnLineAdColourHeadingChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnLineAdColourHeadingChanged()
    End Sub
    Partial Private Sub OnLineAdColourBorderChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnLineAdColourBorderChanged()
    End Sub
    Partial Private Sub OnLineAdColourBackgroundChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnLineAdColourBackgroundChanged()
    End Sub
    Partial Private Sub OnLineAdExtraImageChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnLineAdExtraImageChanged()
    End Sub
    Partial Private Sub OnCreatedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreatedDateChanged()
    End Sub
    Partial Private Sub OnCreatedByUserChanging(value As String)
    End Sub
    Partial Private Sub OnCreatedByUserChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._PublicationRates = New EntitySet(Of PublicationRate)(AddressOf Me.attach_PublicationRates, AddressOf Me.detach_PublicationRates)
			Me._BaseRate = CType(Nothing, EntityRef(Of BaseRate))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RatecardId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property RatecardId() As Integer
			Get
				Return Me._RatecardId
			End Get
			Set
				If ((Me._RatecardId = value)  _
							= false) Then
					Me.OnRatecardIdChanging(value)
					Me.SendPropertyChanging
					Me._RatecardId = value
					Me.SendPropertyChanged("RatecardId")
					Me.OnRatecardIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BaseRateId", DbType:="Int")>  _
		Public Property BaseRateId() As System.Nullable(Of Integer)
			Get
				Return Me._BaseRateId
			End Get
			Set
				If (Me._BaseRateId.Equals(value) = false) Then
					If Me._BaseRate.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnBaseRateIdChanging(value)
					Me.SendPropertyChanging
					Me._BaseRateId = value
					Me.SendPropertyChanged("BaseRateId")
					Me.OnBaseRateIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MinCharge", DbType:="Money")>  _
		Public Property MinCharge() As System.Nullable(Of Decimal)
			Get
				Return Me._MinCharge
			End Get
			Set
				If (Me._MinCharge.Equals(value) = false) Then
					Me.OnMinChargeChanging(value)
					Me.SendPropertyChanging
					Me._MinCharge = value
					Me.SendPropertyChanged("MinCharge")
					Me.OnMinChargeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaxCharge", DbType:="Money")>  _
		Public Property MaxCharge() As System.Nullable(Of Decimal)
			Get
				Return Me._MaxCharge
			End Get
			Set
				If (Me._MaxCharge.Equals(value) = false) Then
					Me.OnMaxChargeChanging(value)
					Me.SendPropertyChanging
					Me._MaxCharge = value
					Me.SendPropertyChanged("MaxCharge")
					Me.OnMaxChargeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RatePerMeasureUnit", DbType:="Money")>  _
		Public Property RatePerMeasureUnit() As System.Nullable(Of Decimal)
			Get
				Return Me._RatePerMeasureUnit
			End Get
			Set
				If (Me._RatePerMeasureUnit.Equals(value) = false) Then
					Me.OnRatePerMeasureUnitChanging(value)
					Me.SendPropertyChanging
					Me._RatePerMeasureUnit = value
					Me.SendPropertyChanged("RatePerMeasureUnit")
					Me.OnRatePerMeasureUnitChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MeasureUnitLimit", DbType:="Int")>  _
		Public Property MeasureUnitLimit() As System.Nullable(Of Integer)
			Get
				Return Me._MeasureUnitLimit
			End Get
			Set
				If (Me._MeasureUnitLimit.Equals(value) = false) Then
					Me.OnMeasureUnitLimitChanging(value)
					Me.SendPropertyChanging
					Me._MeasureUnitLimit = value
					Me.SendPropertyChanged("MeasureUnitLimit")
					Me.OnMeasureUnitLimitChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhotoCharge", DbType:="Money")>  _
		Public Property PhotoCharge() As System.Nullable(Of Decimal)
			Get
				Return Me._PhotoCharge
			End Get
			Set
				If (Me._PhotoCharge.Equals(value) = false) Then
					Me.OnPhotoChargeChanging(value)
					Me.SendPropertyChanging
					Me._PhotoCharge = value
					Me.SendPropertyChanged("PhotoCharge")
					Me.OnPhotoChargeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BoldHeading", DbType:="Money")>  _
		Public Property BoldHeading() As System.Nullable(Of Decimal)
			Get
				Return Me._BoldHeading
			End Get
			Set
				If (Me._BoldHeading.Equals(value) = false) Then
					Me.OnBoldHeadingChanging(value)
					Me.SendPropertyChanging
					Me._BoldHeading = value
					Me.SendPropertyChanged("BoldHeading")
					Me.OnBoldHeadingChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OnlineEditionBundle", DbType:="Money")>  _
		Public Property OnlineEditionBundle() As System.Nullable(Of Decimal)
			Get
				Return Me._OnlineEditionBundle
			End Get
			Set
				If (Me._OnlineEditionBundle.Equals(value) = false) Then
					Me.OnOnlineEditionBundleChanging(value)
					Me.SendPropertyChanging
					Me._OnlineEditionBundle = value
					Me.SendPropertyChanged("OnlineEditionBundle")
					Me.OnOnlineEditionBundleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LineAdSuperBoldHeading", DbType:="Money")>  _
		Public Property LineAdSuperBoldHeading() As System.Nullable(Of Decimal)
			Get
				Return Me._LineAdSuperBoldHeading
			End Get
			Set
				If (Me._LineAdSuperBoldHeading.Equals(value) = false) Then
					Me.OnLineAdSuperBoldHeadingChanging(value)
					Me.SendPropertyChanging
					Me._LineAdSuperBoldHeading = value
					Me.SendPropertyChanged("LineAdSuperBoldHeading")
					Me.OnLineAdSuperBoldHeadingChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LineAdColourHeading", DbType:="Money")>  _
		Public Property LineAdColourHeading() As System.Nullable(Of Decimal)
			Get
				Return Me._LineAdColourHeading
			End Get
			Set
				If (Me._LineAdColourHeading.Equals(value) = false) Then
					Me.OnLineAdColourHeadingChanging(value)
					Me.SendPropertyChanging
					Me._LineAdColourHeading = value
					Me.SendPropertyChanged("LineAdColourHeading")
					Me.OnLineAdColourHeadingChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LineAdColourBorder", DbType:="Money")>  _
		Public Property LineAdColourBorder() As System.Nullable(Of Decimal)
			Get
				Return Me._LineAdColourBorder
			End Get
			Set
				If (Me._LineAdColourBorder.Equals(value) = false) Then
					Me.OnLineAdColourBorderChanging(value)
					Me.SendPropertyChanging
					Me._LineAdColourBorder = value
					Me.SendPropertyChanged("LineAdColourBorder")
					Me.OnLineAdColourBorderChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LineAdColourBackground", DbType:="Money")>  _
		Public Property LineAdColourBackground() As System.Nullable(Of Decimal)
			Get
				Return Me._LineAdColourBackground
			End Get
			Set
				If (Me._LineAdColourBackground.Equals(value) = false) Then
					Me.OnLineAdColourBackgroundChanging(value)
					Me.SendPropertyChanging
					Me._LineAdColourBackground = value
					Me.SendPropertyChanged("LineAdColourBackground")
					Me.OnLineAdColourBackgroundChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LineAdExtraImage", DbType:="Money")>  _
		Public Property LineAdExtraImage() As System.Nullable(Of Decimal)
			Get
				Return Me._LineAdExtraImage
			End Get
			Set
				If (Me._LineAdExtraImage.Equals(value) = false) Then
					Me.OnLineAdExtraImageChanging(value)
					Me.SendPropertyChanging
					Me._LineAdExtraImage = value
					Me.SendPropertyChanged("LineAdExtraImage")
					Me.OnLineAdExtraImageChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedDate", DbType:="DateTime")>  _
		Public Property CreatedDate() As System.Nullable(Of Date)
			Get
				Return Me._CreatedDate
			End Get
			Set
				If (Me._CreatedDate.Equals(value) = false) Then
					Me.OnCreatedDateChanging(value)
					Me.SendPropertyChanging
					Me._CreatedDate = value
					Me.SendPropertyChanged("CreatedDate")
					Me.OnCreatedDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedByUser", DbType:="VarChar(50)")>  _
		Public Property CreatedByUser() As String
			Get
				Return Me._CreatedByUser
			End Get
			Set
				If (String.Equals(Me._CreatedByUser, value) = false) Then
					Me.OnCreatedByUserChanging(value)
					Me.SendPropertyChanging
					Me._CreatedByUser = value
					Me.SendPropertyChanged("CreatedByUser")
					Me.OnCreatedByUserChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Ratecard_PublicationRate", Storage:="_PublicationRates", ThisKey:="RatecardId", OtherKey:="RatecardId")>  _
		Public Property PublicationRates() As EntitySet(Of PublicationRate)
			Get
				Return Me._PublicationRates
			End Get
			Set
				Me._PublicationRates.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BaseRate_Ratecard", Storage:="_BaseRate", ThisKey:="BaseRateId", OtherKey:="BaseRateId", IsForeignKey:=true)>  _
		Public Property BaseRate() As BaseRate
			Get
				Return Me._BaseRate.Entity
			End Get
			Set
				Dim previousValue As BaseRate = Me._BaseRate.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._BaseRate.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._BaseRate.Entity = Nothing
						previousValue.Ratecards.Remove(Me)
					End If
					Me._BaseRate.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.Ratecards.Add(Me)
						Me._BaseRateId = value.BaseRateId
					Else
						Me._BaseRateId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("BaseRate")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_PublicationRates(ByVal entity As PublicationRate)
			Me.SendPropertyChanging
			entity.Ratecard = Me
		End Sub
		
		Private Sub detach_PublicationRates(ByVal entity As PublicationRate)
			Me.SendPropertyChanging
			entity.Ratecard = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LineAdColourCode")>  _
	Partial Public Class LineAdColourCode
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _LineAdColourId As Integer
		
		Private _LineAdColourName As String
		
		Private _ColourCode As String
		
		Private _Cyan As System.Nullable(Of Integer)
		
		Private _Magenta As System.Nullable(Of Integer)
		
		Private _Yellow As System.Nullable(Of Integer)
		
		Private _KeyCode As System.Nullable(Of Integer)
		
		Private _IsActive As Boolean
		
		Private _SortOrder As System.Nullable(Of Integer)
		
		Private _CreatedDate As System.Nullable(Of Date)
		
		Private _CreatedByUser As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLineAdColourIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnLineAdColourIdChanged()
    End Sub
    Partial Private Sub OnLineAdColourNameChanging(value As String)
    End Sub
    Partial Private Sub OnLineAdColourNameChanged()
    End Sub
    Partial Private Sub OnColourCodeChanging(value As String)
    End Sub
    Partial Private Sub OnColourCodeChanged()
    End Sub
    Partial Private Sub OnCyanChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCyanChanged()
    End Sub
    Partial Private Sub OnMagentaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMagentaChanged()
    End Sub
    Partial Private Sub OnYellowChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnYellowChanged()
    End Sub
    Partial Private Sub OnKeyCodeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnKeyCodeChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnSortOrderChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSortOrderChanged()
    End Sub
    Partial Private Sub OnCreatedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreatedDateChanged()
    End Sub
    Partial Private Sub OnCreatedByUserChanging(value As String)
    End Sub
    Partial Private Sub OnCreatedByUserChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LineAdColourId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property LineAdColourId() As Integer
			Get
				Return Me._LineAdColourId
			End Get
			Set
				If ((Me._LineAdColourId = value)  _
							= false) Then
					Me.OnLineAdColourIdChanging(value)
					Me.SendPropertyChanging
					Me._LineAdColourId = value
					Me.SendPropertyChanged("LineAdColourId")
					Me.OnLineAdColourIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LineAdColourName", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property LineAdColourName() As String
			Get
				Return Me._LineAdColourName
			End Get
			Set
				If (String.Equals(Me._LineAdColourName, value) = false) Then
					Me.OnLineAdColourNameChanging(value)
					Me.SendPropertyChanging
					Me._LineAdColourName = value
					Me.SendPropertyChanged("LineAdColourName")
					Me.OnLineAdColourNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ColourCode", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
		Public Property ColourCode() As String
			Get
				Return Me._ColourCode
			End Get
			Set
				If (String.Equals(Me._ColourCode, value) = false) Then
					Me.OnColourCodeChanging(value)
					Me.SendPropertyChanging
					Me._ColourCode = value
					Me.SendPropertyChanged("ColourCode")
					Me.OnColourCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cyan", DbType:="Int")>  _
		Public Property Cyan() As System.Nullable(Of Integer)
			Get
				Return Me._Cyan
			End Get
			Set
				If (Me._Cyan.Equals(value) = false) Then
					Me.OnCyanChanging(value)
					Me.SendPropertyChanging
					Me._Cyan = value
					Me.SendPropertyChanged("Cyan")
					Me.OnCyanChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Magenta", DbType:="Int")>  _
		Public Property Magenta() As System.Nullable(Of Integer)
			Get
				Return Me._Magenta
			End Get
			Set
				If (Me._Magenta.Equals(value) = false) Then
					Me.OnMagentaChanging(value)
					Me.SendPropertyChanging
					Me._Magenta = value
					Me.SendPropertyChanged("Magenta")
					Me.OnMagentaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Yellow", DbType:="Int")>  _
		Public Property Yellow() As System.Nullable(Of Integer)
			Get
				Return Me._Yellow
			End Get
			Set
				If (Me._Yellow.Equals(value) = false) Then
					Me.OnYellowChanging(value)
					Me.SendPropertyChanging
					Me._Yellow = value
					Me.SendPropertyChanged("Yellow")
					Me.OnYellowChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KeyCode", DbType:="Int")>  _
		Public Property KeyCode() As System.Nullable(Of Integer)
			Get
				Return Me._KeyCode
			End Get
			Set
				If (Me._KeyCode.Equals(value) = false) Then
					Me.OnKeyCodeChanging(value)
					Me.SendPropertyChanging
					Me._KeyCode = value
					Me.SendPropertyChanged("KeyCode")
					Me.OnKeyCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit NOT NULL")>  _
		Public Property IsActive() As Boolean
			Get
				Return Me._IsActive
			End Get
			Set
				If ((Me._IsActive = value)  _
							= false) Then
					Me.OnIsActiveChanging(value)
					Me.SendPropertyChanging
					Me._IsActive = value
					Me.SendPropertyChanged("IsActive")
					Me.OnIsActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SortOrder", DbType:="Int")>  _
		Public Property SortOrder() As System.Nullable(Of Integer)
			Get
				Return Me._SortOrder
			End Get
			Set
				If (Me._SortOrder.Equals(value) = false) Then
					Me.OnSortOrderChanging(value)
					Me.SendPropertyChanging
					Me._SortOrder = value
					Me.SendPropertyChanged("SortOrder")
					Me.OnSortOrderChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedDate", DbType:="DateTime")>  _
		Public Property CreatedDate() As System.Nullable(Of Date)
			Get
				Return Me._CreatedDate
			End Get
			Set
				If (Me._CreatedDate.Equals(value) = false) Then
					Me.OnCreatedDateChanging(value)
					Me.SendPropertyChanging
					Me._CreatedDate = value
					Me.SendPropertyChanged("CreatedDate")
					Me.OnCreatedDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedByUser", DbType:="VarChar(100)")>  _
		Public Property CreatedByUser() As String
			Get
				Return Me._CreatedByUser
			End Get
			Set
				If (String.Equals(Me._CreatedByUser, value) = false) Then
					Me.OnCreatedByUserChanging(value)
					Me.SendPropertyChanging
					Me._CreatedByUser = value
					Me.SendPropertyChanged("CreatedByUser")
					Me.OnCreatedByUserChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LineAdTheme")>  _
	Partial Public Class LineAdTheme
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _LineAdThemeId As Integer
		
		Private _ThemeName As String
		
		Private _Description As String
		
		Private _DescriptionHtml As String
		
		Private _ImageUrl As String
		
		Private _HeaderColourCode As String
		
		Private _HeaderColourName As String
		
		Private _BorderColourCode As String
		
		Private _BorderColourName As String
		
		Private _BackgroundColourCode As String
		
		Private _BackgroundColourName As String
		
		Private _IsHeadingSuperBold As System.Nullable(Of Boolean)
		
		Private _IsActive As System.Nullable(Of Boolean)
		
		Private _CreatedDate As System.Nullable(Of Date)
		
		Private _CreatedByUser As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLineAdThemeIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnLineAdThemeIdChanged()
    End Sub
    Partial Private Sub OnThemeNameChanging(value As String)
    End Sub
    Partial Private Sub OnThemeNameChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnDescriptionHtmlChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionHtmlChanged()
    End Sub
    Partial Private Sub OnImageUrlChanging(value As String)
    End Sub
    Partial Private Sub OnImageUrlChanged()
    End Sub
    Partial Private Sub OnHeaderColourCodeChanging(value As String)
    End Sub
    Partial Private Sub OnHeaderColourCodeChanged()
    End Sub
    Partial Private Sub OnHeaderColourNameChanging(value As String)
    End Sub
    Partial Private Sub OnHeaderColourNameChanged()
    End Sub
    Partial Private Sub OnBorderColourCodeChanging(value As String)
    End Sub
    Partial Private Sub OnBorderColourCodeChanged()
    End Sub
    Partial Private Sub OnBorderColourNameChanging(value As String)
    End Sub
    Partial Private Sub OnBorderColourNameChanged()
    End Sub
    Partial Private Sub OnBackgroundColourCodeChanging(value As String)
    End Sub
    Partial Private Sub OnBackgroundColourCodeChanged()
    End Sub
    Partial Private Sub OnBackgroundColourNameChanging(value As String)
    End Sub
    Partial Private Sub OnBackgroundColourNameChanged()
    End Sub
    Partial Private Sub OnIsHeadingSuperBoldChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsHeadingSuperBoldChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnCreatedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreatedDateChanged()
    End Sub
    Partial Private Sub OnCreatedByUserChanging(value As String)
    End Sub
    Partial Private Sub OnCreatedByUserChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LineAdThemeId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property LineAdThemeId() As Integer
			Get
				Return Me._LineAdThemeId
			End Get
			Set
				If ((Me._LineAdThemeId = value)  _
							= false) Then
					Me.OnLineAdThemeIdChanging(value)
					Me.SendPropertyChanging
					Me._LineAdThemeId = value
					Me.SendPropertyChanged("LineAdThemeId")
					Me.OnLineAdThemeIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ThemeName", DbType:="VarChar(100)")>  _
		Public Property ThemeName() As String
			Get
				Return Me._ThemeName
			End Get
			Set
				If (String.Equals(Me._ThemeName, value) = false) Then
					Me.OnThemeNameChanging(value)
					Me.SendPropertyChanging
					Me._ThemeName = value
					Me.SendPropertyChanged("ThemeName")
					Me.OnThemeNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(MAX)")>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me.OnDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._Description = value
					Me.SendPropertyChanged("Description")
					Me.OnDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescriptionHtml", DbType:="NVarChar(MAX)")>  _
		Public Property DescriptionHtml() As String
			Get
				Return Me._DescriptionHtml
			End Get
			Set
				If (String.Equals(Me._DescriptionHtml, value) = false) Then
					Me.OnDescriptionHtmlChanging(value)
					Me.SendPropertyChanging
					Me._DescriptionHtml = value
					Me.SendPropertyChanged("DescriptionHtml")
					Me.OnDescriptionHtmlChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImageUrl", DbType:="VarChar(500)")>  _
		Public Property ImageUrl() As String
			Get
				Return Me._ImageUrl
			End Get
			Set
				If (String.Equals(Me._ImageUrl, value) = false) Then
					Me.OnImageUrlChanging(value)
					Me.SendPropertyChanging
					Me._ImageUrl = value
					Me.SendPropertyChanged("ImageUrl")
					Me.OnImageUrlChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HeaderColourCode", DbType:="VarChar(10)")>  _
		Public Property HeaderColourCode() As String
			Get
				Return Me._HeaderColourCode
			End Get
			Set
				If (String.Equals(Me._HeaderColourCode, value) = false) Then
					Me.OnHeaderColourCodeChanging(value)
					Me.SendPropertyChanging
					Me._HeaderColourCode = value
					Me.SendPropertyChanged("HeaderColourCode")
					Me.OnHeaderColourCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HeaderColourName", DbType:="VarChar(50)")>  _
		Public Property HeaderColourName() As String
			Get
				Return Me._HeaderColourName
			End Get
			Set
				If (String.Equals(Me._HeaderColourName, value) = false) Then
					Me.OnHeaderColourNameChanging(value)
					Me.SendPropertyChanging
					Me._HeaderColourName = value
					Me.SendPropertyChanged("HeaderColourName")
					Me.OnHeaderColourNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BorderColourCode", DbType:="VarChar(10)")>  _
		Public Property BorderColourCode() As String
			Get
				Return Me._BorderColourCode
			End Get
			Set
				If (String.Equals(Me._BorderColourCode, value) = false) Then
					Me.OnBorderColourCodeChanging(value)
					Me.SendPropertyChanging
					Me._BorderColourCode = value
					Me.SendPropertyChanged("BorderColourCode")
					Me.OnBorderColourCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BorderColourName", DbType:="VarChar(50)")>  _
		Public Property BorderColourName() As String
			Get
				Return Me._BorderColourName
			End Get
			Set
				If (String.Equals(Me._BorderColourName, value) = false) Then
					Me.OnBorderColourNameChanging(value)
					Me.SendPropertyChanging
					Me._BorderColourName = value
					Me.SendPropertyChanged("BorderColourName")
					Me.OnBorderColourNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BackgroundColourCode", DbType:="VarChar(10)")>  _
		Public Property BackgroundColourCode() As String
			Get
				Return Me._BackgroundColourCode
			End Get
			Set
				If (String.Equals(Me._BackgroundColourCode, value) = false) Then
					Me.OnBackgroundColourCodeChanging(value)
					Me.SendPropertyChanging
					Me._BackgroundColourCode = value
					Me.SendPropertyChanged("BackgroundColourCode")
					Me.OnBackgroundColourCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BackgroundColourName", DbType:="VarChar(50)")>  _
		Public Property BackgroundColourName() As String
			Get
				Return Me._BackgroundColourName
			End Get
			Set
				If (String.Equals(Me._BackgroundColourName, value) = false) Then
					Me.OnBackgroundColourNameChanging(value)
					Me.SendPropertyChanging
					Me._BackgroundColourName = value
					Me.SendPropertyChanged("BackgroundColourName")
					Me.OnBackgroundColourNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsHeadingSuperBold", DbType:="Bit")>  _
		Public Property IsHeadingSuperBold() As System.Nullable(Of Boolean)
			Get
				Return Me._IsHeadingSuperBold
			End Get
			Set
				If (Me._IsHeadingSuperBold.Equals(value) = false) Then
					Me.OnIsHeadingSuperBoldChanging(value)
					Me.SendPropertyChanging
					Me._IsHeadingSuperBold = value
					Me.SendPropertyChanged("IsHeadingSuperBold")
					Me.OnIsHeadingSuperBoldChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
		Public Property IsActive() As System.Nullable(Of Boolean)
			Get
				Return Me._IsActive
			End Get
			Set
				If (Me._IsActive.Equals(value) = false) Then
					Me.OnIsActiveChanging(value)
					Me.SendPropertyChanging
					Me._IsActive = value
					Me.SendPropertyChanged("IsActive")
					Me.OnIsActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedDate", DbType:="DateTime")>  _
		Public Property CreatedDate() As System.Nullable(Of Date)
			Get
				Return Me._CreatedDate
			End Get
			Set
				If (Me._CreatedDate.Equals(value) = false) Then
					Me.OnCreatedDateChanging(value)
					Me.SendPropertyChanging
					Me._CreatedDate = value
					Me.SendPropertyChanged("CreatedDate")
					Me.OnCreatedDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedByUser", DbType:="VarChar(100)")>  _
		Public Property CreatedByUser() As String
			Get
				Return Me._CreatedByUser
			End Get
			Set
				If (String.Equals(Me._CreatedByUser, value) = false) Then
					Me.OnCreatedByUserChanging(value)
					Me.SendPropertyChanging
					Me._CreatedByUser = value
					Me.SendPropertyChanged("CreatedByUser")
					Me.OnCreatedByUserChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LineAd")>  _
	Partial Public Class LineAd
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _LineAdId As Integer
		
		Private _AdDesignId As Integer
		
		Private _AdHeader As String
		
		Private _AdText As String
		
		Private _NumOfWords As System.Nullable(Of Integer)
		
		Private _UsePhoto As System.Nullable(Of Boolean)
		
		Private _UseBoldHeader As System.Nullable(Of Boolean)
		
		Private _IsColourBoldHeading As System.Nullable(Of Boolean)
		
		Private _IsColourBorder As System.Nullable(Of Boolean)
		
		Private _IsColourBackground As System.Nullable(Of Boolean)
		
		Private _IsSuperBoldHeading As System.Nullable(Of Boolean)
		
		Private _IsFooterPhoto As System.Nullable(Of Boolean)
		
		Private _BoldHeadingColourCode As String
		
		Private _BorderColourCode As String
		
		Private _BackgroundColourCode As String
		
		Private _FooterPhotoId As String
		
		Private _IsSuperHeadingPurchased As System.Nullable(Of Boolean)
		
		Private _AdDesign As EntityRef(Of AdDesign)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLineAdIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnLineAdIdChanged()
    End Sub
    Partial Private Sub OnAdDesignIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnAdDesignIdChanged()
    End Sub
    Partial Private Sub OnAdHeaderChanging(value As String)
    End Sub
    Partial Private Sub OnAdHeaderChanged()
    End Sub
    Partial Private Sub OnAdTextChanging(value As String)
    End Sub
    Partial Private Sub OnAdTextChanged()
    End Sub
    Partial Private Sub OnNumOfWordsChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumOfWordsChanged()
    End Sub
    Partial Private Sub OnUsePhotoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnUsePhotoChanged()
    End Sub
    Partial Private Sub OnUseBoldHeaderChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnUseBoldHeaderChanged()
    End Sub
    Partial Private Sub OnIsColourBoldHeadingChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsColourBoldHeadingChanged()
    End Sub
    Partial Private Sub OnIsColourBorderChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsColourBorderChanged()
    End Sub
    Partial Private Sub OnIsColourBackgroundChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsColourBackgroundChanged()
    End Sub
    Partial Private Sub OnIsSuperBoldHeadingChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsSuperBoldHeadingChanged()
    End Sub
    Partial Private Sub OnIsFooterPhotoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsFooterPhotoChanged()
    End Sub
    Partial Private Sub OnBoldHeadingColourCodeChanging(value As String)
    End Sub
    Partial Private Sub OnBoldHeadingColourCodeChanged()
    End Sub
    Partial Private Sub OnBorderColourCodeChanging(value As String)
    End Sub
    Partial Private Sub OnBorderColourCodeChanged()
    End Sub
    Partial Private Sub OnBackgroundColourCodeChanging(value As String)
    End Sub
    Partial Private Sub OnBackgroundColourCodeChanged()
    End Sub
    Partial Private Sub OnFooterPhotoIdChanging(value As String)
    End Sub
    Partial Private Sub OnFooterPhotoIdChanged()
    End Sub
    Partial Private Sub OnIsSuperHeadingPurchasedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsSuperHeadingPurchasedChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._AdDesign = CType(Nothing, EntityRef(Of AdDesign))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LineAdId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property LineAdId() As Integer
			Get
				Return Me._LineAdId
			End Get
			Set
				If ((Me._LineAdId = value)  _
							= false) Then
					Me.OnLineAdIdChanging(value)
					Me.SendPropertyChanging
					Me._LineAdId = value
					Me.SendPropertyChanged("LineAdId")
					Me.OnLineAdIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdDesignId", DbType:="Int NOT NULL")>  _
		Public Property AdDesignId() As Integer
			Get
				Return Me._AdDesignId
			End Get
			Set
				If ((Me._AdDesignId = value)  _
							= false) Then
					If Me._AdDesign.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnAdDesignIdChanging(value)
					Me.SendPropertyChanging
					Me._AdDesignId = value
					Me.SendPropertyChanged("AdDesignId")
					Me.OnAdDesignIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdHeader", DbType:="NVarChar(255)")>  _
		Public Property AdHeader() As String
			Get
				Return Me._AdHeader
			End Get
			Set
				If (String.Equals(Me._AdHeader, value) = false) Then
					Me.OnAdHeaderChanging(value)
					Me.SendPropertyChanging
					Me._AdHeader = value
					Me.SendPropertyChanged("AdHeader")
					Me.OnAdHeaderChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdText", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
		Public Property AdText() As String
			Get
				Return Me._AdText
			End Get
			Set
				If (String.Equals(Me._AdText, value) = false) Then
					Me.OnAdTextChanging(value)
					Me.SendPropertyChanging
					Me._AdText = value
					Me.SendPropertyChanged("AdText")
					Me.OnAdTextChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumOfWords", DbType:="Int")>  _
		Public Property NumOfWords() As System.Nullable(Of Integer)
			Get
				Return Me._NumOfWords
			End Get
			Set
				If (Me._NumOfWords.Equals(value) = false) Then
					Me.OnNumOfWordsChanging(value)
					Me.SendPropertyChanging
					Me._NumOfWords = value
					Me.SendPropertyChanged("NumOfWords")
					Me.OnNumOfWordsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UsePhoto", DbType:="Bit")>  _
		Public Property UsePhoto() As System.Nullable(Of Boolean)
			Get
				Return Me._UsePhoto
			End Get
			Set
				If (Me._UsePhoto.Equals(value) = false) Then
					Me.OnUsePhotoChanging(value)
					Me.SendPropertyChanging
					Me._UsePhoto = value
					Me.SendPropertyChanged("UsePhoto")
					Me.OnUsePhotoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UseBoldHeader", DbType:="Bit")>  _
		Public Property UseBoldHeader() As System.Nullable(Of Boolean)
			Get
				Return Me._UseBoldHeader
			End Get
			Set
				If (Me._UseBoldHeader.Equals(value) = false) Then
					Me.OnUseBoldHeaderChanging(value)
					Me.SendPropertyChanging
					Me._UseBoldHeader = value
					Me.SendPropertyChanged("UseBoldHeader")
					Me.OnUseBoldHeaderChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsColourBoldHeading", DbType:="Bit")>  _
		Public Property IsColourBoldHeading() As System.Nullable(Of Boolean)
			Get
				Return Me._IsColourBoldHeading
			End Get
			Set
				If (Me._IsColourBoldHeading.Equals(value) = false) Then
					Me.OnIsColourBoldHeadingChanging(value)
					Me.SendPropertyChanging
					Me._IsColourBoldHeading = value
					Me.SendPropertyChanged("IsColourBoldHeading")
					Me.OnIsColourBoldHeadingChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsColourBorder", DbType:="Bit")>  _
		Public Property IsColourBorder() As System.Nullable(Of Boolean)
			Get
				Return Me._IsColourBorder
			End Get
			Set
				If (Me._IsColourBorder.Equals(value) = false) Then
					Me.OnIsColourBorderChanging(value)
					Me.SendPropertyChanging
					Me._IsColourBorder = value
					Me.SendPropertyChanged("IsColourBorder")
					Me.OnIsColourBorderChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsColourBackground", DbType:="Bit")>  _
		Public Property IsColourBackground() As System.Nullable(Of Boolean)
			Get
				Return Me._IsColourBackground
			End Get
			Set
				If (Me._IsColourBackground.Equals(value) = false) Then
					Me.OnIsColourBackgroundChanging(value)
					Me.SendPropertyChanging
					Me._IsColourBackground = value
					Me.SendPropertyChanged("IsColourBackground")
					Me.OnIsColourBackgroundChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSuperBoldHeading", DbType:="Bit")>  _
		Public Property IsSuperBoldHeading() As System.Nullable(Of Boolean)
			Get
				Return Me._IsSuperBoldHeading
			End Get
			Set
				If (Me._IsSuperBoldHeading.Equals(value) = false) Then
					Me.OnIsSuperBoldHeadingChanging(value)
					Me.SendPropertyChanging
					Me._IsSuperBoldHeading = value
					Me.SendPropertyChanged("IsSuperBoldHeading")
					Me.OnIsSuperBoldHeadingChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsFooterPhoto", DbType:="Bit")>  _
		Public Property IsFooterPhoto() As System.Nullable(Of Boolean)
			Get
				Return Me._IsFooterPhoto
			End Get
			Set
				If (Me._IsFooterPhoto.Equals(value) = false) Then
					Me.OnIsFooterPhotoChanging(value)
					Me.SendPropertyChanging
					Me._IsFooterPhoto = value
					Me.SendPropertyChanged("IsFooterPhoto")
					Me.OnIsFooterPhotoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BoldHeadingColourCode", DbType:="VarChar(10)")>  _
		Public Property BoldHeadingColourCode() As String
			Get
				Return Me._BoldHeadingColourCode
			End Get
			Set
				If (String.Equals(Me._BoldHeadingColourCode, value) = false) Then
					Me.OnBoldHeadingColourCodeChanging(value)
					Me.SendPropertyChanging
					Me._BoldHeadingColourCode = value
					Me.SendPropertyChanged("BoldHeadingColourCode")
					Me.OnBoldHeadingColourCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BorderColourCode", DbType:="VarChar(10)")>  _
		Public Property BorderColourCode() As String
			Get
				Return Me._BorderColourCode
			End Get
			Set
				If (String.Equals(Me._BorderColourCode, value) = false) Then
					Me.OnBorderColourCodeChanging(value)
					Me.SendPropertyChanging
					Me._BorderColourCode = value
					Me.SendPropertyChanged("BorderColourCode")
					Me.OnBorderColourCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BackgroundColourCode", DbType:="VarChar(10)")>  _
		Public Property BackgroundColourCode() As String
			Get
				Return Me._BackgroundColourCode
			End Get
			Set
				If (String.Equals(Me._BackgroundColourCode, value) = false) Then
					Me.OnBackgroundColourCodeChanging(value)
					Me.SendPropertyChanging
					Me._BackgroundColourCode = value
					Me.SendPropertyChanged("BackgroundColourCode")
					Me.OnBackgroundColourCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FooterPhotoId", DbType:="VarChar(100)")>  _
		Public Property FooterPhotoId() As String
			Get
				Return Me._FooterPhotoId
			End Get
			Set
				If (String.Equals(Me._FooterPhotoId, value) = false) Then
					Me.OnFooterPhotoIdChanging(value)
					Me.SendPropertyChanging
					Me._FooterPhotoId = value
					Me.SendPropertyChanged("FooterPhotoId")
					Me.OnFooterPhotoIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSuperHeadingPurchased", DbType:="Bit")>  _
		Public Property IsSuperHeadingPurchased() As System.Nullable(Of Boolean)
			Get
				Return Me._IsSuperHeadingPurchased
			End Get
			Set
				If (Me._IsSuperHeadingPurchased.Equals(value) = false) Then
					Me.OnIsSuperHeadingPurchasedChanging(value)
					Me.SendPropertyChanging
					Me._IsSuperHeadingPurchased = value
					Me.SendPropertyChanged("IsSuperHeadingPurchased")
					Me.OnIsSuperHeadingPurchasedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AdDesign_LineAd", Storage:="_AdDesign", ThisKey:="AdDesignId", OtherKey:="AdDesignId", IsForeignKey:=true)>  _
		Public Property AdDesign() As AdDesign
			Get
				Return Me._AdDesign.Entity
			End Get
			Set
				Dim previousValue As AdDesign = Me._AdDesign.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._AdDesign.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._AdDesign.Entity = Nothing
						previousValue.LineAds.Remove(Me)
					End If
					Me._AdDesign.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.LineAds.Add(Me)
						Me._AdDesignId = value.AdDesignId
					Else
						Me._AdDesignId = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("AdDesign")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AdBookingExtension")>  _
	Partial Public Class AdBookingExtension
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _AdBookingExtensionId As Integer
		
		Private _AdBookingId As Integer
		
		Private _Insertions As System.Nullable(Of Integer)
		
		Private _ExtensionPrice As System.Nullable(Of Decimal)
		
		Private _Status As Integer
		
		Private _LastModifiedUserId As String
		
		Private _LastModifiedDate As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAdBookingExtensionIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnAdBookingExtensionIdChanged()
    End Sub
    Partial Private Sub OnAdBookingIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnAdBookingIdChanged()
    End Sub
    Partial Private Sub OnInsertionsChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnInsertionsChanged()
    End Sub
    Partial Private Sub OnExtensionPriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnExtensionPriceChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As Integer)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnLastModifiedUserIdChanging(value As String)
    End Sub
    Partial Private Sub OnLastModifiedUserIdChanged()
    End Sub
    Partial Private Sub OnLastModifiedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastModifiedDateChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdBookingExtensionId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property AdBookingExtensionId() As Integer
			Get
				Return Me._AdBookingExtensionId
			End Get
			Set
				If ((Me._AdBookingExtensionId = value)  _
							= false) Then
					Me.OnAdBookingExtensionIdChanging(value)
					Me.SendPropertyChanging
					Me._AdBookingExtensionId = value
					Me.SendPropertyChanged("AdBookingExtensionId")
					Me.OnAdBookingExtensionIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdBookingId", DbType:="Int NOT NULL")>  _
		Public Property AdBookingId() As Integer
			Get
				Return Me._AdBookingId
			End Get
			Set
				If ((Me._AdBookingId = value)  _
							= false) Then
					Me.OnAdBookingIdChanging(value)
					Me.SendPropertyChanging
					Me._AdBookingId = value
					Me.SendPropertyChanged("AdBookingId")
					Me.OnAdBookingIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Insertions", DbType:="Int")>  _
		Public Property Insertions() As System.Nullable(Of Integer)
			Get
				Return Me._Insertions
			End Get
			Set
				If (Me._Insertions.Equals(value) = false) Then
					Me.OnInsertionsChanging(value)
					Me.SendPropertyChanging
					Me._Insertions = value
					Me.SendPropertyChanged("Insertions")
					Me.OnInsertionsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExtensionPrice", DbType:="Money")>  _
		Public Property ExtensionPrice() As System.Nullable(Of Decimal)
			Get
				Return Me._ExtensionPrice
			End Get
			Set
				If (Me._ExtensionPrice.Equals(value) = false) Then
					Me.OnExtensionPriceChanging(value)
					Me.SendPropertyChanging
					Me._ExtensionPrice = value
					Me.SendPropertyChanged("ExtensionPrice")
					Me.OnExtensionPriceChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Int NOT NULL")>  _
		Public Property Status() As Integer
			Get
				Return Me._Status
			End Get
			Set
				If ((Me._Status = value)  _
							= false) Then
					Me.OnStatusChanging(value)
					Me.SendPropertyChanging
					Me._Status = value
					Me.SendPropertyChanged("Status")
					Me.OnStatusChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastModifiedUserId", DbType:="VarChar(50)")>  _
		Public Property LastModifiedUserId() As String
			Get
				Return Me._LastModifiedUserId
			End Get
			Set
				If (String.Equals(Me._LastModifiedUserId, value) = false) Then
					Me.OnLastModifiedUserIdChanging(value)
					Me.SendPropertyChanging
					Me._LastModifiedUserId = value
					Me.SendPropertyChanged("LastModifiedUserId")
					Me.OnLastModifiedUserIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastModifiedDate", DbType:="DateTime")>  _
		Public Property LastModifiedDate() As System.Nullable(Of Date)
			Get
				Return Me._LastModifiedDate
			End Get
			Set
				If (Me._LastModifiedDate.Equals(value) = false) Then
					Me.OnLastModifiedDateChanging(value)
					Me.SendPropertyChanging
					Me._LastModifiedDate = value
					Me.SendPropertyChanged("LastModifiedDate")
					Me.OnLastModifiedDateChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	Partial Public Class spSpecialRatesByCategoryResult
		
		Private _Title As String
		
		Private _Description As String
		
		Private _SpecialRateId As Integer
		
		Private _NumOfInsertions As System.Nullable(Of Integer)
		
		Private _MaximumWords As System.Nullable(Of Integer)
		
		Private _SetPrice As System.Nullable(Of Decimal)
		
		Private _Discount As System.Nullable(Of Decimal)
		
		Private _NumOfAds As System.Nullable(Of Integer)
		
		Private _MainCategoryId As Integer
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me._Title = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(MAX)")>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me._Description = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpecialRateId", DbType:="Int NOT NULL")>  _
		Public Property SpecialRateId() As Integer
			Get
				Return Me._SpecialRateId
			End Get
			Set
				If ((Me._SpecialRateId = value)  _
							= false) Then
					Me._SpecialRateId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumOfInsertions", DbType:="Int")>  _
		Public Property NumOfInsertions() As System.Nullable(Of Integer)
			Get
				Return Me._NumOfInsertions
			End Get
			Set
				If (Me._NumOfInsertions.Equals(value) = false) Then
					Me._NumOfInsertions = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaximumWords", DbType:="Int")>  _
		Public Property MaximumWords() As System.Nullable(Of Integer)
			Get
				Return Me._MaximumWords
			End Get
			Set
				If (Me._MaximumWords.Equals(value) = false) Then
					Me._MaximumWords = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SetPrice", DbType:="Money")>  _
		Public Property SetPrice() As System.Nullable(Of Decimal)
			Get
				Return Me._SetPrice
			End Get
			Set
				If (Me._SetPrice.Equals(value) = false) Then
					Me._SetPrice = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Discount", DbType:="Decimal(0,0)")>  _
		Public Property Discount() As System.Nullable(Of Decimal)
			Get
				Return Me._Discount
			End Get
			Set
				If (Me._Discount.Equals(value) = false) Then
					Me._Discount = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumOfAds", DbType:="Int")>  _
		Public Property NumOfAds() As System.Nullable(Of Integer)
			Get
				Return Me._NumOfAds
			End Get
			Set
				If (Me._NumOfAds.Equals(value) = false) Then
					Me._NumOfAds = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MainCategoryId", DbType:="Int NOT NULL")>  _
		Public Property MainCategoryId() As Integer
			Get
				Return Me._MainCategoryId
			End Get
			Set
				If ((Me._MainCategoryId = value)  _
							= false) Then
					Me._MainCategoryId = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class spMainCategoryAdCountResult
		
		Private _MainCategoryId As Integer
		
		Private _Title As String
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MainCategoryId", DbType:="Int NOT NULL")>  _
		Public Property MainCategoryId() As Integer
			Get
				Return Me._MainCategoryId
			End Get
			Set
				If ((Me._MainCategoryId = value)  _
							= false) Then
					Me._MainCategoryId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(MAX)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me._Title = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class spOnlineAdSelectResult
		
		Private _OnlineAdId As Integer
		
		Private _Heading As String
		
		Private _Price As System.Nullable(Of Decimal)
		
		Private _NumOfViews As System.Nullable(Of Integer)
		
		Private _Posted As System.Nullable(Of Date)
		
		Private _Ending As System.Nullable(Of Date)
		
		Private _Location As String
		
		Private _AdText As String
		
		Private _Category As String
		
		Private _DocumentId As String
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OnlineAdId", DbType:="Int NOT NULL")>  _
		Public Property OnlineAdId() As Integer
			Get
				Return Me._OnlineAdId
			End Get
			Set
				If ((Me._OnlineAdId = value)  _
							= false) Then
					Me._OnlineAdId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Heading", DbType:="NVarChar(255)")>  _
		Public Property Heading() As String
			Get
				Return Me._Heading
			End Get
			Set
				If (String.Equals(Me._Heading, value) = false) Then
					Me._Heading = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Price", DbType:="Money")>  _
		Public Property Price() As System.Nullable(Of Decimal)
			Get
				Return Me._Price
			End Get
			Set
				If (Me._Price.Equals(value) = false) Then
					Me._Price = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumOfViews", DbType:="Int")>  _
		Public Property NumOfViews() As System.Nullable(Of Integer)
			Get
				Return Me._NumOfViews
			End Get
			Set
				If (Me._NumOfViews.Equals(value) = false) Then
					Me._NumOfViews = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Posted", DbType:="DateTime")>  _
		Public Property Posted() As System.Nullable(Of Date)
			Get
				Return Me._Posted
			End Get
			Set
				If (Me._Posted.Equals(value) = false) Then
					Me._Posted = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ending", DbType:="DateTime")>  _
		Public Property Ending() As System.Nullable(Of Date)
			Get
				Return Me._Ending
			End Get
			Set
				If (Me._Ending.Equals(value) = false) Then
					Me._Ending = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Location", DbType:="NVarChar(50)")>  _
		Public Property Location() As String
			Get
				Return Me._Location
			End Get
			Set
				If (String.Equals(Me._Location, value) = false) Then
					Me._Location = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdText", DbType:="NVarChar(MAX)")>  _
		Public Property AdText() As String
			Get
				Return Me._AdText
			End Get
			Set
				If (String.Equals(Me._AdText, value) = false) Then
					Me._AdText = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="NVarChar(50)")>  _
		Public Property Category() As String
			Get
				Return Me._Category
			End Get
			Set
				If (String.Equals(Me._Category, value) = false) Then
					Me._Category = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DocumentId", DbType:="NVarChar(100)")>  _
		Public Property DocumentId() As String
			Get
				Return Me._DocumentId
			End Get
			Set
				If (String.Equals(Me._DocumentId, value) = false) Then
					Me._DocumentId = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class spOnlineAdSelectByCategoryResult
		
		Private _OnlineAdId As Integer
		
		Private _Heading As String
		
		Private _Price As System.Nullable(Of Decimal)
		
		Private _NumOfViews As System.Nullable(Of Integer)
		
		Private _Posted As System.Nullable(Of Date)
		
		Private _Ending As System.Nullable(Of Date)
		
		Private _Location As String
		
		Private _AdText As String
		
		Private _Category As String
		
		Private _DocumentId As String
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OnlineAdId", DbType:="Int NOT NULL")>  _
		Public Property OnlineAdId() As Integer
			Get
				Return Me._OnlineAdId
			End Get
			Set
				If ((Me._OnlineAdId = value)  _
							= false) Then
					Me._OnlineAdId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Heading", DbType:="NVarChar(255)")>  _
		Public Property Heading() As String
			Get
				Return Me._Heading
			End Get
			Set
				If (String.Equals(Me._Heading, value) = false) Then
					Me._Heading = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Price", DbType:="Money")>  _
		Public Property Price() As System.Nullable(Of Decimal)
			Get
				Return Me._Price
			End Get
			Set
				If (Me._Price.Equals(value) = false) Then
					Me._Price = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumOfViews", DbType:="Int")>  _
		Public Property NumOfViews() As System.Nullable(Of Integer)
			Get
				Return Me._NumOfViews
			End Get
			Set
				If (Me._NumOfViews.Equals(value) = false) Then
					Me._NumOfViews = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Posted", DbType:="DateTime")>  _
		Public Property Posted() As System.Nullable(Of Date)
			Get
				Return Me._Posted
			End Get
			Set
				If (Me._Posted.Equals(value) = false) Then
					Me._Posted = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ending", DbType:="DateTime")>  _
		Public Property Ending() As System.Nullable(Of Date)
			Get
				Return Me._Ending
			End Get
			Set
				If (Me._Ending.Equals(value) = false) Then
					Me._Ending = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Location", DbType:="NVarChar(50)")>  _
		Public Property Location() As String
			Get
				Return Me._Location
			End Get
			Set
				If (String.Equals(Me._Location, value) = false) Then
					Me._Location = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdText", DbType:="NVarChar(MAX)")>  _
		Public Property AdText() As String
			Get
				Return Me._AdText
			End Get
			Set
				If (String.Equals(Me._AdText, value) = false) Then
					Me._AdText = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="NVarChar(50)")>  _
		Public Property Category() As String
			Get
				Return Me._Category
			End Get
			Set
				If (String.Equals(Me._Category, value) = false) Then
					Me._Category = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DocumentId", DbType:="NVarChar(100)")>  _
		Public Property DocumentId() As String
			Get
				Return Me._DocumentId
			End Get
			Set
				If (String.Equals(Me._DocumentId, value) = false) Then
					Me._DocumentId = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class spPublicationEditionAndDeadlinesResult
		
		Private _PublicationId As Integer
		
		Private _Title As String
		
		Private _Description As String
		
		Private _ImageUrl As String
		
		Private _NextEdition As System.Nullable(Of Date)
		
		Private _NextDeadline As System.Nullable(Of Date)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationId", DbType:="Int NOT NULL")>  _
		Public Property PublicationId() As Integer
			Get
				Return Me._PublicationId
			End Get
			Set
				If ((Me._PublicationId = value)  _
							= false) Then
					Me._PublicationId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me._Title = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(MAX)")>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me._Description = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImageUrl", DbType:="NVarChar(255)")>  _
		Public Property ImageUrl() As String
			Get
				Return Me._ImageUrl
			End Get
			Set
				If (String.Equals(Me._ImageUrl, value) = false) Then
					Me._ImageUrl = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NextEdition", DbType:="DateTime")>  _
		Public Property NextEdition() As System.Nullable(Of Date)
			Get
				Return Me._NextEdition
			End Get
			Set
				If (Me._NextEdition.Equals(value) = false) Then
					Me._NextEdition = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NextDeadline", DbType:="DateTime")>  _
		Public Property NextDeadline() As System.Nullable(Of Date)
			Get
				Return Me._NextDeadline
			End Get
			Set
				If (Me._NextDeadline.Equals(value) = false) Then
					Me._NextDeadline = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class spLineAdByIdResult
		
		Private _LineAdId As Integer
		
		Private _AdHeader As String
		
		Private _AdText As String
		
		Private _NumOfWords As System.Nullable(Of Integer)
		
		Private _UsePhoto As System.Nullable(Of Boolean)
		
		Private _UseBoldHeader As System.Nullable(Of Boolean)
		
		Private _DocumentId As String
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LineAdId", DbType:="Int NOT NULL")>  _
		Public Property LineAdId() As Integer
			Get
				Return Me._LineAdId
			End Get
			Set
				If ((Me._LineAdId = value)  _
							= false) Then
					Me._LineAdId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdHeader", DbType:="NVarChar(255)")>  _
		Public Property AdHeader() As String
			Get
				Return Me._AdHeader
			End Get
			Set
				If (String.Equals(Me._AdHeader, value) = false) Then
					Me._AdHeader = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdText", DbType:="NVarChar(MAX)")>  _
		Public Property AdText() As String
			Get
				Return Me._AdText
			End Get
			Set
				If (String.Equals(Me._AdText, value) = false) Then
					Me._AdText = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumOfWords", DbType:="Int")>  _
		Public Property NumOfWords() As System.Nullable(Of Integer)
			Get
				Return Me._NumOfWords
			End Get
			Set
				If (Me._NumOfWords.Equals(value) = false) Then
					Me._NumOfWords = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UsePhoto", DbType:="Bit")>  _
		Public Property UsePhoto() As System.Nullable(Of Boolean)
			Get
				Return Me._UsePhoto
			End Get
			Set
				If (Me._UsePhoto.Equals(value) = false) Then
					Me._UsePhoto = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UseBoldHeader", DbType:="Bit")>  _
		Public Property UseBoldHeader() As System.Nullable(Of Boolean)
			Get
				Return Me._UseBoldHeader
			End Get
			Set
				If (Me._UseBoldHeader.Equals(value) = false) Then
					Me._UseBoldHeader = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DocumentId", DbType:="NVarChar(100)")>  _
		Public Property DocumentId() As String
			Get
				Return Me._DocumentId
			End Get
			Set
				If (String.Equals(Me._DocumentId, value) = false) Then
					Me._DocumentId = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class spPublicationCategoriesResult
		
		Private _PublicationCategoryId As Integer
		
		Private _Title As String
		
		Private _Description As String
		
		Private _ImageUrl As String
		
		Private _ParentId As System.Nullable(Of Integer)
		
		Private _MainCategoryId As System.Nullable(Of Integer)
		
		Private _PublicationId As System.Nullable(Of Integer)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationCategoryId", DbType:="Int NOT NULL")>  _
		Public Property PublicationCategoryId() As Integer
			Get
				Return Me._PublicationCategoryId
			End Get
			Set
				If ((Me._PublicationCategoryId = value)  _
							= false) Then
					Me._PublicationCategoryId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me._Title = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(MAX)")>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me._Description = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImageUrl", DbType:="NVarChar(255)")>  _
		Public Property ImageUrl() As String
			Get
				Return Me._ImageUrl
			End Get
			Set
				If (String.Equals(Me._ImageUrl, value) = false) Then
					Me._ImageUrl = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ParentId", DbType:="Int")>  _
		Public Property ParentId() As System.Nullable(Of Integer)
			Get
				Return Me._ParentId
			End Get
			Set
				If (Me._ParentId.Equals(value) = false) Then
					Me._ParentId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MainCategoryId", DbType:="Int")>  _
		Public Property MainCategoryId() As System.Nullable(Of Integer)
			Get
				Return Me._MainCategoryId
			End Get
			Set
				If (Me._MainCategoryId.Equals(value) = false) Then
					Me._MainCategoryId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationId", DbType:="Int")>  _
		Public Property PublicationId() As System.Nullable(Of Integer)
			Get
				Return Me._PublicationId
			End Get
			Set
				If (Me._PublicationId.Equals(value) = false) Then
					Me._PublicationId = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class spPublicationCategoriesByPubIdResult
		
		Private _PublicationCategoryId As Integer
		
		Private _Title As String
		
		Private _Description As String
		
		Private _ImageUrl As String
		
		Private _ParentId As System.Nullable(Of Integer)
		
		Private _MainCategoryId As System.Nullable(Of Integer)
		
		Private _PublicationId As System.Nullable(Of Integer)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationCategoryId", DbType:="Int NOT NULL")>  _
		Public Property PublicationCategoryId() As Integer
			Get
				Return Me._PublicationCategoryId
			End Get
			Set
				If ((Me._PublicationCategoryId = value)  _
							= false) Then
					Me._PublicationCategoryId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me._Title = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(MAX)")>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me._Description = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImageUrl", DbType:="NVarChar(255)")>  _
		Public Property ImageUrl() As String
			Get
				Return Me._ImageUrl
			End Get
			Set
				If (String.Equals(Me._ImageUrl, value) = false) Then
					Me._ImageUrl = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ParentId", DbType:="Int")>  _
		Public Property ParentId() As System.Nullable(Of Integer)
			Get
				Return Me._ParentId
			End Get
			Set
				If (Me._ParentId.Equals(value) = false) Then
					Me._ParentId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MainCategoryId", DbType:="Int")>  _
		Public Property MainCategoryId() As System.Nullable(Of Integer)
			Get
				Return Me._MainCategoryId
			End Get
			Set
				If (Me._MainCategoryId.Equals(value) = false) Then
					Me._MainCategoryId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationId", DbType:="Int")>  _
		Public Property PublicationId() As System.Nullable(Of Integer)
			Get
				Return Me._PublicationId
			End Get
			Set
				If (Me._PublicationId.Equals(value) = false) Then
					Me._PublicationId = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class spMainCategoriesUnassignedResult
		
		Private _MainCategoryId As Integer
		
		Private _Title As String
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MainCategoryId", DbType:="Int NOT NULL")>  _
		Public Property MainCategoryId() As Integer
			Get
				Return Me._MainCategoryId
			End Get
			Set
				If ((Me._MainCategoryId = value)  _
							= false) Then
					Me._MainCategoryId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me._Title = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class spSpecialRatePublicationsResult
		
		Private _Publication As String
		
		Private _AdType As String
		
		Private _PublicationId As Integer
		
		Private _ImageUrl As String
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Publication", DbType:="NVarChar(50)")>  _
		Public Property Publication() As String
			Get
				Return Me._Publication
			End Get
			Set
				If (String.Equals(Me._Publication, value) = false) Then
					Me._Publication = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdType", DbType:="NVarChar(50)")>  _
		Public Property AdType() As String
			Get
				Return Me._AdType
			End Get
			Set
				If (String.Equals(Me._AdType, value) = false) Then
					Me._AdType = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationId", DbType:="Int NOT NULL")>  _
		Public Property PublicationId() As Integer
			Get
				Return Me._PublicationId
			End Get
			Set
				If ((Me._PublicationId = value)  _
							= false) Then
					Me._PublicationId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImageUrl", DbType:="NVarChar(255)")>  _
		Public Property ImageUrl() As String
			Get
				Return Me._ImageUrl
			End Get
			Set
				If (String.Equals(Me._ImageUrl, value) = false) Then
					Me._ImageUrl = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class spAdBookingSelectUserActiveResult
		
		Private _AdBookingId As Integer
		
		Private _StartDate As System.Nullable(Of Date)
		
		Private _EndDate As System.Nullable(Of Date)
		
		Private _TotalPrice As System.Nullable(Of Decimal)
		
		Private _BookReference As String
		
		Private _Title As String
		
		Private _NumOfAds As System.Nullable(Of Integer)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdBookingId", DbType:="Int NOT NULL")>  _
		Public Property AdBookingId() As Integer
			Get
				Return Me._AdBookingId
			End Get
			Set
				If ((Me._AdBookingId = value)  _
							= false) Then
					Me._AdBookingId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="DateTime")>  _
		Public Property StartDate() As System.Nullable(Of Date)
			Get
				Return Me._StartDate
			End Get
			Set
				If (Me._StartDate.Equals(value) = false) Then
					Me._StartDate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDate", DbType:="DateTime")>  _
		Public Property EndDate() As System.Nullable(Of Date)
			Get
				Return Me._EndDate
			End Get
			Set
				If (Me._EndDate.Equals(value) = false) Then
					Me._EndDate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalPrice", DbType:="Money")>  _
		Public Property TotalPrice() As System.Nullable(Of Decimal)
			Get
				Return Me._TotalPrice
			End Get
			Set
				If (Me._TotalPrice.Equals(value) = false) Then
					Me._TotalPrice = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BookReference", DbType:="NChar(10)")>  _
		Public Property BookReference() As String
			Get
				Return Me._BookReference
			End Get
			Set
				If (String.Equals(Me._BookReference, value) = false) Then
					Me._BookReference = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me._Title = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumOfAds", DbType:="Int")>  _
		Public Property NumOfAds() As System.Nullable(Of Integer)
			Get
				Return Me._NumOfAds
			End Get
			Set
				If (Me._NumOfAds.Equals(value) = false) Then
					Me._NumOfAds = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class spOnlineAdSelectUserScheduledResult
		
		Private _AdDesignID As Integer
		
		Private _BookReference As String
		
		Private _AdBookingId As Integer
		
		Private _StartDate As System.Nullable(Of Date)
		
		Private _Title As String
		
		Private _Status As String
		
		Private _Category As String
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdDesignID", DbType:="Int NOT NULL")>  _
		Public Property AdDesignID() As Integer
			Get
				Return Me._AdDesignID
			End Get
			Set
				If ((Me._AdDesignID = value)  _
							= false) Then
					Me._AdDesignID = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BookReference", DbType:="NChar(10)")>  _
		Public Property BookReference() As String
			Get
				Return Me._BookReference
			End Get
			Set
				If (String.Equals(Me._BookReference, value) = false) Then
					Me._BookReference = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdBookingId", DbType:="Int NOT NULL")>  _
		Public Property AdBookingId() As Integer
			Get
				Return Me._AdBookingId
			End Get
			Set
				If ((Me._AdBookingId = value)  _
							= false) Then
					Me._AdBookingId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="DateTime")>  _
		Public Property StartDate() As System.Nullable(Of Date)
			Get
				Return Me._StartDate
			End Get
			Set
				If (Me._StartDate.Equals(value) = false) Then
					Me._StartDate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(28)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me._Title = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="VarChar(9)")>  _
		Public Property Status() As String
			Get
				Return Me._Status
			End Get
			Set
				If (String.Equals(Me._Status, value) = false) Then
					Me._Status = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="NVarChar(50)")>  _
		Public Property Category() As String
			Get
				Return Me._Category
			End Get
			Set
				If (String.Equals(Me._Category, value) = false) Then
					Me._Category = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class spLineAdSelectUserScheduledResult
		
		Private _AdDesignId As Integer
		
		Private _BookReference As String
		
		Private _Title As String
		
		Private _Category As String
		
		Private _AdBookingId As Integer
		
		Private _StartDate As System.Nullable(Of Date)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdDesignId", DbType:="Int NOT NULL")>  _
		Public Property AdDesignId() As Integer
			Get
				Return Me._AdDesignId
			End Get
			Set
				If ((Me._AdDesignId = value)  _
							= false) Then
					Me._AdDesignId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BookReference", DbType:="NChar(10)")>  _
		Public Property BookReference() As String
			Get
				Return Me._BookReference
			End Get
			Set
				If (String.Equals(Me._BookReference, value) = false) Then
					Me._BookReference = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(28)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me._Title = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="NVarChar(50)")>  _
		Public Property Category() As String
			Get
				Return Me._Category
			End Get
			Set
				If (String.Equals(Me._Category, value) = false) Then
					Me._Category = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdBookingId", DbType:="Int NOT NULL")>  _
		Public Property AdBookingId() As Integer
			Get
				Return Me._AdBookingId
			End Get
			Set
				If ((Me._AdBookingId = value)  _
							= false) Then
					Me._AdBookingId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="DateTime")>  _
		Public Property StartDate() As System.Nullable(Of Date)
			Get
				Return Me._StartDate
			End Get
			Set
				If (Me._StartDate.Equals(value) = false) Then
					Me._StartDate = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class spLineAdSelectUserCurrentResult
		
		Private _AdDesignId As Integer
		
		Private _BookReference As String
		
		Private _Title As String
		
		Private _Category As String
		
		Private _AdBookingId As Integer
		
		Private _EndDate As System.Nullable(Of Date)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdDesignId", DbType:="Int NOT NULL")>  _
		Public Property AdDesignId() As Integer
			Get
				Return Me._AdDesignId
			End Get
			Set
				If ((Me._AdDesignId = value)  _
							= false) Then
					Me._AdDesignId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BookReference", DbType:="NChar(10)")>  _
		Public Property BookReference() As String
			Get
				Return Me._BookReference
			End Get
			Set
				If (String.Equals(Me._BookReference, value) = false) Then
					Me._BookReference = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(28)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me._Title = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="NVarChar(50)")>  _
		Public Property Category() As String
			Get
				Return Me._Category
			End Get
			Set
				If (String.Equals(Me._Category, value) = false) Then
					Me._Category = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdBookingId", DbType:="Int NOT NULL")>  _
		Public Property AdBookingId() As Integer
			Get
				Return Me._AdBookingId
			End Get
			Set
				If ((Me._AdBookingId = value)  _
							= false) Then
					Me._AdBookingId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDate", DbType:="DateTime")>  _
		Public Property EndDate() As System.Nullable(Of Date)
			Get
				Return Me._EndDate
			End Get
			Set
				If (Me._EndDate.Equals(value) = false) Then
					Me._EndDate = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class spOnlineAdSelectUserCurrentResult
		
		Private _AdDesignID As Integer
		
		Private _BookReference As String
		
		Private _AdBookingId As Integer
		
		Private _EndDate As System.Nullable(Of Date)
		
		Private _Title As String
		
		Private _Status As String
		
		Private _Category As String
		
		Private _StartDate As System.Nullable(Of Date)
		
		Private _EndDate1 As System.Nullable(Of Date)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdDesignID", DbType:="Int NOT NULL")>  _
		Public Property AdDesignID() As Integer
			Get
				Return Me._AdDesignID
			End Get
			Set
				If ((Me._AdDesignID = value)  _
							= false) Then
					Me._AdDesignID = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BookReference", DbType:="NChar(10)")>  _
		Public Property BookReference() As String
			Get
				Return Me._BookReference
			End Get
			Set
				If (String.Equals(Me._BookReference, value) = false) Then
					Me._BookReference = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdBookingId", DbType:="Int NOT NULL")>  _
		Public Property AdBookingId() As Integer
			Get
				Return Me._AdBookingId
			End Get
			Set
				If ((Me._AdBookingId = value)  _
							= false) Then
					Me._AdBookingId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDate", DbType:="DateTime")>  _
		Public Property EndDate() As System.Nullable(Of Date)
			Get
				Return Me._EndDate
			End Get
			Set
				If (Me._EndDate.Equals(value) = false) Then
					Me._EndDate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(28)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me._Title = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="VarChar(9)")>  _
		Public Property Status() As String
			Get
				Return Me._Status
			End Get
			Set
				If (String.Equals(Me._Status, value) = false) Then
					Me._Status = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="NVarChar(50)")>  _
		Public Property Category() As String
			Get
				Return Me._Category
			End Get
			Set
				If (String.Equals(Me._Category, value) = false) Then
					Me._Category = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="DateTime")>  _
		Public Property StartDate() As System.Nullable(Of Date)
			Get
				Return Me._StartDate
			End Get
			Set
				If (Me._StartDate.Equals(value) = false) Then
					Me._StartDate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDate1", DbType:="DateTime")>  _
		Public Property EndDate1() As System.Nullable(Of Date)
			Get
				Return Me._EndDate1
			End Get
			Set
				If (Me._EndDate1.Equals(value) = false) Then
					Me._EndDate1 = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class spTransactionsByUserResult
		
		Private _Ref_No As String
		
		Private _TransactionDate As System.Nullable(Of Date)
		
		Private _TransactionType As System.Nullable(Of Integer)
		
		Private _Amount As System.Nullable(Of Decimal)
		
		Private _UserId As String
		
		Private _Category As String
		
		Private _NumOfAds As System.Nullable(Of Integer)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Ref No]", Storage:="_Ref_No", DbType:="NVarChar(50)")>  _
		Public Property Ref_No() As String
			Get
				Return Me._Ref_No
			End Get
			Set
				If (String.Equals(Me._Ref_No, value) = false) Then
					Me._Ref_No = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransactionDate", DbType:="DateTime")>  _
		Public Property TransactionDate() As System.Nullable(Of Date)
			Get
				Return Me._TransactionDate
			End Get
			Set
				If (Me._TransactionDate.Equals(value) = false) Then
					Me._TransactionDate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransactionType", DbType:="Int")>  _
		Public Property TransactionType() As System.Nullable(Of Integer)
			Get
				Return Me._TransactionType
			End Get
			Set
				If (Me._TransactionType.Equals(value) = false) Then
					Me._TransactionType = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Amount", DbType:="Money")>  _
		Public Property Amount() As System.Nullable(Of Decimal)
			Get
				Return Me._Amount
			End Get
			Set
				If (Me._Amount.Equals(value) = false) Then
					Me._Amount = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="NVarChar(50)")>  _
		Public Property UserId() As String
			Get
				Return Me._UserId
			End Get
			Set
				If (String.Equals(Me._UserId, value) = false) Then
					Me._UserId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="NVarChar(50)")>  _
		Public Property Category() As String
			Get
				Return Me._Category
			End Get
			Set
				If (String.Equals(Me._Category, value) = false) Then
					Me._Category = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumOfAds", DbType:="Int")>  _
		Public Property NumOfAds() As System.Nullable(Of Integer)
			Get
				Return Me._NumOfAds
			End Get
			Set
				If (Me._NumOfAds.Equals(value) = false) Then
					Me._NumOfAds = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class spOnlineAdSelectUserExpiredResult
		
		Private _AdDesignID As Integer
		
		Private _BookReference As String
		
		Private _AdBookingId As Integer
		
		Private _AdTypeId As System.Nullable(Of Integer)
		
		Private _EndDate As System.Nullable(Of Date)
		
		Private _Title As String
		
		Private _Status As String
		
		Private _Category As String
		
		Private _StartDate As System.Nullable(Of Date)
		
		Private _EndDate1 As System.Nullable(Of Date)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdDesignID", DbType:="Int NOT NULL")>  _
		Public Property AdDesignID() As Integer
			Get
				Return Me._AdDesignID
			End Get
			Set
				If ((Me._AdDesignID = value)  _
							= false) Then
					Me._AdDesignID = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BookReference", DbType:="NChar(10)")>  _
		Public Property BookReference() As String
			Get
				Return Me._BookReference
			End Get
			Set
				If (String.Equals(Me._BookReference, value) = false) Then
					Me._BookReference = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdBookingId", DbType:="Int NOT NULL")>  _
		Public Property AdBookingId() As Integer
			Get
				Return Me._AdBookingId
			End Get
			Set
				If ((Me._AdBookingId = value)  _
							= false) Then
					Me._AdBookingId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdTypeId", DbType:="Int")>  _
		Public Property AdTypeId() As System.Nullable(Of Integer)
			Get
				Return Me._AdTypeId
			End Get
			Set
				If (Me._AdTypeId.Equals(value) = false) Then
					Me._AdTypeId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDate", DbType:="DateTime")>  _
		Public Property EndDate() As System.Nullable(Of Date)
			Get
				Return Me._EndDate
			End Get
			Set
				If (Me._EndDate.Equals(value) = false) Then
					Me._EndDate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(28)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me._Title = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="VarChar(9)")>  _
		Public Property Status() As String
			Get
				Return Me._Status
			End Get
			Set
				If (String.Equals(Me._Status, value) = false) Then
					Me._Status = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="NVarChar(50)")>  _
		Public Property Category() As String
			Get
				Return Me._Category
			End Get
			Set
				If (String.Equals(Me._Category, value) = false) Then
					Me._Category = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="DateTime")>  _
		Public Property StartDate() As System.Nullable(Of Date)
			Get
				Return Me._StartDate
			End Get
			Set
				If (Me._StartDate.Equals(value) = false) Then
					Me._StartDate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDate1", DbType:="DateTime")>  _
		Public Property EndDate1() As System.Nullable(Of Date)
			Get
				Return Me._EndDate1
			End Get
			Set
				If (Me._EndDate1.Equals(value) = false) Then
					Me._EndDate1 = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class spLineAdSelectUserExpiredResult
		
		Private _AdDesignId As Integer
		
		Private _BookReference As String
		
		Private _Title As String
		
		Private _Category As String
		
		Private _AdBookingId As Integer
		
		Private _AdTypeId As System.Nullable(Of Integer)
		
		Private _EndDate As System.Nullable(Of Date)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdDesignId", DbType:="Int NOT NULL")>  _
		Public Property AdDesignId() As Integer
			Get
				Return Me._AdDesignId
			End Get
			Set
				If ((Me._AdDesignId = value)  _
							= false) Then
					Me._AdDesignId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BookReference", DbType:="NChar(10)")>  _
		Public Property BookReference() As String
			Get
				Return Me._BookReference
			End Get
			Set
				If (String.Equals(Me._BookReference, value) = false) Then
					Me._BookReference = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(28)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me._Title = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="NVarChar(50)")>  _
		Public Property Category() As String
			Get
				Return Me._Category
			End Get
			Set
				If (String.Equals(Me._Category, value) = false) Then
					Me._Category = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdBookingId", DbType:="Int NOT NULL")>  _
		Public Property AdBookingId() As Integer
			Get
				Return Me._AdBookingId
			End Get
			Set
				If ((Me._AdBookingId = value)  _
							= false) Then
					Me._AdBookingId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdTypeId", DbType:="Int")>  _
		Public Property AdTypeId() As System.Nullable(Of Integer)
			Get
				Return Me._AdTypeId
			End Get
			Set
				If (Me._AdTypeId.Equals(value) = false) Then
					Me._AdTypeId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDate", DbType:="DateTime")>  _
		Public Property EndDate() As System.Nullable(Of Date)
			Get
				Return Me._EndDate
			End Get
			Set
				If (Me._EndDate.Equals(value) = false) Then
					Me._EndDate = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class spRatecardsByCategoryResult
		
		Private _Publication As String
		
		Private _Rate As String
		
		Private _Description As String
		
		Private _MinCharge As System.Nullable(Of Decimal)
		
		Private _MaxCharge As System.Nullable(Of Decimal)
		
		Private _RatePerMeasureUnit As System.Nullable(Of Decimal)
		
		Private _MeasureUnitLimit As System.Nullable(Of Integer)
		
		Private _PhotoCharge As System.Nullable(Of Decimal)
		
		Private _BoldHeading As System.Nullable(Of Decimal)
		
		Private _OnlineEditionBundle As System.Nullable(Of Decimal)
		
		Private _Code As String
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Publication", DbType:="NVarChar(50)")>  _
		Public Property Publication() As String
			Get
				Return Me._Publication
			End Get
			Set
				If (String.Equals(Me._Publication, value) = false) Then
					Me._Publication = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rate", DbType:="NVarChar(50)")>  _
		Public Property Rate() As String
			Get
				Return Me._Rate
			End Get
			Set
				If (String.Equals(Me._Rate, value) = false) Then
					Me._Rate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(MAX)")>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me._Description = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MinCharge", DbType:="Money")>  _
		Public Property MinCharge() As System.Nullable(Of Decimal)
			Get
				Return Me._MinCharge
			End Get
			Set
				If (Me._MinCharge.Equals(value) = false) Then
					Me._MinCharge = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaxCharge", DbType:="Money")>  _
		Public Property MaxCharge() As System.Nullable(Of Decimal)
			Get
				Return Me._MaxCharge
			End Get
			Set
				If (Me._MaxCharge.Equals(value) = false) Then
					Me._MaxCharge = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RatePerMeasureUnit", DbType:="Money")>  _
		Public Property RatePerMeasureUnit() As System.Nullable(Of Decimal)
			Get
				Return Me._RatePerMeasureUnit
			End Get
			Set
				If (Me._RatePerMeasureUnit.Equals(value) = false) Then
					Me._RatePerMeasureUnit = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MeasureUnitLimit", DbType:="Int")>  _
		Public Property MeasureUnitLimit() As System.Nullable(Of Integer)
			Get
				Return Me._MeasureUnitLimit
			End Get
			Set
				If (Me._MeasureUnitLimit.Equals(value) = false) Then
					Me._MeasureUnitLimit = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhotoCharge", DbType:="Money")>  _
		Public Property PhotoCharge() As System.Nullable(Of Decimal)
			Get
				Return Me._PhotoCharge
			End Get
			Set
				If (Me._PhotoCharge.Equals(value) = false) Then
					Me._PhotoCharge = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BoldHeading", DbType:="Money")>  _
		Public Property BoldHeading() As System.Nullable(Of Decimal)
			Get
				Return Me._BoldHeading
			End Get
			Set
				If (Me._BoldHeading.Equals(value) = false) Then
					Me._BoldHeading = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OnlineEditionBundle", DbType:="Money")>  _
		Public Property OnlineEditionBundle() As System.Nullable(Of Decimal)
			Get
				Return Me._OnlineEditionBundle
			End Get
			Set
				If (Me._OnlineEditionBundle.Equals(value) = false) Then
					Me._OnlineEditionBundle = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="NChar(10)")>  _
		Public Property Code() As String
			Get
				Return Me._Code
			End Get
			Set
				If (String.Equals(Me._Code, value) = false) Then
					Me._Code = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class spReportWeeklySalesResult
		
		Private _iFlogID As Integer
		
		Private _Category As String
		
		Private _SubCategory As String
		
		Private _UserId As String
		
		Private _BookReference As String
		
		Private _BookingType As String
		
		Private _Status As String
		
		Private _NumOfWords As System.Nullable(Of Integer)
		
		Private _BoldHeadings As System.Nullable(Of Integer)
		
		Private _Photos As System.Nullable(Of Integer)
		
		Private _Publication As String
		
		Private _PriceExGST As System.Nullable(Of Decimal)
		
		Private _GST As System.Nullable(Of Decimal)
		
		Private _TotalPrice As System.Nullable(Of Decimal)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iFlogID", DbType:="Int NOT NULL")>  _
		Public Property iFlogID() As Integer
			Get
				Return Me._iFlogID
			End Get
			Set
				If ((Me._iFlogID = value)  _
							= false) Then
					Me._iFlogID = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="NVarChar(50)")>  _
		Public Property Category() As String
			Get
				Return Me._Category
			End Get
			Set
				If (String.Equals(Me._Category, value) = false) Then
					Me._Category = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubCategory", DbType:="NVarChar(50)")>  _
		Public Property SubCategory() As String
			Get
				Return Me._SubCategory
			End Get
			Set
				If (String.Equals(Me._SubCategory, value) = false) Then
					Me._SubCategory = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="NVarChar(50)")>  _
		Public Property UserId() As String
			Get
				Return Me._UserId
			End Get
			Set
				If (String.Equals(Me._UserId, value) = false) Then
					Me._UserId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BookReference", DbType:="NChar(10)")>  _
		Public Property BookReference() As String
			Get
				Return Me._BookReference
			End Get
			Set
				If (String.Equals(Me._BookReference, value) = false) Then
					Me._BookReference = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BookingType", DbType:="NVarChar(20)")>  _
		Public Property BookingType() As String
			Get
				Return Me._BookingType
			End Get
			Set
				If (String.Equals(Me._BookingType, value) = false) Then
					Me._BookingType = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="VarChar(9)")>  _
		Public Property Status() As String
			Get
				Return Me._Status
			End Get
			Set
				If (String.Equals(Me._Status, value) = false) Then
					Me._Status = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumOfWords", DbType:="Int")>  _
		Public Property NumOfWords() As System.Nullable(Of Integer)
			Get
				Return Me._NumOfWords
			End Get
			Set
				If (Me._NumOfWords.Equals(value) = false) Then
					Me._NumOfWords = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BoldHeadings", DbType:="Int")>  _
		Public Property BoldHeadings() As System.Nullable(Of Integer)
			Get
				Return Me._BoldHeadings
			End Get
			Set
				If (Me._BoldHeadings.Equals(value) = false) Then
					Me._BoldHeadings = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Photos", DbType:="Int")>  _
		Public Property Photos() As System.Nullable(Of Integer)
			Get
				Return Me._Photos
			End Get
			Set
				If (Me._Photos.Equals(value) = false) Then
					Me._Photos = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Publication", DbType:="NVarChar(50)")>  _
		Public Property Publication() As String
			Get
				Return Me._Publication
			End Get
			Set
				If (String.Equals(Me._Publication, value) = false) Then
					Me._Publication = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PriceExGST", DbType:="Decimal(0,0)")>  _
		Public Property PriceExGST() As System.Nullable(Of Decimal)
			Get
				Return Me._PriceExGST
			End Get
			Set
				If (Me._PriceExGST.Equals(value) = false) Then
					Me._PriceExGST = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GST", DbType:="Decimal(0,0)")>  _
		Public Property GST() As System.Nullable(Of Decimal)
			Get
				Return Me._GST
			End Get
			Set
				If (Me._GST.Equals(value) = false) Then
					Me._GST = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalPrice", DbType:="Money")>  _
		Public Property TotalPrice() As System.Nullable(Of Decimal)
			Get
				Return Me._TotalPrice
			End Get
			Set
				If (Me._TotalPrice.Equals(value) = false) Then
					Me._TotalPrice = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class spReportIncomeReportResult
		
		Private _TransactionDate As System.Nullable(Of Date)
		
		Private _UserId As String
		
		Private _BookReference As String
		
		Private _BookingType As String
		
		Private _TransactionType As String
		
		Private _PriceExGST As System.Nullable(Of Decimal)
		
		Private _GST As System.Nullable(Of Decimal)
		
		Private _TotalPrice As System.Nullable(Of Decimal)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransactionDate", DbType:="DateTime")>  _
		Public Property TransactionDate() As System.Nullable(Of Date)
			Get
				Return Me._TransactionDate
			End Get
			Set
				If (Me._TransactionDate.Equals(value) = false) Then
					Me._TransactionDate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="NVarChar(50)")>  _
		Public Property UserId() As String
			Get
				Return Me._UserId
			End Get
			Set
				If (String.Equals(Me._UserId, value) = false) Then
					Me._UserId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BookReference", DbType:="NVarChar(50)")>  _
		Public Property BookReference() As String
			Get
				Return Me._BookReference
			End Get
			Set
				If (String.Equals(Me._BookReference, value) = false) Then
					Me._BookReference = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BookingType", DbType:="NVarChar(20)")>  _
		Public Property BookingType() As String
			Get
				Return Me._BookingType
			End Get
			Set
				If (String.Equals(Me._BookingType, value) = false) Then
					Me._BookingType = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransactionType", DbType:="VarChar(11)")>  _
		Public Property TransactionType() As String
			Get
				Return Me._TransactionType
			End Get
			Set
				If (String.Equals(Me._TransactionType, value) = false) Then
					Me._TransactionType = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PriceExGST", DbType:="Decimal(0,0)")>  _
		Public Property PriceExGST() As System.Nullable(Of Decimal)
			Get
				Return Me._PriceExGST
			End Get
			Set
				If (Me._PriceExGST.Equals(value) = false) Then
					Me._PriceExGST = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GST", DbType:="Decimal(0,0)")>  _
		Public Property GST() As System.Nullable(Of Decimal)
			Get
				Return Me._GST
			End Get
			Set
				If (Me._GST.Equals(value) = false) Then
					Me._GST = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalPrice", DbType:="Money")>  _
		Public Property TotalPrice() As System.Nullable(Of Decimal)
			Get
				Return Me._TotalPrice
			End Get
			Set
				If (Me._TotalPrice.Equals(value) = false) Then
					Me._TotalPrice = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class spAdBookingsSearchResult
		
		Private _AdBookingId As Integer
		
		Private _BookReference As String
		
		Private _ParentCategory As String
		
		Private _SubCategory As String
		
		Private _BookingDate As System.Nullable(Of Date)
		
		Private _BookingType As String
		
		Private _TotalPrice As System.Nullable(Of Decimal)
		
		Private _UserId As String
		
		Private _BookingStatus As System.Nullable(Of Integer)
		
		Private _Editions As System.Nullable(Of Integer)
		
		Private _Designs As System.Nullable(Of Integer)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdBookingId", DbType:="Int NOT NULL")>  _
		Public Property AdBookingId() As Integer
			Get
				Return Me._AdBookingId
			End Get
			Set
				If ((Me._AdBookingId = value)  _
							= false) Then
					Me._AdBookingId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BookReference", DbType:="NChar(10)")>  _
		Public Property BookReference() As String
			Get
				Return Me._BookReference
			End Get
			Set
				If (String.Equals(Me._BookReference, value) = false) Then
					Me._BookReference = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ParentCategory", DbType:="NVarChar(50)")>  _
		Public Property ParentCategory() As String
			Get
				Return Me._ParentCategory
			End Get
			Set
				If (String.Equals(Me._ParentCategory, value) = false) Then
					Me._ParentCategory = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubCategory", DbType:="NVarChar(50)")>  _
		Public Property SubCategory() As String
			Get
				Return Me._SubCategory
			End Get
			Set
				If (String.Equals(Me._SubCategory, value) = false) Then
					Me._SubCategory = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BookingDate", DbType:="DateTime")>  _
		Public Property BookingDate() As System.Nullable(Of Date)
			Get
				Return Me._BookingDate
			End Get
			Set
				If (Me._BookingDate.Equals(value) = false) Then
					Me._BookingDate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BookingType", DbType:="NVarChar(20)")>  _
		Public Property BookingType() As String
			Get
				Return Me._BookingType
			End Get
			Set
				If (String.Equals(Me._BookingType, value) = false) Then
					Me._BookingType = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalPrice", DbType:="Money")>  _
		Public Property TotalPrice() As System.Nullable(Of Decimal)
			Get
				Return Me._TotalPrice
			End Get
			Set
				If (Me._TotalPrice.Equals(value) = false) Then
					Me._TotalPrice = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="NVarChar(50)")>  _
		Public Property UserId() As String
			Get
				Return Me._UserId
			End Get
			Set
				If (String.Equals(Me._UserId, value) = false) Then
					Me._UserId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BookingStatus", DbType:="Int")>  _
		Public Property BookingStatus() As System.Nullable(Of Integer)
			Get
				Return Me._BookingStatus
			End Get
			Set
				If (Me._BookingStatus.Equals(value) = false) Then
					Me._BookingStatus = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Editions", DbType:="Int")>  _
		Public Property Editions() As System.Nullable(Of Integer)
			Get
				Return Me._Editions
			End Get
			Set
				If (Me._Editions.Equals(value) = false) Then
					Me._Editions = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Designs", DbType:="Int")>  _
		Public Property Designs() As System.Nullable(Of Integer)
			Get
				Return Me._Designs
			End Get
			Set
				If (Me._Designs.Equals(value) = false) Then
					Me._Designs = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class spOnlineAdSelectByLineAdDesignResult
		
		Private _AdDesignId As System.Nullable(Of Integer)
		
		Private _ContactName As String
		
		Private _ContactType As String
		
		Private _ContactValue As String
		
		Private _Description As String
		
		Private _Heading As String
		
		Private _HtmlText As String
		
		Private _LocationAreaId As System.Nullable(Of Integer)
		
		Private _LocationId As System.Nullable(Of Integer)
		
		Private _NumOfViews As System.Nullable(Of Integer)
		
		Private _OnlineAdId As Integer
		
		Private _Price As System.Nullable(Of Decimal)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdDesignId", DbType:="Int")>  _
		Public Property AdDesignId() As System.Nullable(Of Integer)
			Get
				Return Me._AdDesignId
			End Get
			Set
				If (Me._AdDesignId.Equals(value) = false) Then
					Me._AdDesignId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactName", DbType:="NVarChar(200)")>  _
		Public Property ContactName() As String
			Get
				Return Me._ContactName
			End Get
			Set
				If (String.Equals(Me._ContactName, value) = false) Then
					Me._ContactName = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactType", DbType:="NVarChar(20)")>  _
		Public Property ContactType() As String
			Get
				Return Me._ContactType
			End Get
			Set
				If (String.Equals(Me._ContactType, value) = false) Then
					Me._ContactType = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactValue", DbType:="NVarChar(100)")>  _
		Public Property ContactValue() As String
			Get
				Return Me._ContactValue
			End Get
			Set
				If (String.Equals(Me._ContactValue, value) = false) Then
					Me._ContactValue = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(MAX)")>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me._Description = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Heading", DbType:="NVarChar(255)")>  _
		Public Property Heading() As String
			Get
				Return Me._Heading
			End Get
			Set
				If (String.Equals(Me._Heading, value) = false) Then
					Me._Heading = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HtmlText", DbType:="NVarChar(MAX)")>  _
		Public Property HtmlText() As String
			Get
				Return Me._HtmlText
			End Get
			Set
				If (String.Equals(Me._HtmlText, value) = false) Then
					Me._HtmlText = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LocationAreaId", DbType:="Int")>  _
		Public Property LocationAreaId() As System.Nullable(Of Integer)
			Get
				Return Me._LocationAreaId
			End Get
			Set
				If (Me._LocationAreaId.Equals(value) = false) Then
					Me._LocationAreaId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LocationId", DbType:="Int")>  _
		Public Property LocationId() As System.Nullable(Of Integer)
			Get
				Return Me._LocationId
			End Get
			Set
				If (Me._LocationId.Equals(value) = false) Then
					Me._LocationId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumOfViews", DbType:="Int")>  _
		Public Property NumOfViews() As System.Nullable(Of Integer)
			Get
				Return Me._NumOfViews
			End Get
			Set
				If (Me._NumOfViews.Equals(value) = false) Then
					Me._NumOfViews = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OnlineAdId", DbType:="Int NOT NULL")>  _
		Public Property OnlineAdId() As Integer
			Get
				Return Me._OnlineAdId
			End Get
			Set
				If ((Me._OnlineAdId = value)  _
							= false) Then
					Me._OnlineAdId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Price", DbType:="Money")>  _
		Public Property Price() As System.Nullable(Of Decimal)
			Get
				Return Me._Price
			End Get
			Set
				If (Me._Price.Equals(value) = false) Then
					Me._Price = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class spPublicationDeadlineSelectResult
		
		Private _PublicationId As System.Nullable(Of Integer)
		
		Private _EditionId As Integer
		
		Private _EditionDate As System.Nullable(Of Date)
		
		Private _Deadline As System.Nullable(Of Date)
		
		Private _Publication As String
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationId", DbType:="Int")>  _
		Public Property PublicationId() As System.Nullable(Of Integer)
			Get
				Return Me._PublicationId
			End Get
			Set
				If (Me._PublicationId.Equals(value) = false) Then
					Me._PublicationId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EditionId", DbType:="Int NOT NULL")>  _
		Public Property EditionId() As Integer
			Get
				Return Me._EditionId
			End Get
			Set
				If ((Me._EditionId = value)  _
							= false) Then
					Me._EditionId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EditionDate", DbType:="DateTime")>  _
		Public Property EditionDate() As System.Nullable(Of Date)
			Get
				Return Me._EditionDate
			End Get
			Set
				If (Me._EditionDate.Equals(value) = false) Then
					Me._EditionDate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deadline", DbType:="DateTime")>  _
		Public Property Deadline() As System.Nullable(Of Date)
			Get
				Return Me._Deadline
			End Get
			Set
				If (Me._Deadline.Equals(value) = false) Then
					Me._Deadline = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Publication", DbType:="NVarChar(50)")>  _
		Public Property Publication() As String
			Get
				Return Me._Publication
			End Get
			Set
				If (String.Equals(Me._Publication, value) = false) Then
					Me._Publication = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class usp_RateCard__SearchResult
		
		Private _RatecardId As Integer
		
		Private _Title As String
		
		Private _MinCharge As System.Nullable(Of Decimal)
		
		Private _MaxCharge As System.Nullable(Of Decimal)
		
		Private _CreatedDate As System.Nullable(Of Date)
		
		Private _CreatedByUser As String
		
		Private _PublicationCount As System.Nullable(Of Integer)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RatecardId", DbType:="Int NOT NULL")>  _
		Public Property RatecardId() As Integer
			Get
				Return Me._RatecardId
			End Get
			Set
				If ((Me._RatecardId = value)  _
							= false) Then
					Me._RatecardId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me._Title = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MinCharge", DbType:="Money")>  _
		Public Property MinCharge() As System.Nullable(Of Decimal)
			Get
				Return Me._MinCharge
			End Get
			Set
				If (Me._MinCharge.Equals(value) = false) Then
					Me._MinCharge = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaxCharge", DbType:="Money")>  _
		Public Property MaxCharge() As System.Nullable(Of Decimal)
			Get
				Return Me._MaxCharge
			End Get
			Set
				If (Me._MaxCharge.Equals(value) = false) Then
					Me._MaxCharge = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedDate", DbType:="DateTime")>  _
		Public Property CreatedDate() As System.Nullable(Of Date)
			Get
				Return Me._CreatedDate
			End Get
			Set
				If (Me._CreatedDate.Equals(value) = false) Then
					Me._CreatedDate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedByUser", DbType:="VarChar(50)")>  _
		Public Property CreatedByUser() As String
			Get
				Return Me._CreatedByUser
			End Get
			Set
				If (String.Equals(Me._CreatedByUser, value) = false) Then
					Me._CreatedByUser = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationCount", DbType:="Int")>  _
		Public Property PublicationCount() As System.Nullable(Of Integer)
			Get
				Return Me._PublicationCount
			End Get
			Set
				If (Me._PublicationCount.Equals(value) = false) Then
					Me._PublicationCount = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class usp_MainCategory__SelectForRateCardResult
		
		Private _MainCategoryId As System.Nullable(Of Integer)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MainCategoryId", DbType:="Int")>  _
		Public Property MainCategoryId() As System.Nullable(Of Integer)
			Get
				Return Me._MainCategoryId
			End Get
			Set
				If (Me._MainCategoryId.Equals(value) = false) Then
					Me._MainCategoryId = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class usp_Publication__SelectForRateCardResult
		
		Private _PublicationId As Integer
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationId", DbType:="Int NOT NULL")>  _
		Public Property PublicationId() As Integer
			Get
				Return Me._PublicationId
			End Get
			Set
				If ((Me._PublicationId = value)  _
							= false) Then
					Me._PublicationId = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class usp_PublicationRateCard__SelectResult
		
		Private _PublicationId As System.Nullable(Of Integer)
		
		Private _PublicationName As String
		
		Private _PublicationRateId As Integer
		
		Private _PublicationAdTypeId As System.Nullable(Of Integer)
		
		Private _PublicationCategoryId As System.Nullable(Of Integer)
		
		Private _PublicationCategoryName As String
		
		Private _RatecardName As String
		
		Private _RatecardId As Integer
		
		Private _MinCharge As System.Nullable(Of Decimal)
		
		Private _MaxCharge As System.Nullable(Of Decimal)
		
		Private _RatePerMeasureUnit As System.Nullable(Of Decimal)
		
		Private _MeasureUnitLimit As System.Nullable(Of Integer)
		
		Private _PhotoCharge As System.Nullable(Of Decimal)
		
		Private _BoldHeading As System.Nullable(Of Decimal)
		
		Private _OnlineEditionBundle As System.Nullable(Of Decimal)
		
		Private _LineAdSuperBoldHeading As System.Nullable(Of Decimal)
		
		Private _LineAdColourHeading As System.Nullable(Of Decimal)
		
		Private _LineAdColourBorder As System.Nullable(Of Decimal)
		
		Private _LineAdColourBackground As System.Nullable(Of Decimal)
		
		Private _LineAdExtraImage As System.Nullable(Of Decimal)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationId", DbType:="Int")>  _
		Public Property PublicationId() As System.Nullable(Of Integer)
			Get
				Return Me._PublicationId
			End Get
			Set
				If (Me._PublicationId.Equals(value) = false) Then
					Me._PublicationId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationName", DbType:="VarChar(50)")>  _
		Public Property PublicationName() As String
			Get
				Return Me._PublicationName
			End Get
			Set
				If (String.Equals(Me._PublicationName, value) = false) Then
					Me._PublicationName = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationRateId", DbType:="Int NOT NULL")>  _
		Public Property PublicationRateId() As Integer
			Get
				Return Me._PublicationRateId
			End Get
			Set
				If ((Me._PublicationRateId = value)  _
							= false) Then
					Me._PublicationRateId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationAdTypeId", DbType:="Int")>  _
		Public Property PublicationAdTypeId() As System.Nullable(Of Integer)
			Get
				Return Me._PublicationAdTypeId
			End Get
			Set
				If (Me._PublicationAdTypeId.Equals(value) = false) Then
					Me._PublicationAdTypeId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationCategoryId", DbType:="Int")>  _
		Public Property PublicationCategoryId() As System.Nullable(Of Integer)
			Get
				Return Me._PublicationCategoryId
			End Get
			Set
				If (Me._PublicationCategoryId.Equals(value) = false) Then
					Me._PublicationCategoryId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicationCategoryName", DbType:="NVarChar(50)")>  _
		Public Property PublicationCategoryName() As String
			Get
				Return Me._PublicationCategoryName
			End Get
			Set
				If (String.Equals(Me._PublicationCategoryName, value) = false) Then
					Me._PublicationCategoryName = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RatecardName", DbType:="NVarChar(50)")>  _
		Public Property RatecardName() As String
			Get
				Return Me._RatecardName
			End Get
			Set
				If (String.Equals(Me._RatecardName, value) = false) Then
					Me._RatecardName = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RatecardId", DbType:="Int NOT NULL")>  _
		Public Property RatecardId() As Integer
			Get
				Return Me._RatecardId
			End Get
			Set
				If ((Me._RatecardId = value)  _
							= false) Then
					Me._RatecardId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MinCharge", DbType:="Money")>  _
		Public Property MinCharge() As System.Nullable(Of Decimal)
			Get
				Return Me._MinCharge
			End Get
			Set
				If (Me._MinCharge.Equals(value) = false) Then
					Me._MinCharge = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaxCharge", DbType:="Money")>  _
		Public Property MaxCharge() As System.Nullable(Of Decimal)
			Get
				Return Me._MaxCharge
			End Get
			Set
				If (Me._MaxCharge.Equals(value) = false) Then
					Me._MaxCharge = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RatePerMeasureUnit", DbType:="Money")>  _
		Public Property RatePerMeasureUnit() As System.Nullable(Of Decimal)
			Get
				Return Me._RatePerMeasureUnit
			End Get
			Set
				If (Me._RatePerMeasureUnit.Equals(value) = false) Then
					Me._RatePerMeasureUnit = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MeasureUnitLimit", DbType:="Int")>  _
		Public Property MeasureUnitLimit() As System.Nullable(Of Integer)
			Get
				Return Me._MeasureUnitLimit
			End Get
			Set
				If (Me._MeasureUnitLimit.Equals(value) = false) Then
					Me._MeasureUnitLimit = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhotoCharge", DbType:="Money")>  _
		Public Property PhotoCharge() As System.Nullable(Of Decimal)
			Get
				Return Me._PhotoCharge
			End Get
			Set
				If (Me._PhotoCharge.Equals(value) = false) Then
					Me._PhotoCharge = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BoldHeading", DbType:="Money")>  _
		Public Property BoldHeading() As System.Nullable(Of Decimal)
			Get
				Return Me._BoldHeading
			End Get
			Set
				If (Me._BoldHeading.Equals(value) = false) Then
					Me._BoldHeading = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OnlineEditionBundle", DbType:="Money")>  _
		Public Property OnlineEditionBundle() As System.Nullable(Of Decimal)
			Get
				Return Me._OnlineEditionBundle
			End Get
			Set
				If (Me._OnlineEditionBundle.Equals(value) = false) Then
					Me._OnlineEditionBundle = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LineAdSuperBoldHeading", DbType:="Money")>  _
		Public Property LineAdSuperBoldHeading() As System.Nullable(Of Decimal)
			Get
				Return Me._LineAdSuperBoldHeading
			End Get
			Set
				If (Me._LineAdSuperBoldHeading.Equals(value) = false) Then
					Me._LineAdSuperBoldHeading = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LineAdColourHeading", DbType:="Money")>  _
		Public Property LineAdColourHeading() As System.Nullable(Of Decimal)
			Get
				Return Me._LineAdColourHeading
			End Get
			Set
				If (Me._LineAdColourHeading.Equals(value) = false) Then
					Me._LineAdColourHeading = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LineAdColourBorder", DbType:="Money")>  _
		Public Property LineAdColourBorder() As System.Nullable(Of Decimal)
			Get
				Return Me._LineAdColourBorder
			End Get
			Set
				If (Me._LineAdColourBorder.Equals(value) = false) Then
					Me._LineAdColourBorder = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LineAdColourBackground", DbType:="Money")>  _
		Public Property LineAdColourBackground() As System.Nullable(Of Decimal)
			Get
				Return Me._LineAdColourBackground
			End Get
			Set
				If (Me._LineAdColourBackground.Equals(value) = false) Then
					Me._LineAdColourBackground = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LineAdExtraImage", DbType:="Money")>  _
		Public Property LineAdExtraImage() As System.Nullable(Of Decimal)
			Get
				Return Me._LineAdExtraImage
			End Get
			Set
				If (Me._LineAdExtraImage.Equals(value) = false) Then
					Me._LineAdExtraImage = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class usp_LineAdTheme__FetchBorderColourResult
		
		Private _BorderColourCode As String
		
		Private _BorderColourName As String
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BorderColourCode", DbType:="VarChar(10)")>  _
		Public Property BorderColourCode() As String
			Get
				Return Me._BorderColourCode
			End Get
			Set
				If (String.Equals(Me._BorderColourCode, value) = false) Then
					Me._BorderColourCode = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BorderColourName", DbType:="VarChar(50)")>  _
		Public Property BorderColourName() As String
			Get
				Return Me._BorderColourName
			End Get
			Set
				If (String.Equals(Me._BorderColourName, value) = false) Then
					Me._BorderColourName = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class usp_LineAdTheme__FetchBackgroundColourResult
		
		Private _BackgroundColourCode As String
		
		Private _BackgroundColourName As String
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BackgroundColourCode", DbType:="VarChar(10)")>  _
		Public Property BackgroundColourCode() As String
			Get
				Return Me._BackgroundColourCode
			End Get
			Set
				If (String.Equals(Me._BackgroundColourCode, value) = false) Then
					Me._BackgroundColourCode = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BackgroundColourName", DbType:="VarChar(50)")>  _
		Public Property BackgroundColourName() As String
			Get
				Return Me._BackgroundColourName
			End Get
			Set
				If (String.Equals(Me._BackgroundColourName, value) = false) Then
					Me._BackgroundColourName = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class usp_LineAdTheme__FetchHeaderColourResult
		
		Private _HeaderColourCode As String
		
		Private _HeaderColourName As String
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HeaderColourCode", DbType:="VarChar(10)")>  _
		Public Property HeaderColourCode() As String
			Get
				Return Me._HeaderColourCode
			End Get
			Set
				If (String.Equals(Me._HeaderColourCode, value) = false) Then
					Me._HeaderColourCode = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HeaderColourName", DbType:="VarChar(50)")>  _
		Public Property HeaderColourName() As String
			Get
				Return Me._HeaderColourName
			End Get
			Set
				If (String.Equals(Me._HeaderColourName, value) = false) Then
					Me._HeaderColourName = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class spOnlineAdSelectRecentlyAddedResult
		
		Private _OnlineAdId As Integer
		
		Private _AdBookingId As Integer
		
		Private _Heading As String
		
		Private _AdText As String
		
		Private _DocumentId As String
		
		Private _StartDate As System.Nullable(Of Date)
		
		Private _AdBookingId1 As Integer
		
		Private _Category As String
		
		Private _CategoryId As System.Nullable(Of Integer)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OnlineAdId", DbType:="Int NOT NULL")>  _
		Public Property OnlineAdId() As Integer
			Get
				Return Me._OnlineAdId
			End Get
			Set
				If ((Me._OnlineAdId = value)  _
							= false) Then
					Me._OnlineAdId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdBookingId", DbType:="Int NOT NULL")>  _
		Public Property AdBookingId() As Integer
			Get
				Return Me._AdBookingId
			End Get
			Set
				If ((Me._AdBookingId = value)  _
							= false) Then
					Me._AdBookingId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Heading", DbType:="NVarChar(43)")>  _
		Public Property Heading() As String
			Get
				Return Me._Heading
			End Get
			Set
				If (String.Equals(Me._Heading, value) = false) Then
					Me._Heading = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdText", DbType:="NVarChar(MAX)")>  _
		Public Property AdText() As String
			Get
				Return Me._AdText
			End Get
			Set
				If (String.Equals(Me._AdText, value) = false) Then
					Me._AdText = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DocumentId", DbType:="NVarChar(100)")>  _
		Public Property DocumentId() As String
			Get
				Return Me._DocumentId
			End Get
			Set
				If (String.Equals(Me._DocumentId, value) = false) Then
					Me._DocumentId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="DateTime")>  _
		Public Property StartDate() As System.Nullable(Of Date)
			Get
				Return Me._StartDate
			End Get
			Set
				If (Me._StartDate.Equals(value) = false) Then
					Me._StartDate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdBookingId1", DbType:="Int NOT NULL")>  _
		Public Property AdBookingId1() As Integer
			Get
				Return Me._AdBookingId1
			End Get
			Set
				If ((Me._AdBookingId1 = value)  _
							= false) Then
					Me._AdBookingId1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="NVarChar(50)")>  _
		Public Property Category() As String
			Get
				Return Me._Category
			End Get
			Set
				If (String.Equals(Me._Category, value) = false) Then
					Me._Category = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryId", DbType:="Int")>  _
		Public Property CategoryId() As System.Nullable(Of Integer)
			Get
				Return Me._CategoryId
			End Get
			Set
				If (Me._CategoryId.Equals(value) = false) Then
					Me._CategoryId = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class spLineAdExportListResult
		
		Private _iflogId As Integer
		
		Private _AdBookingId As Integer
		
		Private _TotalPrice As System.Nullable(Of Decimal)
		
		Private _AdDesignId As Integer
		
		Private _LineAdId As Integer
		
		Private _OnlineAdId As System.Nullable(Of Integer)
		
		Private _MainCategoryId As System.Nullable(Of Integer)
		
		Private _MainCategory As String
		
		Private _SubCategoryId As Integer
		
		Private _SubCategory As String
		
		Private _HeaderAndText As String
		
		Private _AdText As String
		
		Private _AdHeader As String
		
		Private _NumOfWords As System.Nullable(Of Integer)
		
		Private _UsePhoto As Boolean
		
		Private _UseBoldHeader As System.Nullable(Of Boolean)
		
		Private _UserId As String
		
		Private _BookEntryId As Integer
		
		Private _BoldHeadingColourCode As String
		
		Private _BackgroundColourCode As String
		
		Private _BorderColourCode As String
		
		Private _IsSuperBoldHeading As System.Nullable(Of Boolean)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iflogId", DbType:="Int NOT NULL")>  _
		Public Property iflogId() As Integer
			Get
				Return Me._iflogId
			End Get
			Set
				If ((Me._iflogId = value)  _
							= false) Then
					Me._iflogId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdBookingId", DbType:="Int NOT NULL")>  _
		Public Property AdBookingId() As Integer
			Get
				Return Me._AdBookingId
			End Get
			Set
				If ((Me._AdBookingId = value)  _
							= false) Then
					Me._AdBookingId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalPrice", DbType:="Money")>  _
		Public Property TotalPrice() As System.Nullable(Of Decimal)
			Get
				Return Me._TotalPrice
			End Get
			Set
				If (Me._TotalPrice.Equals(value) = false) Then
					Me._TotalPrice = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdDesignId", DbType:="Int NOT NULL")>  _
		Public Property AdDesignId() As Integer
			Get
				Return Me._AdDesignId
			End Get
			Set
				If ((Me._AdDesignId = value)  _
							= false) Then
					Me._AdDesignId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LineAdId", DbType:="Int NOT NULL")>  _
		Public Property LineAdId() As Integer
			Get
				Return Me._LineAdId
			End Get
			Set
				If ((Me._LineAdId = value)  _
							= false) Then
					Me._LineAdId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OnlineAdId", DbType:="Int")>  _
		Public Property OnlineAdId() As System.Nullable(Of Integer)
			Get
				Return Me._OnlineAdId
			End Get
			Set
				If (Me._OnlineAdId.Equals(value) = false) Then
					Me._OnlineAdId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MainCategoryId", DbType:="Int")>  _
		Public Property MainCategoryId() As System.Nullable(Of Integer)
			Get
				Return Me._MainCategoryId
			End Get
			Set
				If (Me._MainCategoryId.Equals(value) = false) Then
					Me._MainCategoryId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MainCategory", DbType:="NVarChar(50)")>  _
		Public Property MainCategory() As String
			Get
				Return Me._MainCategory
			End Get
			Set
				If (String.Equals(Me._MainCategory, value) = false) Then
					Me._MainCategory = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubCategoryId", DbType:="Int NOT NULL")>  _
		Public Property SubCategoryId() As Integer
			Get
				Return Me._SubCategoryId
			End Get
			Set
				If ((Me._SubCategoryId = value)  _
							= false) Then
					Me._SubCategoryId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubCategory", DbType:="NVarChar(50)")>  _
		Public Property SubCategory() As String
			Get
				Return Me._SubCategory
			End Get
			Set
				If (String.Equals(Me._SubCategory, value) = false) Then
					Me._SubCategory = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HeaderAndText", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
		Public Property HeaderAndText() As String
			Get
				Return Me._HeaderAndText
			End Get
			Set
				If (String.Equals(Me._HeaderAndText, value) = false) Then
					Me._HeaderAndText = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdText", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
		Public Property AdText() As String
			Get
				Return Me._AdText
			End Get
			Set
				If (String.Equals(Me._AdText, value) = false) Then
					Me._AdText = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdHeader", DbType:="NVarChar(255)")>  _
		Public Property AdHeader() As String
			Get
				Return Me._AdHeader
			End Get
			Set
				If (String.Equals(Me._AdHeader, value) = false) Then
					Me._AdHeader = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumOfWords", DbType:="Int")>  _
		Public Property NumOfWords() As System.Nullable(Of Integer)
			Get
				Return Me._NumOfWords
			End Get
			Set
				If (Me._NumOfWords.Equals(value) = false) Then
					Me._NumOfWords = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UsePhoto", DbType:="Bit NOT NULL")>  _
		Public Property UsePhoto() As Boolean
			Get
				Return Me._UsePhoto
			End Get
			Set
				If ((Me._UsePhoto = value)  _
							= false) Then
					Me._UsePhoto = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UseBoldHeader", DbType:="Bit")>  _
		Public Property UseBoldHeader() As System.Nullable(Of Boolean)
			Get
				Return Me._UseBoldHeader
			End Get
			Set
				If (Me._UseBoldHeader.Equals(value) = false) Then
					Me._UseBoldHeader = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="NVarChar(50)")>  _
		Public Property UserId() As String
			Get
				Return Me._UserId
			End Get
			Set
				If (String.Equals(Me._UserId, value) = false) Then
					Me._UserId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BookEntryId", DbType:="Int NOT NULL")>  _
		Public Property BookEntryId() As Integer
			Get
				Return Me._BookEntryId
			End Get
			Set
				If ((Me._BookEntryId = value)  _
							= false) Then
					Me._BookEntryId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BoldHeadingColourCode", DbType:="VarChar(10)")>  _
		Public Property BoldHeadingColourCode() As String
			Get
				Return Me._BoldHeadingColourCode
			End Get
			Set
				If (String.Equals(Me._BoldHeadingColourCode, value) = false) Then
					Me._BoldHeadingColourCode = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BackgroundColourCode", DbType:="VarChar(10)")>  _
		Public Property BackgroundColourCode() As String
			Get
				Return Me._BackgroundColourCode
			End Get
			Set
				If (String.Equals(Me._BackgroundColourCode, value) = false) Then
					Me._BackgroundColourCode = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BorderColourCode", DbType:="VarChar(10)")>  _
		Public Property BorderColourCode() As String
			Get
				Return Me._BorderColourCode
			End Get
			Set
				If (String.Equals(Me._BorderColourCode, value) = false) Then
					Me._BorderColourCode = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSuperBoldHeading", DbType:="Bit")>  _
		Public Property IsSuperBoldHeading() As System.Nullable(Of Boolean)
			Get
				Return Me._IsSuperBoldHeading
			End Get
			Set
				If (Me._IsSuperBoldHeading.Equals(value) = false) Then
					Me._IsSuperBoldHeading = value
				End If
			End Set
		End Property
	End Class
End Namespace
